(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 14.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    696807,      12775]
NotebookOptionsPosition[    532299,       9644]
NotebookOutlinePosition[    689430,      12619]
CellTagsIndexPosition[    687782,      12571]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Crystal Lattices in Reciprocal Space", "Title",
 TaggingRules->{},
 CellChangeTimes->{
  3.35696210375764*^9, {3.5105608335994697`*^9, 3.510560842369482*^9}},
 CellTags->{"Name", "Title"},
 CellID->501575800,ExpressionUUID->"8a4bb6cf-f8d7-4cd4-93e1-4a26585040ab"],

Cell[CellGroupData[{

Cell[TextData[{
 "Caption",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CaptionCells", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "The caption provides all the information needed to understand the \
Demonstration. It should be between three and five sentences long, but \
clarity is more important than length. Include only text in this section \
\[LongDash] no code, graphics, etc. Do not change the cell style or copy \
cells from other sections. Do not copy text from books or the web. Write your \
ideas in your own words. If you want to refer to something on the web, link \
to it in the Details.", 
           StyleBox["\n", FontSize -> 4]}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCaptionCells"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "4fadb781-5d19-40da-823c-2ee6c0f6d8c1"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "CaptionCells"},
 CellTags->{"Caption", "CaptionCells", "TemplateCellGroup"},
 CellID->138150581,ExpressionUUID->"e2720a40-7b9e-4f8d-bbe2-ca3ca60ea70a"],

Cell[TextData[{
 "Reciprocal space or \"",
 Cell[BoxData[
  FormBox["k", TraditionalForm]], "InlineMath",ExpressionUUID->
  "d6fc541b-28c0-47df-83a2-2f9cf4b2a5e7"],
 " space\" is an important concept in solid-state physics and related fields \
of science. This Demonstration allows you to define lattice vectors in real \
space; it then displays the lattice in real space as well as its reciprocal \
counterpart. Additionally, the lattice vectors in both spaces are also given \
in matrix form."
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{
  3.35696210375764*^9, {3.510558989158647*^9, 3.5105592351789913`*^9}, {
   3.51055929058107*^9, 3.5105595591934576`*^9}, {3.5105595898035*^9, 
   3.510559600173515*^9}, {3.510677723326377*^9, 3.510677726170661*^9}, 
   3.510677867001743*^9, {3.5318438274512186`*^9, 3.531843828441258*^9}},
 CellID->190671489,ExpressionUUID->"855c7807-14be-4b54-9ec1-feede751b7da"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Initialization Code",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"InitializationCode", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{"Provide any code that must be evaluated before the ", 
           StyleBox["Manipulate", "MRbig"], 
           ". This will automatically be built into the ", 
           StyleBox["Manipulate", "MRbig"], 
           " in the final notebook version. Never use a package that is not \
included in the default distribution of ", 
           StyleBox["Mathematica", FontSlant -> "Italic"], 
           ". To use a package, use the ", 
           StyleBox["Initialization", "MRbig"], " option (with ", 
           StyleBox["Get", "MRbig"], ", not ", 
           StyleBox["Needs", "MRbig"], ") in the ", 
           StyleBox["Manipulate", "MRbig"], 
           " itself, and use the full name of the function from the package. \
For example:\n", 
           StyleBox[
           "  Manipulate[\n  \[Ellipsis]\n  ComputationalGeometry`ConvexHull[\
\[Ellipsis]]\[Ellipsis]\n  \[Ellipsis]\n  Initialization :> \
Get[\"ComputationalGeometry`\"],\n  \[Ellipsis]\n  ]", "MR"], 
           "\nIf you provide initialization code, include a ", 
           StyleBox["SaveDefinitions->True", "MRbig"], " option in the ", 
           StyleBox["Manipulate", "MRbig"], ".", 
           StyleBox["\n", FontSize -> 4]}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoInitializationCode"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "85efcb16-1950-48bd-8539-3a4ba53d0184"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "InitializationCode"},
 DefaultNewCellStyle->"Input",
 CellTags->{"Initialization Code", "InitializationCode", "TemplateCellGroup"},
 
 CellID->447669593,ExpressionUUID->"e2c77f25-88a9-41c7-a20c-cfe17c8cd157"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"LinePlot", "[", 
    RowBox[{"lattvec_", ",", "label_", ",", "reci_"}], "]"}], ":=", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"lines", ",", "lineplot"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"lines", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "1", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "0", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "1", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1", ",", "1"}], "}"}]}], "}"}]}], "}"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"lineplot", "=", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Specularity", "[", 
          RowBox[{"White", ",", "100"}], "]"}], ",", "\[IndentingNewLine]", 
         "Black", ",", "\[IndentingNewLine]", 
         RowBox[{"Thickness", "[", ".01", "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"Line", "[", 
            RowBox[{"#", ".", "lattvec"}], "]"}], "&"}], "/@", "lines"}], ",",
          "\[IndentingNewLine]", 
         RowBox[{"Arrowheads", "[", ".1", "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"Arrow", "[", 
            RowBox[{"Tube", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "#"}], "}"}], 
              ",", ".01"}], "]"}], "]"}], "&"}], "/@", "lattvec"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"Text", "[", 
            RowBox[{
             RowBox[{"Framed", "[", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"If", "[", 
                   RowBox[{"reci", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<kx\>\"", ",", "\"\<ky\>\"", ",", "\"\<kz\>\""}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}],
                     "}"}]}], "]"}], "[", 
                  RowBox[{"[", "#", "]"}], "]"}], ",", "Bold", ",", "14"}], 
                "]"}], ",", 
               RowBox[{"Background", "\[Rule]", "White"}]}], "]"}], ",", 
             RowBox[{"1.2", "*", 
              RowBox[{"lattvec", "[", 
               RowBox[{"[", "#", "]"}], "]"}]}]}], "]"}], "&"}], "/@", 
          RowBox[{"Range", "[", "3", "]"}]}]}], "\[IndentingNewLine]", 
        "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Graphics3D", "[", 
       RowBox[{"lineplot", ",", 
        RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
        RowBox[{"SphericalRegion", "\[Rule]", "True"}], ",", 
        RowBox[{"Lighting", "\[Rule]", "\"\<Neutral\>\""}], ",", 
        RowBox[{"Epilog", "->", 
         RowBox[{"Inset", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"label", ",", "16"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"Left", ",", "Bottom"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"Left", ",", "Bottom"}], "}"}]}], "]"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"250", ",", "250"}], "}"}]}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ReciLatt", "[", "lattvec_", "]"}], ":=", 
   RowBox[{
    RowBox[{"Inverse", "[", 
     RowBox[{"lattvec", "\[Transpose]"}], "]"}], "*", "2", "*", "Pi"}]}], 
  ";"}]}], "Input",
 TaggingRules->{},
 InitializationCell->True,
 CellChangeTimes->{{3.5106771908021297`*^9, 3.51067721300735*^9}, 
   3.5115909270902357`*^9, {3.511591181560614*^9, 3.511591330676827*^9}, {
   3.5115913852469034`*^9, 3.511591403566929*^9}, {3.511591500137064*^9, 
   3.5115915220810976`*^9}, {3.5316418520917797`*^9, 3.5316418523725805`*^9}},
 
 CellID->175598913,ExpressionUUID->"efe37013-a7c4-4ca3-916c-719dd5f48a37"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Manipulate",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"ManipulateGroup", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{"This section contains the ", 
           StyleBox["Manipulate", "MRbig"], 
           " input cell and its evaluated output cell. Make all control \
labels or labels in the output as descriptive as possible, with only proper \
nouns and proper adjectives capitalized. More description of the controls can \
be provided in the Details section below, if necessary. If you change this ", 
           
           StyleBox["Manipulate", "MRbig"], 
           " after creating screenshots and/or thumbnails, use ", 
           StyleBox["Update Thumbnail & Snapshots", FontWeight -> "Bold"], 
           " in the toolbar to update any copies in later sections. You can \
control the Flash preview for the Demonstration with the ", 
           StyleBox["AutorunSequencing", "MRbig"], " option. Use ", 
           StyleBox["SaveDefinitions->True", "MRbig"], 
           " if you provided initialization code in the previous section."}], 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoManipulateGroup"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "d7ff6170-7588-410d-91fe-02ca7f848f90"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "ManipulateGroup"},
 DefaultNewCellStyle->"Input",
 CellTags->{"Manipulate", "ManipulateGroup", "TemplateCellGroup"},
 CellID->791025314,ExpressionUUID->"42bd5c21-704f-4e5d-b440-74a512685475"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"LinePlot", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"real11", ",", "real12", ",", "real13"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"real21", ",", "real22", ",", "real23"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"real31", ",", "real32", ",", "real33"}], "}"}]}], 
            "}"}], ",", "\"\<\\nlattice in real space\>\"", ",", "False"}], 
          "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"LinePlot", "[", 
          RowBox[{
           RowBox[{"ReciLatt", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"real11", ",", "real12", ",", "real13"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"real21", ",", "real22", ",", "real23"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"real31", ",", "real32", ",", "real33"}], "}"}]}], 
             "}"}], "]"}], ",", "\"\<\\nlattice in reciprocal space\>\"", ",",
            "True"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Text", "@", 
          RowBox[{"MatrixForm", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"real11", ",", "real12", ",", "real13"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"real21", ",", "real22", ",", "real23"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"real31", ",", "real32", ",", "real33"}], "}"}]}], 
            "}"}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"Text", "@", 
          RowBox[{"MatrixForm", "[", 
           RowBox[{"ReciLatt", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"real11", ",", "real12", ",", "real13"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"real21", ",", "real22", ",", "real23"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"real31", ",", "real32", ",", "real33"}], "}"}]}], 
             "}"}], "]"}], "]"}]}]}], "}"}]}], "}"}], ",", 
     RowBox[{"Spacings", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1.5", ",", "1.5"}], "}"}]}], ",", 
     RowBox[{"Alignment", "\[Rule]", "Left"}], ",", 
     RowBox[{"Dividers", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"True", ",", "True", ",", "True"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"True", ",", "False", ",", "True"}], "}"}]}], "}"}]}]}], 
    "]"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Column", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"OpenerView", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{
            "\"\<Select a preset lattice\[Ellipsis]\>\"", ",", "Bold"}], 
            "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Row", "[", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Button", "[", 
               RowBox[{"\"\<simple cubic\>\"", ",", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"real11", ",", "real12", ",", "real13"}], "}"}], 
                   ",", 
                   RowBox[{"{", 
                    RowBox[{"real21", ",", "real22", ",", "real23"}], "}"}], 
                   ",", 
                   RowBox[{"{", 
                    RowBox[{"real31", ",", "real32", ",", "real33"}], "}"}]}],
                   "}"}], "=", 
                 RowBox[{"IdentityMatrix", "[", "3", "]"}]}], ",", 
                RowBox[{"ImageSize", "\[Rule]", "100"}]}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Button", "[", 
               RowBox[{"\"\<fcc\>\"", ",", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"real11", ",", "real12", ",", "real13"}], "}"}], 
                   ",", 
                   RowBox[{"{", 
                    RowBox[{"real21", ",", "real22", ",", "real23"}], "}"}], 
                   ",", 
                   RowBox[{"{", 
                    RowBox[{"real31", ",", "real32", ",", "real33"}], "}"}]}],
                   "}"}], "=", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"1", ",", "1", ",", "0"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"1", ",", "0", ",", "1"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "1", ",", "1"}], "}"}]}], "}"}]}], ",", 
                
                RowBox[{"ImageSize", "\[Rule]", "80"}]}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Button", "[", 
               RowBox[{"\"\<bcc\>\"", ",", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"real11", ",", "real12", ",", "real13"}], "}"}], 
                   ",", 
                   RowBox[{"{", 
                    RowBox[{"real21", ",", "real22", ",", "real23"}], "}"}], 
                   ",", 
                   RowBox[{"{", 
                    RowBox[{"real31", ",", "real32", ",", "real33"}], "}"}]}],
                   "}"}], "=", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "1", ",", "1"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"1", ",", "1", ",", 
                    RowBox[{"-", "1"}]}], "}"}]}], "}"}]}], ",", 
                RowBox[{"ImageSize", "\[Rule]", "80"}]}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Button", "[", 
               RowBox[{"\"\<hexagonal\>\"", ",", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"real11", ",", "real12", ",", "real13"}], "}"}], 
                   ",", 
                   RowBox[{"{", 
                    RowBox[{"real21", ",", "real22", ",", "real23"}], "}"}], 
                   ",", 
                   RowBox[{"{", 
                    RowBox[{"real31", ",", "real32", ",", "real33"}], "}"}]}],
                   "}"}], "=", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{".5", ",", 
                    RowBox[{
                    RowBox[{"-", ".5"}], "*", 
                    RowBox[{"Sqrt", "[", "3", "]"}]}], ",", "0"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{".5", ",", 
                    RowBox[{".5", "*", 
                    RowBox[{"Sqrt", "[", "3", "]"}]}], ",", "0"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], ",", 
                
                RowBox[{"ImageSize", "\[Rule]", "100"}]}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Button", "[", 
               RowBox[{"\"\<tetragonal\>\"", ",", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"real11", ",", "real12", ",", "real13"}], "}"}], 
                   ",", 
                   RowBox[{"{", 
                    RowBox[{"real21", ",", "real22", ",", "real23"}], "}"}], 
                   ",", 
                   RowBox[{"{", 
                    RowBox[{"real31", ",", "real32", ",", "real33"}], "}"}]}],
                   "}"}], "=", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", ".5"}], "}"}]}], "}"}]}], ",", 
                RowBox[{"ImageSize", "\[Rule]", "100"}]}], "]"}]}], 
             "\[IndentingNewLine]", "}"}], "]"}]}], "\[IndentingNewLine]", 
          "}"}], ",", 
         RowBox[{"Dynamic", "[", "state1", "]"}]}], "]"}], ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"OpenerView", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{
            "\"\<\[Ellipsis] or set real space lattice vectors manually\>\"", 
             ",", "Bold"}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Grid", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{"\"\<x\>\"", ",", "\[IndentingNewLine]", 
                 RowBox[{"Control", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"real11", ",", "1", ",", "\"\<\>\""}], "}"}], ",", 
                    RowBox[{"-", "1"}], ",", "1", ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Small"}]}], "}"}], "]"}],
                  ",", "\[IndentingNewLine]", 
                 RowBox[{"Control", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"real12", ",", "0", ",", "\"\<\>\""}], "}"}], ",", 
                    RowBox[{"-", "1"}], ",", "1", ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Small"}]}], "}"}], "]"}],
                  ",", "\[IndentingNewLine]", 
                 RowBox[{"Control", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"real13", ",", "0", ",", "\"\<\>\""}], "}"}], ",", 
                    RowBox[{"-", "1"}], ",", "1", ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Small"}]}], "}"}], 
                  "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{"\"\<y\>\"", ",", "\[IndentingNewLine]", 
                 RowBox[{"Control", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"real21", ",", "0", ",", "\"\<\>\""}], "}"}], ",", 
                    RowBox[{"-", "1"}], ",", "1", ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Small"}]}], "}"}], "]"}],
                  ",", "\[IndentingNewLine]", 
                 RowBox[{"Control", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"real22", ",", "1", ",", "\"\<\>\""}], "}"}], ",", 
                    RowBox[{"-", "1"}], ",", "1", ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Small"}]}], "}"}], "]"}],
                  ",", "\[IndentingNewLine]", 
                 RowBox[{"Control", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"real23", ",", "0", ",", "\"\<\>\""}], "}"}], ",", 
                    RowBox[{"-", "1"}], ",", "1", ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Small"}]}], "}"}], 
                  "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{"\"\<z\>\"", ",", "\[IndentingNewLine]", 
                 RowBox[{"Control", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"real31", ",", "0", ",", "\"\<\>\""}], "}"}], ",", 
                    RowBox[{"-", "1"}], ",", "1", ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Small"}]}], "}"}], "]"}],
                  ",", "\[IndentingNewLine]", 
                 RowBox[{"Control", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"real32", ",", "0", ",", "\"\<\>\""}], "}"}], ",", 
                    RowBox[{"-", "1"}], ",", "1", ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Small"}]}], "}"}], "]"}],
                  ",", "\[IndentingNewLine]", 
                 RowBox[{"Control", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"real33", ",", "1", ",", "\"\<\>\""}], "}"}], ",", 
                    RowBox[{"-", "1"}], ",", "1", ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Small"}]}], "}"}], 
                  "]"}]}], "\[IndentingNewLine]", "}"}]}], "}"}], ",", 
             RowBox[{"Alignment", "\[Rule]", "Left"}]}], "]"}]}], 
          "\[IndentingNewLine]", "}"}], ",", 
         RowBox[{"Dynamic", "[", "state2", "]"}]}], "]"}]}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Alignment", "\[Rule]", "Left"}], ",", 
     RowBox[{"Spacings", "\[Rule]", "1.5"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"state1", ",", "False"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"True", ",", "False"}], "}"}], ",", 
     RowBox[{"ControlType", "\[Rule]", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"state2", ",", "True"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"True", ",", "False"}], "}"}], ",", 
     RowBox[{"ControlType", "\[Rule]", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"AutorunSequencing", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "3", ",", "5", ",", "7"}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"SaveDefinitions", "\[Rule]", "True"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{
  3.35696210375764*^9, 3.5105578239119215`*^9, {3.5105580408322845`*^9, 
   3.510558088724353*^9}, {3.5105581218443995`*^9, 3.5105582693346057`*^9}, {
   3.5105583154746704`*^9, 3.51055836571675*^9}, {3.5105584640968876`*^9, 
   3.51055847975691*^9}, {3.510558584167056*^9, 3.510558735369269*^9}, {
   3.5105587712113204`*^9, 3.510558796711356*^9}, {3.510677136283678*^9, 
   3.510677158441894*^9}, {3.5106772312221713`*^9, 3.510677368032851*^9}, {
   3.5106774785679035`*^9, 3.510677518885935*^9}, 3.5106775642584715`*^9, {
   3.510677597623808*^9, 3.5106776131533604`*^9}, {3.5106776443494797`*^9, 
   3.510677651706216*^9}, {3.5106777557176156`*^9, 3.510677770795123*^9}, {
   3.511543702448937*^9, 3.511543759784553*^9}, {3.51159153098111*^9, 
   3.511591536111117*^9}, 3.513091107989934*^9, {3.5318434869625998`*^9, 
   3.5318435281192455`*^9}, {3.5318435692458906`*^9, 
   3.5318437179693394`*^9}, {3.5318437602885323`*^9, 3.531843760656047*^9}},
 CellID->788408435,ExpressionUUID->"9498f9be-8b0a-436d-85c8-fec56c95c13f"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`real11$$ = 1, $CellContext`real12$$ = 
    0, $CellContext`real13$$ = 0, $CellContext`real21$$ = 
    0, $CellContext`real22$$ = 1, $CellContext`real23$$ = 
    0, $CellContext`real31$$ = 0, $CellContext`real32$$ = 
    0, $CellContext`real33$$ = 1, $CellContext`state1$$ = 
    False, $CellContext`state2$$ = True, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`real11$$], 1, ""}, -1, 1}, {{
       Hold[$CellContext`real12$$], 0, ""}, -1, 1}, {{
       Hold[$CellContext`real13$$], 0, ""}, -1, 1}, {{
       Hold[$CellContext`real21$$], 0, ""}, -1, 1}, {{
       Hold[$CellContext`real22$$], 1, ""}, -1, 1}, {{
       Hold[$CellContext`real23$$], 0, ""}, -1, 1}, {{
       Hold[$CellContext`real31$$], 0, ""}, -1, 1}, {{
       Hold[$CellContext`real32$$], 0, ""}, -1, 1}, {{
       Hold[$CellContext`real33$$], 1, ""}, -1, 1}, {
      Hold[
       Column[{
         OpenerView[{
           Style["Select a preset lattice\[Ellipsis]", Bold], 
           Row[{
             Button[
             "simple cubic", {{$CellContext`real11$$, $CellContext`real12$$, \
$CellContext`real13$$}, {$CellContext`real21$$, $CellContext`real22$$, \
$CellContext`real23$$}, {$CellContext`real31$$, $CellContext`real32$$, \
$CellContext`real33$$}} = IdentityMatrix[3], ImageSize -> 100], 
             Button[
             "fcc", {{$CellContext`real11$$, $CellContext`real12$$, \
$CellContext`real13$$}, {$CellContext`real21$$, $CellContext`real22$$, \
$CellContext`real23$$}, {$CellContext`real31$$, $CellContext`real32$$, \
$CellContext`real33$$}} = {{1, 1, 0}, {1, 0, 1}, {0, 1, 1}}, ImageSize -> 80], 
             Button[
             "bcc", {{$CellContext`real11$$, $CellContext`real12$$, \
$CellContext`real13$$}, {$CellContext`real21$$, $CellContext`real22$$, \
$CellContext`real23$$}, {$CellContext`real31$$, $CellContext`real32$$, \
$CellContext`real33$$}} = {{-1, 1, 1}, {1, -1, 1}, {1, 1, -1}}, ImageSize -> 
              80], 
             Button[
             "hexagonal", {{$CellContext`real11$$, $CellContext`real12$$, \
$CellContext`real13$$}, {$CellContext`real21$$, $CellContext`real22$$, \
$CellContext`real23$$}, {$CellContext`real31$$, $CellContext`real32$$, \
$CellContext`real33$$}} = {{0.5, (-0.5) Sqrt[3], 0}, {0.5, 0.5 Sqrt[3], 0}, {
                0, 0, 1}}, ImageSize -> 100], 
             Button[
             "tetragonal", {{$CellContext`real11$$, $CellContext`real12$$, \
$CellContext`real13$$}, {$CellContext`real21$$, $CellContext`real22$$, \
$CellContext`real23$$}, {$CellContext`real31$$, $CellContext`real32$$, \
$CellContext`real33$$}} = {{1, 0, 0}, {0, 1, 0}, {0, 0, 0.5}}, ImageSize -> 
              100]}]}, 
          Dynamic[$CellContext`state1$$]], 
         OpenerView[{
           Style[
           "\[Ellipsis] or set real space lattice vectors manually", Bold], 
           Grid[{{"x", 
              Manipulate`Place[1], 
              Manipulate`Place[2], 
              Manipulate`Place[3]}, {"y", 
              Manipulate`Place[4], 
              Manipulate`Place[5], 
              Manipulate`Place[6]}, {"z", 
              Manipulate`Place[7], 
              Manipulate`Place[8], 
              Manipulate`Place[9]}}, Alignment -> Left]}, 
          Dynamic[$CellContext`state2$$]]}, Alignment -> Left, Spacings -> 
        1.5]], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`state1$$], False}, {True, False}}, {{
       Hold[$CellContext`state2$$], True}, {True, False}}}, Typeset`size$$ = {
    538., {165.5, 170.5}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = False, $CellContext`real11$556$$ = 
    0, $CellContext`real12$561$$ = 0, $CellContext`real13$562$$ = 
    0, $CellContext`real21$563$$ = 0, $CellContext`real22$564$$ = 
    0, $CellContext`real23$565$$ = 0, $CellContext`real31$566$$ = 
    0, $CellContext`real32$567$$ = 0, $CellContext`real33$568$$ = 
    0, $CellContext`state1$569$$ = False, $CellContext`state2$570$$ = False}, 
    
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`real11$$ = 1, $CellContext`real12$$ = 
        0, $CellContext`real13$$ = 0, $CellContext`real21$$ = 
        0, $CellContext`real22$$ = 1, $CellContext`real23$$ = 
        0, $CellContext`real31$$ = 0, $CellContext`real32$$ = 
        0, $CellContext`real33$$ = 1, $CellContext`state1$$ = 
        False, $CellContext`state2$$ = True}, "ControllerVariables" :> {
        Hold[$CellContext`real11$$, $CellContext`real11$556$$, 0], 
        Hold[$CellContext`real12$$, $CellContext`real12$561$$, 0], 
        Hold[$CellContext`real13$$, $CellContext`real13$562$$, 0], 
        Hold[$CellContext`real21$$, $CellContext`real21$563$$, 0], 
        Hold[$CellContext`real22$$, $CellContext`real22$564$$, 0], 
        Hold[$CellContext`real23$$, $CellContext`real23$565$$, 0], 
        Hold[$CellContext`real31$$, $CellContext`real31$566$$, 0], 
        Hold[$CellContext`real32$$, $CellContext`real32$567$$, 0], 
        Hold[$CellContext`real33$$, $CellContext`real33$568$$, 0], 
        Hold[$CellContext`state1$$, $CellContext`state1$569$$, False], 
        Hold[$CellContext`state2$$, $CellContext`state2$570$$, False]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Grid[{{
          $CellContext`LinePlot[{{$CellContext`real11$$, \
$CellContext`real12$$, $CellContext`real13$$}, {$CellContext`real21$$, \
$CellContext`real22$$, $CellContext`real23$$}, {$CellContext`real31$$, \
$CellContext`real32$$, $CellContext`real33$$}}, "\nlattice in real space", 
           False], 
          $CellContext`LinePlot[
           $CellContext`ReciLatt[{{$CellContext`real11$$, \
$CellContext`real12$$, $CellContext`real13$$}, {$CellContext`real21$$, \
$CellContext`real22$$, $CellContext`real23$$}, {$CellContext`real31$$, \
$CellContext`real32$$, $CellContext`real33$$}}], 
           "\nlattice in reciprocal space", True]}, {
          Text[
           
           MatrixForm[{{$CellContext`real11$$, $CellContext`real12$$, \
$CellContext`real13$$}, {$CellContext`real21$$, $CellContext`real22$$, \
$CellContext`real23$$}, {$CellContext`real31$$, $CellContext`real32$$, \
$CellContext`real33$$}}]], 
          Text[
           MatrixForm[
            $CellContext`ReciLatt[{{$CellContext`real11$$, \
$CellContext`real12$$, $CellContext`real13$$}, {$CellContext`real21$$, \
$CellContext`real22$$, $CellContext`real23$$}, {$CellContext`real31$$, \
$CellContext`real32$$, $CellContext`real33$$}}]]]}}, Spacings -> {1.5, 1.5}, 
        Alignment -> Left, 
        Dividers -> {{True, True, True}, {True, False, True}}], 
      "Specifications" :> {{{$CellContext`real11$$, 1, ""}, -1, 1, Appearance -> 
         "Labeled", ImageSize -> Small, ControlPlacement -> 
         1}, {{$CellContext`real12$$, 0, ""}, -1, 1, Appearance -> "Labeled", 
         ImageSize -> Small, ControlPlacement -> 
         2}, {{$CellContext`real13$$, 0, ""}, -1, 1, Appearance -> "Labeled", 
         ImageSize -> Small, ControlPlacement -> 
         3}, {{$CellContext`real21$$, 0, ""}, -1, 1, Appearance -> "Labeled", 
         ImageSize -> Small, ControlPlacement -> 
         4}, {{$CellContext`real22$$, 1, ""}, -1, 1, Appearance -> "Labeled", 
         ImageSize -> Small, ControlPlacement -> 
         5}, {{$CellContext`real23$$, 0, ""}, -1, 1, Appearance -> "Labeled", 
         ImageSize -> Small, ControlPlacement -> 
         6}, {{$CellContext`real31$$, 0, ""}, -1, 1, Appearance -> "Labeled", 
         ImageSize -> Small, ControlPlacement -> 
         7}, {{$CellContext`real32$$, 0, ""}, -1, 1, Appearance -> "Labeled", 
         ImageSize -> Small, ControlPlacement -> 
         8}, {{$CellContext`real33$$, 1, ""}, -1, 1, Appearance -> "Labeled", 
         ImageSize -> Small, ControlPlacement -> 9}, 
        Column[{
          OpenerView[{
            Style["Select a preset lattice\[Ellipsis]", Bold], 
            Row[{
              Button[
              "simple cubic", {{$CellContext`real11$$, $CellContext`real12$$, \
$CellContext`real13$$}, {$CellContext`real21$$, $CellContext`real22$$, \
$CellContext`real23$$}, {$CellContext`real31$$, $CellContext`real32$$, \
$CellContext`real33$$}} = IdentityMatrix[3], ImageSize -> 100], 
              Button[
              "fcc", {{$CellContext`real11$$, $CellContext`real12$$, \
$CellContext`real13$$}, {$CellContext`real21$$, $CellContext`real22$$, \
$CellContext`real23$$}, {$CellContext`real31$$, $CellContext`real32$$, \
$CellContext`real33$$}} = {{1, 1, 0}, {1, 0, 1}, {0, 1, 1}}, ImageSize -> 80], 
              Button[
              "bcc", {{$CellContext`real11$$, $CellContext`real12$$, \
$CellContext`real13$$}, {$CellContext`real21$$, $CellContext`real22$$, \
$CellContext`real23$$}, {$CellContext`real31$$, $CellContext`real32$$, \
$CellContext`real33$$}} = {{-1, 1, 1}, {1, -1, 1}, {1, 1, -1}}, ImageSize -> 
               80], 
              Button[
              "hexagonal", {{$CellContext`real11$$, $CellContext`real12$$, \
$CellContext`real13$$}, {$CellContext`real21$$, $CellContext`real22$$, \
$CellContext`real23$$}, {$CellContext`real31$$, $CellContext`real32$$, \
$CellContext`real33$$}} = {{0.5, (-0.5) Sqrt[3], 0}, {0.5, 0.5 Sqrt[3], 0}, {
                 0, 0, 1}}, ImageSize -> 100], 
              Button[
              "tetragonal", {{$CellContext`real11$$, $CellContext`real12$$, \
$CellContext`real13$$}, {$CellContext`real21$$, $CellContext`real22$$, \
$CellContext`real23$$}, {$CellContext`real31$$, $CellContext`real32$$, \
$CellContext`real33$$}} = {{1, 0, 0}, {0, 1, 0}, {0, 0, 0.5}}, ImageSize -> 
               100]}]}, 
           Dynamic[$CellContext`state1$$]], 
          OpenerView[{
            Style[
            "\[Ellipsis] or set real space lattice vectors manually", Bold], 
            Grid[{{"x", 
               Manipulate`Place[1], 
               Manipulate`Place[2], 
               Manipulate`Place[3]}, {"y", 
               Manipulate`Place[4], 
               Manipulate`Place[5], 
               Manipulate`Place[6]}, {"z", 
               Manipulate`Place[7], 
               Manipulate`Place[8], 
               Manipulate`Place[9]}}, Alignment -> Left]}, 
           Dynamic[$CellContext`state2$$]]}, Alignment -> Left, Spacings -> 
         1.5], {{$CellContext`state1$$, False}, {True, False}, ControlType -> 
         None}, {{$CellContext`state2$$, True}, {True, False}, ControlType -> 
         None}}, "Options" :> {AutorunSequencing -> {1, 3, 5, 7}}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{
      581.0999999999999, {246.40445861816409`, 252.13639221191409`}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`LinePlot[
         Pattern[$CellContext`lattvec, 
          Blank[]], 
         Pattern[$CellContext`label, 
          Blank[]], 
         Pattern[$CellContext`reci, 
          Blank[]]] := 
       Module[{$CellContext`lines, $CellContext`lineplot}, $CellContext`lines = \
{{{0, 0, 0}, {1, 0, 0}, {1, 1, 0}, {0, 1, 0}, {0, 0, 0}}, {{0, 0, 1}, {1, 0, 
            1}, {1, 1, 1}, {0, 1, 1}, {0, 0, 1}}, {{0, 0, 0}, {0, 0, 1}}, {{1,
             0, 0}, {1, 0, 1}}, {{1, 1, 0}, {1, 1, 1}}, {{0, 1, 0}, {0, 1, 
            1}}}; $CellContext`lineplot = {
            Specularity[White, 100], Black, 
            Thickness[0.01], 
            Map[Line[
              Dot[#, $CellContext`lattvec]]& , $CellContext`lines], 
            Arrowheads[0.1], 
            Map[Arrow[
              Tube[{{0, 0, 0}, #}, 0.01]]& , $CellContext`lattvec], 
            Map[Text[
              Framed[
               Style[
                Part[
                 
                 If[$CellContext`reci, {"kx", "ky", "kz"}, {
                  "x", "y", "z"}], #], Bold, 14], Background -> White], 1.2 
              Part[$CellContext`lattvec, #]]& , 
             Range[3]]}; 
         Graphics3D[$CellContext`lineplot, Boxed -> False, SphericalRegion -> 
           True, Lighting -> "Neutral", Epilog -> Inset[
             Style[$CellContext`label, 16], {Left, Bottom}, {Left, Bottom}], 
           ImageSize -> {250, 250}]], $CellContext`ReciLatt[
         Pattern[$CellContext`lattvec, 
          Blank[]]] := Inverse[
          Transpose[$CellContext`lattvec]] 2 Pi}; Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.5318437795293016`*^9, 3.531843799355095*^9}},
 CellID->76495603,ExpressionUUID->"8507885a-43c5-41a5-8ccc-7614bf5518ca"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Snapshots",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"SnapshotGroup", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "To create snapshots, click 'Add Snapshot' in the toolbar at least \
three times, and adjust the controls of each copy to show a range of \
interesting settings. Optional captions for the screenshots may be included \
in the Details section.", 
           StyleBox["\n", FontSize -> 4]}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoSnapshotGroup"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "100187fb-d0ac-4b2f-8f30-7b8e58bc71f4"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "SnapshotGroup"},
 DefaultNewCellStyle->"Text",
 CellTags->{"SnapshotGroup", "Snapshots", "TemplateCellGroup"},
 CellID->98938448,ExpressionUUID->"12a07f3f-e377-4c22-b5b6-45fda6f8b02a"],

Cell[BoxData[
 PaneBox[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
LfnWt77VmxfWxOmnn3777bffdttt6gbLsgelAuCIESPWrVu3YcOGD3/4w2qF
jRs3ym9feeUV9aMEK2nqs88+O3LkyJpccpQ81dHRIYf5gQ98QK1z7733yo97
9+4tehSesPbYY4+pH2fMmPHiiy9+73vfUz+ec845vblZRIru2edJ9oS1559/
Xq02bNiwBx988Kc//ekpp5yilqgPQ/0Prdw5CAAAANgWS1jL/+ZakL+ULW2b
OXNmTQG5XFc3RnZ3dw8cOFCWSFTRW02aNEmWjB07Vv3oCWtlN+ns7Dz00EPV
tb36PEtIMyZPnjx16lT1Y8CvUzU3N+/atautrU39+NRTT6mt7r777qLr67D2
i1/8Qi357W9/q5ZcffXVvXlh7eyzz5aYozcse1DyTEoAlB+POeYYaUZ7e3tP
T09Hjsp60iS151dffVVtLqFGLdG3LIb7ztr+/ft35ejbNaXxKivpTSr6zpon
rOmP1fSfZli8ePHknCeffDLgoQEAAADusB/WKk1q2rp1677yla+ce+65AwYM
0HntpJNO6s19yFUY5ZTa2lo1D7wnrJXdZNmyZepHCWilmhQwrEk8efDBBz/1
qU9JCjv++OP1A33ta18rur4Oa3oGe0mOEmpkyahRo3rzwpoklPwNgzwP+bH3
kEMOkcgjzdAvhPrjZUXdcsstap3QE4ysWbPmpptukldQXjX99bR+/frpTaoJ
a5dccolaraGhoWh7ghwaAAAA4A6bYa27u/u1114Ll9Ty7d27d8GCBepjLyEh
7qWXXtIX3mcdVJP7UEz+s2PHjt6CsFZ2E73+ddddV6olAcOavtVQEtOIESP0
4/qHNVlZf0FP4t7hhx8uC0844YTevLD2zW9+M3/DIM9DV1fX/Pnz9S2CirRK
vRxTpkxRS8444wy1+dixY9Xe5s2bpx4lXFh7+umnJVipJYMHD9YNMBXW9MNt
27ataHuCHBoAAADgDmthLXRSa21tvTzntttuy1+uE5DsVuLAIYccIv//5Cc/
WWo/nrBWdhN5TiRHyAoTJ07UC3/yk5/MnTtXfXGsNy9HXHzxxaUet66uTq1z
6aWXNjc3y5LHH388SFgTzz33nFqydOlSteSSSy7pLR3WgjwP2tatWx9++GEV
WITkX1l4xx13qB/ffPPNUhvqSPXnP//ZZ/+esDZ16lT14x//+Ed1y6V66KJh
LX/PpZ5kT1i7/fbb1Wp6gscNGzbMzVm+fHnAQwMAAADcYSesVfmZmp68XS68
5Uq7sbHxhz/8oboZ8uijj1bfgVKX7v3793/sscfk4datW3f22WcPGzbs1FNP
VTspnGCk7CY6NM2bN08e9Gc/+5n68corr1QrtLS0qHB01FFHPfPMM1u2bCls
vGQTtdVll122d+/e+vp69V2tIGHt+OOPX7hwoUSqk046SS258847e0uHtbIH
tX79+vfmTJs2TX3ZTUcYNSnik08+qX6UqCUvU2dn5z333DMsRw5fPcQtt9yi
1pk5c+aqVatknaJH4Qlr5513nvrxhRdekIe+//771Y/5Ya3onks9yZ6wpp+T
UaNGycm2Zs2ayZMnqyWrV68OeGjikUcemT17ttpEv8pyAsyfPz9/KhVZ4cYb
b5SVix47AAAAUD07YS3099SUn//854VT3ytyva3WWbFixeDBg9VCdW2v3Hff
fWqFwrBWdpOlS5eq6TjyHXrooYsXL9Zty/8mVNGbISWqHHHEEfl7UB/Y1ZQL
a7KangRSOfHEE3fv3t3rG9bKHpT+o3WSdvUX6I455hgVqQ4cOJD/pTbd1FNO
OaW1tVU/RH6rAk7dL3nH80yqneeHtVJ7Lvoke8KaZParr766psCHPvQhtUKQ
Q5OIpxbqeWnEV77ylcLXS8KvWrh27dqihw8AAABUyXJYC/09teeffz7/b4rV
5D518nyu8fLLL1944YVqOsSa3Ne78j8xkd+q5fl/utp/EyFtvuCCC9SneBIY
5RL9T3/6U/4Kf/nLXyZNmqS+UKamaiwkoU9/RWv8+PF61vr58+cXXV+FNcmJ
L7zwgjpqiSSSfXR4eeKJJ9Qe9A2ZwZ+HlpaWT3/60zqEyqFdfPHF+Z8Jyplw
880368/yJNRMnz49/8+RizvvvPO4445TK+R/CJVPUpJaob29vTf36eoXvvAF
1So5HNmD+uRLEmXZPRd9ktUHlNJ+vW1XV9esWbMk0qrNJeped911+bNllj00
fc+q/nRVNUktvOuuu/RC/TfjPH9CAgAAADDF2m2Qckms564Prbm5+cUXX1y8
ePGuXbtKrSNX7JINfVYIsUlnZ6es4N9+Pb1/KdL4nTt3BmmPDmvqx23btpX6
89k+/A/qwIEDDQ0Nb7/9ts/rLo8rK8h+Sq0g2+p5+AOSZ2nTpk2l7pwsu+ey
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
T8vFs1oyePBgvSsVlPTLcd111xVtQJDDLOQ5Lv82+LwQAcOafrht27YVbU+Q
M8FD3dko6fLVV19V2+obEcvurWx7Sh2v3lAihloiqUdlKHnR1ZJSvcP/VClU
uJ9SYU0/+WXP58J9/tM//ZNaxxPW9JO5du1atUSHtUp7TdGw9h//8R9qoeS+
W2+9Vf3fM20OAABAEHb+KLYnr8WS1IRcXx1yyCHqQlcv/PjHP66uplavXt1b
SVjTtm7d+vDDD6trZrFgwQJZeMcdd6gf33zzzVIb6mvmP//5z6XWKdoefSCf
/OQni25VV1en9nzppZc2NzfLkscff9z/srPSA9Rh7bzzztOfZegvH6k/JD11
6lT14x//+Ee1jtqJCkpy1sl/5MeJEyfqx5LIPHfu3G9961tBDrMoz3H5t0Ep
+kLosHbxxRfn798T1m6//Xa1mp6SccOGDXNzVEYIciZ4SP5VLbzpppvkPwMG
DNDfZyy7t7LtKXW86kHFE088oZZIP1VLrrzySrWkbO8oeqoUqjSsBTmfy4Y1
iU7qR/1Z8JNPPqmWqLAWotcUDWudnZ3q81B53k4//fSavMlhAAAAKmInrPXm
5bVwSe2RRx6ZPXu2ylNKS0vLvHnz5s+fnz8vh6xw4403ysql9qOutMVXvvKV
hoYGff125JFHqu80BQxr69evf2/OtGnT1Nff9FW0mpdPXwfK1V1TU5Ncv91z
zz3DcvQb+7fccotaZ+bMmatWrSp642Wp9qgD6d+//2OPPdbd3b1u3bqzzz5b
dn7qqafKbyWYqD1fdtll8vzU19frb5MFDGtlDzB/gpFrr71WooE88+pHSVjt
7e2yjlyjqiUvvPCC7OT+++9XP+qgpL9VJC9lY2OjnpxBpwP/wyzKc1xl21Dq
hZATTEXFo4466plnntmyZUt+k3RY08/DqFGjXnvttTVr1kyePFktUadrkDPB
Q3/io77Td9VVV+lfld1b2faUOl6955EjR7766quysn7q7r33Xp+zseypUqjS
sBbkfC4b1v70pz+pH48//viHHnpIzocxY8aoJSqsheg1pf7Ommc20e9///tF
nwcAAAB/1sJab25qkc2bN4fYUC441TVP/rQSkrY811FCruHVQj0Vv8eKFSsG
Dx5c825yTa7/OljwT9YmTJigNh8wYID+essxxxyjruIOHDiQ/0Ue9RFSTW6q
utbWVt2Y/Gb4TN1f2J78A1GZQrnvvvt6c59JqWkNChsQ/JM1/wPUoUB/C0z7
t3/7N7UHiWCeX6lm6KC0dOlSNTdFPkkoixcvDnKYRXmOq2wbfF6I/C+IlZq6
XzK+/o5Svg996ENqhSBnQiH9V95q3j2bR9m9lW1PqeP17FmTrKeid2/ps9H/
VClUaVgLcj6XDWv79u3znKt6nyqsheg1pcKanptF7WT79u2lXmgAAAAfNsNa
aPr2pPzPU/RdW3fddZdeqP+iVv7fufZ45ZVXLrzwQnVx2L9//0mTJuVfDKvb
lo488siyrWppafn0pz+ts4Zcpl588cX685fe3HN7880367/6JNds06dP98RV
OYrjjjtOrZD/uWGQ9rz88sv6QMQJJ5yQ/0mN5CD9HSK5BtZT1s+fP1+toP8g
lL4Ur+gAdVi7++67r732WnVZe+KJJ0qI1nvo7u7+whe+oFoo6UYOVn3KI7FL
r7No0aILLrhATaBXW1srL/Gf/vSn4IdZyHNcQdpQ6oX4y1/+IqfH4YcfXpP3
57rUpy3SYL1tV1fXrFmz9ET3Q4YMue666/R0o73BzgQP/VXKo446yvMn48vu
rWx7Sh2v2vPJJ5+slg8fPlxOgPyJXEqdjWX7gkfhftS2+v7knTt3ql3p2SDL
ns+F+9Tzako4VUvkXNLfRJMn8KGHHlL/138qotJeIztUP+q/ma5I8tWhdcqU
KaWeBwAAAH+JCGu9ub9e9LnPfU5/6aY3N8n2HXfcMWfOnD179uiFsoKs5n8x
r6h76krllODkqqyhoeHtt9/2eQK3bdsmK6g5yYuSbfXE8pWS3b7xxhu7du0q
+lt5ltSU76GVOkAd1tQ0dxIoSqUPeao3bdrkP7um/FaOQk+ZXsj/MMsK0obe
0i+E/ssC/rZu3SrPVan56nsDnAkVKbu3su0pdbxNTU0hJsQI0heqVP35LORE
3bhxo0+Pq/5Rtm/fLhlZdRD9qT0AAEClkhLW4BpPWAPQm/uQ8YILLjjyyCNV
7+DPqwEAgGoQ1hAOYQ0o1NTUVHPQeeedx4z9AACgGoQ1hNPa2vpaTqm/dwZk
UHt7+49//ONf/epXdXV1DKoAAKBKhDUAAAAAcBBhDQAAAAAcRFgDAAAAAAcR
1gAAAADAQYQ1AAAAAHAQYQ0AAAAAHERYAwAAAAAHEdYAAAAAwEGENUA5UELc
7QL+D2cp4D76KQCDCGvIuPxK2lOAOgsXcJYC7qOfAogCYQ1Zll9VpQt05XTm
qP/Lwvw6G3d7kUWcpYD76KcAIkJYQzbpwqqqakdHR1tbW2tra0tLS3OO/Ed+
lIXyK11nKbKwibMUcB/9FECkCGvIIF1bu7u7pXru3btXiqn8K/+X5f+TI//x
/EpWpsLCGs5SwH30UwBRI6wha3Rt7erqkjNfqmdbW5ss6StBfiUryGqysmxC
hYUFnKWA++inACwgrCFrdG1VRbOzs7NUYc0nq6lCrCts3MeBNOMsBdxHPwVg
AWENmaLvV1Hvgsp/gtRWRVZW74jqO1jiPhqkE2cp4D76KQA7CGvIDnXDiRTH
/fv3Nzc3d3R0BK+timwiG8rmshNuX0EUOEsB99FPAVhDWEN26FtWWltb9+3b
V2ltVWRD2ZzbVxARzlLAffRTANYQ1pAdUg3lPFdvhPp8B9yfbKjeDpVdUV5h
HGdp0jU2Ni5atGj16tVU1RSjnyYanRTJQlhDRui7VtT8yeFqq6KmX7Z878qj
jz46ZMiQmpqa5cuX23lE2Jf0szTjOjs7p02bVnPQ6NGj16xZE3ejYB79NLno
pEiiTIU1GQlbW1u3b9++7aCtyIwtW7Zs3ry5oaFh7dq1zc3N1ZTXPXv2vP76
67I3+U9PT0/Rk+25YP6Y43/e7tu3b+bMmbq4LFu2LILO4YqMd1KDZ6lsLjuR
XckOZbdxH5lV+uSRE0lOJ59rYIP9VMyZM0d66Pjx4++9996pU6f269dv3Lhx
cnFotIs4gX5KP61eLP00O50UaZKpsCajwbZ3i3usgj1SBzdt2lRfX79q1aqA
EyyXIpvX1dWp8ionVdGTzWBxGTNmjBSXadOmTZ8+PfVhLeOd1OxZKjuRXckO
M3sRqOzdu7fU+Wawny5fvlwu/EaOHNnR0aGW3HjjjdJh5eLQYAdxBP2Uflo9
+/00U50UaeJ+WFu8ePFpp5328Y9/XC9ZtGiRLJk9e3alu8p/GzCD9SXjVHnd
uHHjihUr3nnnnWrKq2y+cuVKKa8S1pqamoqebIV1pPOgwl/5n7fHHnvsggUL
5D+zZs1KfVjLeCc1e5bKTmRXXATKSVXqfDPYT+fNmyfdc+HChXrJ7t27Bw0a
NHbsWGPdwxn0U/pp9ez300x1UqSJ+2FNfPSjH5X+9bOf/Uz+39HRccoppxx+
+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
pkYELKa9Rvtpdoop0iRTYU1Gg23vFvdYZZUUgk2bNtXX169atSrgDMOlyOay
E9mV7DCz9UXZu3dv0ZPN7EXgnDlzpKyMHz/+3nvvnTp1ar9+/caNGyevguku
Er+Md9KMMztG1dXVqWtgOalKnW8G++m+fftmzpypLwKXLVtmunM4JOP9lGJq
RMBi2mu0n2anmCJNMhXW8t8GzGx92bhx44oVK955551q6otsLjuRXVFf5KQq
erIV1pHOgwp/5X/eLl++XArKyJEjOzo61JIbb7xRyo0UHbMdxAUZ76QZZ3aM
WrlypVwDS1hramoqdb4Z7KdjxoyRXjlt2rTp06enPqxlvJ9STI0IWEx7zfXT
TBVTpIn7Ye3RRx897bTTfvzjH+cvvOmmm2Th+vXrK9oV9UXVFxmvqq8vshPq
i52wNm/ePKkmCxcu1Et27949aNCgsWPHVnT+J0LGO2nGmR2j5BrYZlg79thj
FyxYIP+ZNWsWYS3dKKZG2A9rmSqmSBP3w5oMX7W1teeee65e0tHRcdRRR40c
ObLSb+Ny54a6c0OuYaq/c0NdCFFfgtwG+XxO6IvAGTNmSH2RZzt/4YQJEwYM
GODzZZyEyngnzTizY9TKlSsrug2yyn4q7Vf/yUJYy3g/pZgaEbCY9prrp5kq
pkgT98OamDJlivQvGcfUj0899ZT8+NWvfrXS/fCdaFVf6urqdu3aVU19kc1l
JxmvL8EnGKnyInDixIm1tbVdXV35C6+66irpBXItWmkvcFzGO2nGmR2jVq9e
LXtrbm4OOMFIlf1Uy0JYy3g/pZgaEbCY9prrp5kqpkiTRIS1n//859KVvve9
76kf1Ze433zzzXhblTjqj3jK4CZXLzt27KimvsjmshPZFX/KsxRVNTrLCXIR
OHz48GHDhnkWqgvCJUuWRHYEgG32xyiD/VTLQljLOIqpZab6KcUUCZWIsNbW
1jZw4MD3v//98v+urq6hQ4eec845cTcqkaQWyBMoz+eWLVvkFQ9XXGRD2Vx2
IruiuJRi8CJw0qRJUko63z1d1dSpU2Xhpk2bojwIwDbLYxRhDeFQTG0y1U8p
pkioRIS13tydxrW1tU1NTc8++6x0q+9///txtyiR1N/xbG9vl2cy9PuBsqFs
LjtRf8cz7mNylMGLwGuuuUbO+Q0bNuQvPPPMMwcOHMjzj5SxPEYR1hAOxdQm
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
8b5fEFQTVPq+Xx+39yRfpC8cYS00C42p8iH49ndwlNeMCz79o89WXLImi/3O
7uDwErxJJLWAuJ8t40K879dHWEu+SF84wlpoFhpTzUNQWCtCec2ycEmtcENO
m2SxX1CcKmFKwCZxh0ZwVJMsC11NQmwCp0Q6vBPWQrPQmNAPwfz8laK8ZlZF
E3b5b8tpkyz2C4pTJUwp2yTu0KgU1SSzKvqzL/mYqyoFIh3eCWuhWWhMiIdg
fv5wKK/ZVOlE/R7cPZto9l81B88T/yZxh0YIvIeTTdW878dcVSkQ6fBOWAvN
QmMqfQgKa2iU12yqsrMQ1hLN/qvm4Hni0yTu0AiHapJBlU7U778512xJFOnw
TlgLzUJjKnoI/vBNNSivGRRiwi4Pz+bRNBNRsf+qOXieFG0Sd2hUg2qSQYWd
paJqwlxVKRDp8E5YC81CYwI+BPPzV4/ymjXhJuzy8OwhgmYiQvZfNQfPk8Im
cYdGlbjwzprq3/fjnEmBSId3wlpoFhoT5CFKffubzl4RhspMCT1hl0f1e0CM
7BcUp0qY4mkSSa163NKWKUbe9+Pt4hSIdHgnrIVmoTFlH4LCagrlNTtMJTXm
70o6+wXFqRKm6CZxh4YpVJPsMFVNmOIsBSId3glroVlojP9D8O1vgyivGVHN
hF0enDNJZ7+gOFXCFN0FilYT3oIIgZEhI0JP1F+IuapSINLXjrAWmoXGlHoI
vv1tHOU1C6qcqN+DW2eTzn5BcaqEKYU9glO6SnzmngUG3/fr4+vPqRDpa0dY
C82nxpnleVxufYwC5TULzPYawlrSFR1gU/aIZZWqO9yhERrVJPWqnKi/kP9V
HxIh0teOsBZaqbsQzfKM88zPHxHKa+pVP2GXB18JTzr1wtl/RMcx+lWJapJ6
hb2mymrCCZMC6uWLaOeEtaTg29+Rorymm5EJu/z3STdMHPsFxc5bfNXgA2Ij
8p9SqknKGH/fr48TJhXUyxfRzglricD8/BYwWqaVqQm7PJi/K+kyW1C4QyNq
VJO0iuJ9P74ynw6ENS2btZUvqdlBeU0lgxN2eTB/V9Jl8IXjDg07qCapFNH7
foS1dCCsaRmsrRRWayiv6WN2wi4Pz26N7BM2Ze2F4w4Naxgc0ie69/2Yqyod
CGtapsY9/vCNZZTXlDE+YZcHJ0zSZeqF4w4NmxgcUibS9/0Ia+kQaWcnrLmJ
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
BhU9Q+JuVElMLJwykfYvwpplpSbv0uU1iRU2X6JTG2HNsmQltT7CWrokvdNV
Wk2S8tZfX/JTm5unlputMiVx1YSJhVMm0teRsGaZfwEqGtYSVGHzJTG1EdZs
cn9q5UJ8JTxNkt7pUv/WX19iU5ubp5abrTIiidXE0+C4m4NqRfo6EtYsCxHW
klhh8yUrteW3hLAWnaRM2OVBWEuTpHe67Lz115e01ObmqeVmq6qX0GriaXPc
zUG1In0dCWuWlS03Kauw+UKkNvvVtvBpt3PWpeDcDq7oaRB3owLhK+FpkqAT
r6gMvvXXl5DU5uap5WarqpTQpNbHxMKpE2n/IqxZVvZvZZaqsHE33CSXq23h
+Gnn+U/fq1xKsibs8uAr4WmS9E4Xrpqk5rLQ/Tpi57GCc7NV1Sh6AiRiWGZi
4fSJtH8R1iwrW1BKhbVU3nDlYLX1PGIfYc2oZE3UX4ivhKdJ0l/EsgNmWj9c
83C2jkT6ECG42arQEv2+H3NVpU+k/YuwZlnZOlKqvCb9wP25U20Ln3M7T37q
X2IlcRN2eWSnS2ZB0l/EsuNkqWqS1rfxVR0p+4Fj/uATaR2JYs/VcLNVoRV9
QeNuVFB8/fn/tXevMXdUh/3vH98xNrdiwCZYmJCCob4EjEmgruODC8EGAsah
5tIEgpGqkuaVjRIpxQ8Qqgo1IS9QhCxKwKDkRUsAiWJaBJgQqZjoUARRGzCi
UBVFXI4wmIP/dhx7nzleYmmYy5o1M2utWZfv55W9b7Nm9sz89m+e2bPjY3X7
oqy5pL54Vz5e0/njWsHgra38pxM3a13o67aO0JvaiLIWl6DfRP00qbwrlD9A
dDZsa/Nz1fJzVN2EniaUtfhY3b4oay5p1pA0/7hWMFRro6xZEuKllcvy44/1
zxPpCHqj65km6ay9g7Q2P1ctP0fVQQRpwrWq4mN1+6KsudS/rCW4RTtubZQ1
G8K9YFceXwmPTNAbHWnSlsvWpl618nuSW265pfNUzI4qFHGkCWUtPla3L8qa
S5pJoYjXEHdKprj5PgJlzbhwL9hVwFfCIxP0Rte/rCWbJg5yRL1qUdY6i6Op
jbiwcIysbl+UNZc000HxtTU2asFe2lLWzAr6gl0FlLXIBL3RtTr0R5pUspcj
6lWLstZNNMf9RlxYOEZW30rKmkuaoTDG4VBtxtOWsmZW5bsw9KA64ivhkQl6
o9Pc6anLGmkiGM8R9apFWesgpuN+I65VFSOrbyVlzRmdi3dJingNegdlj6m0
LXwgH1HWegj9gl0FlLXIBL3Rae7rxkiTNkzliHrVoqx1ULn8hx5Ud4V5GXo4
MMDqW0lZc8ZgWeNwqELPtG1V1m7JKd+bvePy3sZPREGv25UiuGBXAV8Jj0y4
Gx1pYlvPHFGvWoqyti2n7hb14xXCXeEjO+434sLCMbK6fVHWnGl1SUP1uStj
fFDU0C1tW5W1wiML8lNPraxF8zXwPL4SHplwNzqzaTL03HhNRIPmopY5ol6w
dWUtv4cRO8xCKy+/VP4pjfMS6Nsd33E/LiwcJavbF2XNGcraUFq1tlbfWVPX
sfxrNg5SMZXgRNnURnwlPDrhvo+kiXv6rU1+FK97qcqylv1D3pjfYSaeMlGm
CdeqipLV7Yuy5ox+XxDU8crW3UGr1iZXNsVal9/lFhIkn7w630pQTCUsMV2w
q6C8biBo4b6PrfZjlDWzGltbh7KWz4vCO5JyylQu56EHZQBlLUpW10/KmjOK
fXsldcIOPTdh0z9GOmpa6+rOQsnHqM6Q4nhbI7tgVwHbYGTCfR/NHvobem5C
VZcjbcuaoqkJdW9Wq3MgR6Gt8BEf9+NaVVGyun1R1pypC8o6irLGpm1KY2sb
tfn2QT5H5I2aF/sKet2W4l5X8/MVwak4CHej04qQHNLEqkKOtCprBZVlpO5M
SHljfClTuYiiWVcpa1Gyun1R1pzpdiy0HK98SrShrrWN2pQ1+da0PTulcSpB
iO+CXXl8JTw+4W50pImfRI4YL2sJpkx5ycSUJlxYOEpWty/KmjOtLrY8VhOv
ZKttra4GKZTPRWl7DqTOVDwX3wW7CviWQXzC3ehIE8+pVy3F21f3ppRTpu05
kI2j8kfcx/1GXFg4Ula3L8qaS60u4TVWStjI9ld+Kl8quXGtK58JKf+r/4On
Qa/bUV6wq4CyFp/INjqdNGEFdkO9aqm7duMf1+JOmeiP+424sHCkrL6blDXH
ul1yOdu0OfbiTGEvqrPWycdn71SHs1M0p+KnFJraiG8ZxCjcjU4gTbylXrUK
ZS2LCcUlH8tPKaSM/rvp/wqfSJoU5nHo4cAMq+8mZW0QmiH7fx1EsDpW2Ivq
rHX5A2UdzoHUnIqHIr5gVwFlLT6BbnR5+he2JU1cUq9alb+zpv49tVHpJ7Pj
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
bDiA/yhrCALrD+CJxo3xlk8Z/Hp1I3YR0EdZk9hwAP9R1hAE1h/AE+qNMSto
Y5/K+ponowLyKGsSGw7gP8oagsD6A3iCsobQUdYkNhzAf5Q1BIH1B/AEZQ2h
o6xJbDiA/yhrCALrD+AJyhpCR1mT2HAA/1HWEATWH8ATlDWEjrImseEA/lNs
p/nMzRSu65W/SyeR2SGgD9YfwBPdylr273Jq5G9ZsWJF/nUKj+85KiCPsiax
4QD+U2+ndXGZv72QsN0mBKix/gCe6FDWKpvaqP6QYOHxOj8BwC4C+ihrko1F
se1TZl+27QCGmnqlwZeJY6nNr22N22nWxQq9rEOM6kwIUIg4UHzbm3k4JEv8
XP7utV0ObctaoZEVzsSoPCSoeHy3UQF5lDXJxqLIf2I0Ynx8vG4Hld1VuEXu
cMp3Dcj4MvGc7A5DDyQSjQuzfOSzQ4zqTAhQsLH+ZHty47v0upfKNpzyXXJv
5k9f8DPmLCkUhGS1TdW2Za0xMvKHBMWvaRMxsIqyJnle1rL9idg/lFNS3lW+
3cMUo6yhD52FWTjy2SFGNScE1PG/rIlXq9wV191FWRuW3JUNPZCBWS1rhSLW
+JQC/bngrYQ+q2sLZc1gMZExXU7Juh2XnylmcJkEgbJmlubCzAdut084vGvo
w8b6Y7asKXbFdXdR1obVbVcWH3tlLU/9KaXykCDHA2GJ1bWFsmawmHQoa/AB
745ZmguznL9tr8nMu4Y+oixrgA/clLXKj1uVwyBiYBtlTaKswQbeHbP0F2Yh
Sdv+LYB3DX1Q1gBLnJU19SQKf1xru70QMdBHWZMGKWvyokbiyiGKz5OWyprm
1MsDtn1NqvzAjLya4qW6TUs+S/3Ezu+O5uvXPavDUzovAc1nGXlPNRdm5Tkq
NiYEVBqqrOlvzpbK2iC7Bc2pbKu6akrnV9N5F9ruUTvshxWv0/YpliLSeBh1
Lmvi9bN0yL/4ts+WtezFCxcMqXxWZcTIB8inFJ5VOary7Hu17cAHlDXJcVnL
tq/Kr9WUg7juYeq7Rk0n82/79LIk6ql3fnyrZZJ/KfmBpP9UxE5M8TqVM5Xd
ok5hzTdO6FDW6taNytfP31V+lnq51c2IegmIJK0cXl1kVM5R248T+flVP6bu
AiOtPny2fdeAPBvrj6KsqfdLhccrto66VxBPVH9nre2uu+1upFJlzMkbxUtV
7nxaTSV/sLQw7MLrdMgv/WyVd+VvFM8Vb1956nVzmr9XMdHKXbc6INouBNE4
rKZq5SsLokzlZ22b8g9tY1VXjCwsHMWzyqMadfpwZeTDGAIi1xYbKGty4y3c
Xrc5V250Nspa5b5Uscm3fXzbZSJfRzGhDlOpTK4+M6V+ilB4SttYUU+ivC7J
0coJrTgo/6xyWDfmUeWzRhqrbvlZ6qd0q+E6j5FLI/9frqsMN2ysP3Vlre3m
XPmAPmVN8WG78vEjc7uFxrLWalR15JJXHBBrfBf0G65UGZRjNWUtP8jCOOt6
nzoiO7xHbdcEnUgd652q6hfPD7jQ3SofU35KYyzKZ5VHpV5tyonfbTVD6MSb
a+nFKWuVm1t+j6rYcRX+ni73BuO5UxYLd237lHyifErjVHrerp+tir1WfrHI
Gaybus5U5AvKGihfoe5dUMyUYiSKZ7WKFcWo8iuAYk4r56Wu4o2VjrsWSl/d
8NTLTXOOOrytI43ttPyTN/woNtyzsf7UlbW2m7PYweY3zEKmVN41qi9rbXdB
+VH13C2oy5osMuU9f+Uurk6hU+QzRX8hlGeqEBz5QVbu8OWD8y+iODSnmHRh
dmTXKxdz/YjUeVZ+mReWqqVUlft/nfMY68qaeGLd2fXbSidSVg5g7LNHCwuv
k19i+c91dR+WNCMYcbD6zlLW1Nta5VPq0lBuiYpDlIXb68paYf9TOZX8mBWP
Vwy4jnqZVC6WtpMYfXaHVr5XvVvL73grn1V3RLFyit3Kmv7rd1h06hkZ1bzj
hWBVDF6+rKItKuZITb0wC2Eqb89/ntGcnP67BpTZWH8qt1z9zbny9srNoe6u
DvuT8lPUj1fvNMrUZa1yKnV7eIXGI5PdZqruEFzdICuHnd+5aWb6SDsi1btu
U2tC3VOMpKrivS6XL8Vf1srzPpYrX4rKXDcj+ccPsu0gIPorfAeUtfKGIw+Y
1AVr45/Depa1xmQvvFrj49t+5K58sHqXVbdMGqfSuE+re8HKpd0YEJWz1ipW
1LVUHMutO0CqH3aNy7PxI5n6Y6Gclv7K1raGq+8V8scw6xK284QANRvrT+UG
Jdftuo1I/eew/mVNblaVUy/vbdSPVwxY8/VHGnWs7Z6n8c8W+jOlHrl6kJVT
UTS+ukmPmoKj8TXVx3Urn1Ke33zBqXzKyESqKiax7dNrgMjHlL/Clr9rVP9n
skJZK287isWlv8QaF1erJYOAWH1bKWt1m62C7bLWuC0XXl9n2281m5UPbrvL
0pxK3Qs27vH6/NHHyF/WVjR9g7swUZ29t34hqlzZGic0Kq08Npazej255VPl
mb3ls/pMCGhkY/1pPPpRyU1ZU2zC+QfrbPKtdvjqslY3lc5lrdvRv1HVTlXn
WTp71MaI6VCxu+26W60JmrrNcuWD63b7heCQsyb+m0+NQrkrzGnhwZUzUlnW
NFcAnRWmQ9wjCPorfAeUtcZ9lyR2ESsOqtweTZW1xp1w5SyM5b4QV9bhMJeb
sqY+hWNF7hsZZZrvXfmN61PWtn32D0BjGpdMbByn5t5bzMj4Z6/9JZ/SoVWZ
Xc6F+dV8cB/OJoQo2Vh/9MuaenPOj7BnWWu7c84fj6rbJ7Q6m6tyAI2jUuSp
+vGNp581zpR8hbZjGHVtLpVLQ7GENd/TwnTbrgkK5VRtO8t55V9DU1xOf5Sb
EcUxvcpR6cxI27KW1201Qxz0V/gOKGvq/WFhX1Rgtay1/WysSf8FfShr3Waq
8Y3rU9ZG9VfHqvtbW+OSUaw5jfNS/kjWoax1W851Wj24D2cTQpRsrD+KT2KV
n2/rNuf8CHuWtbYfDuv2b5WCK2utZqrDH0Hki+RvXJG7dH8l22VNjL9zTdBZ
dStneaz9MeeCyj+BydlXvC+KD136Hw/kjZorgHr5FFDWItNqhW+LslbePEf1
17YV23jdHm+Qstb287bOPqdyAPIV1MMYvKzV7S1X5H6cpWdZE8a1f4avcclU
rlGKSpjPGsqagwkhSjbWn8Z00Nyc8yOkrLUaduULtvoUTVnLU6wPKz77k2eV
k9aciniw5u9vdi5rbT8eyAdQ1tCo1QrfFmWtcleQ34RX5C5TL9TtJ4f9y5r+
47u9oFwmlU+xVNbazlQ+VkStLrx3lS/brazlJ1qOs8aJVg67/PmqbkbMljWD
K8+IsoZA2Fh/Gg+8aG7O+RH2LGttd87GT9Pyoax1OKFx5LCsVQ5e8e63LWut
nlU5MMXaq5hl/e2rMM7yL6Pll4NOWSuPKt8EV3x6pqU6qeXj25a1VqsZ4tBq
hW+LslbePBujyvZf1hr3ctsOnvYsp1K5q+yjvEwap+JDWcsf4qvbVVbORc+y
JuVzrVX7Lu/hK19H/RSdCY0+u/JQ1pAyG+uP4lN32815ZLqsqf+yY2+34FVZ
a9VAdT57F8pLt4jpXNbU71FhMJ3XBPVC6DbLlS9Svj3fsMqrdGNZk3Pa7eOB
vEV9YoxcYt2OCSAOrVb4tihr5X1X4/7ZWVlrHIB4gE6grPj0F0LrHpBXuT+v
3CGrZ6TDVPIDbjtTjXG8zcQJG+MHz35snETl0bm611RkRONTKo/PK8ZfeEzj
hLYdPCVYf+UZUdYQCBvrT3kvVLfbKY+kvLtT7CTr7up2GCc/Qp2P9HI3qPOh
1Iey1m2mGp9Vnmjle90YZ5W7bvWkG1cqObbOYZSfO3upKv6Opnhwh+MP+V/Z
rrtFZ0bkLY3bjlg+mqtZvt8hGporfDeUtfKW1bhflduvpbLWuL0XdikdAkWt
8tUqd8jqGekwFUkuMf2Z0v+T6FiPsqZeDh2Oqys+3TXO+1hNWavL1vK08k/R
nyM1/YXZk7MJIUo21h+Dm/PIXFlTh1qH3ULjA/J8KGujrskub9ScaOXj1XFW
N3L1atNt191qTdApa/1TtfFohuxZ5bJWNyPl2Wwsa/k/4ckbx3I0tx3143Ue
gEBprvDdUNbK+0PFPnDbZy88UtiLKsKibg9ZF1iKMaj3wJVjlgMOqKyNlB2n
MiDUH4ryTxnrUdYqD1eWX6oy7svzUpd08sby/lxxakrhLsV6WP4kqb+cG7V9
fGfOJoQo2Vh/1IdrWm3OI+VH67oNs/Ipig+3lR+Vze4WPClrmjNVt4su7/DV
73X+kfmPDYXXV4yqbrqtZqcwklZrQj5SraaqfLDiwo9jNetneWCVvUz98aBw
YRN5e/5GxQqQf4ri2Muo5VEOhEV/he+AslbeDAv7wPFPz0jPHxyr3HgLO5AV
B69MIu7Kb7/i6YWnKHbg8iS08dzlBxWTlsMe/+zlCnvWqPJOqXIABstah5kq
3CXeuPGqyzZWPqvVyMujqtsPFyatMyP5FUbOSOVKWIiDQnq2nVblylZ+is7y
0X98Z84mhCjZWH8qP8A3bs5SXVkbK31grrtLZ8/QYRdU+RTNGuVJWaubqfyu
u3JyhaWkXg7yxrpX0Fz+I42I7PYetVoTyiO3karPPvusfJH8j1bnJ1HZvMrP
yj+lMJXCq4kZKV/JZKxU1hpXAJ1tpzAVncWCsFh9ZylrcmPM31j4xJsntsq6
HVHhwduq/mqfv0sRWOWnSJV7b8XjK1+/7TJR72RslLVR00Wk2y60/KejfIS1
LWvqRV2eI3l73exULjTFvIuUqZtc24XW7SkKrRZmH84mhCjZWH/qKkP5A6HO
5lze1ZQnVHii4o9xjbmm//j8ochG/pS1zjNV96zyU8rv1Oizf0/RX/5yEs5m
pzySxrAzlaqKqYyV/uImR1VZtermvcPHAzkL6jg29b4gaK1W+LYoa+KgR2Wu
jX/2L1mFv5QJlS+44lONd4kjVJUDyE+ocgyKx9cNW1PlkBSzrDMjmlNRPDI/
U+LjjeLxdUugcpzqWdMfVd2ilg8Yld7Qxs8Vine/cdht14Txzx7965wpVndZ
g0wIUbKx/ij2hN02Z7mfKWdK5V1WdwvdAqVymTRGhnxAn6nU6TBTlTFU97Dx
mqouH6Mzaauz0+pZ6rAzkqrilQvlq25I+bI2OngSY+P7IhUeXJgR8ee5clmT
s6k/ofLjO0cqgmD1AwllDbBN7quHHogjlDUEgfUHbqxo+WemBLVaPoWy5smo
kDjKmsSGgxBR1kKfEKLE+gM3KGuNKGsIHWVNYsNBiChroU8IUWL9gRuUtUaU
NYSOsiax4SBElLXQJ4Qosf7ADcpaI8oaQkdZk9hwEKI0y5ozQ88uQsX6Azco
a40cp0YrQy8bhMHq2kJZA2wT6206ZW1F/VXKjUtnqcI4AgVuUNYauUyNVogY
aBIrjKUXp6wBABJEoAAAjKCsSWQrAMAIAgUAYARlTSJbAQBGECgAACMoaxLZ
CgAwgkABABhBWZPIVgCAEQQKAMAIyppEtgIAjCBQAABGUNYkshUAYASBAgAw
grImka0AACMIFACAEZQ1iWwFABhBoAAAjKCsSWQrAMAIAgUAYARlTSJbAQBG
ECgAACMoaxLZCgAwgkABABhBWZPIVgCAEQQKAMAIyppEtgIAjCBQAABGUNYk
shUAYASBAgAwgrImka0AACMIFACAEZQ1iWwFABhBoAAAjKCsSWQrAMAIAgUA
YARlTSJbAQBGECgAACMoaxLZCgAwgkABABhBWZPIVgCAEQQKAMAIyppEtgIA
jCBQAABGUNYkshUAYASBAgAwgrImka0AACMIFACAEZQ1iWwFABhBoAAAjKCs
SWQrAMAIAgUAYARlTSJbAQBGECgAACMoaxLZCgAwgkABABhBWZPIVgCAEQQK
AMAIyppEtgIAjCBQAABGUNYkshUAYASBAgAwgrImka0AACMIFACAEZQ1iWwF
ABhBoAAAjKCsSWQrAMAIAgUAYARlTSJbAQBGECgAACMoaxLZCgAwgkABABhB
WZPIVgCAEQQKAMAIyppEtgIAjCBQAABGUNYkshUAYASBAgAwgrImDZitTz31
1KRJkxYtWmTwNffv379ly5Zly5Ydc8wxRx111KpVq26//fZdu3aFNQkACJHj
QPn444/Hx8eXL18+Z86c6dOnL1y4cN26db/+9a+dDcC4gPIloKECCBFlTRqq
rL311lsnnHBCNunTTjvN1Gvu27fvoosuGitZsmTJ+++/H8okACBQLgPlhRde
OO6448p744kTJ27YsMHNGMwKKF8CGiqAQFHWpEHK2iuvvHLyySeLSRssa1lA
i9dcvHjxvffe+/Of//ySSy4Rt5xxxhkHDhwIYhIAEChngfLhhx/OmzdPTC7b
CWe74q1bt27atGnGjBnixgcffNDBMMwKKF8CGiqAQFHWJMdlbe/evePj41Om
TJEH4kyVtXfeeeeQQw7JXnDhwoUfffSRuDGLjBtuuEFM6Mknn/R/EgAQLmeB
cscdd4hpbdy4MX/7Sy+9NG3atOz2uXPnOhiGQQHlS0BDBRAuyprksqy98cYb
CxYsEFOcPHnyhAkTDJa1H/7wh+KV77777vztWaxMmjQpu/3SSy/1fxIAEC5n
gbJ69epsQjNnzty9e3fhruuuu04M47333nMwElMCypeAhgogXJQ1yWVZe/jh
h8Xk5s2b9/zzz69YscJgWVu7dm32alOnTv3ggw8Kd51//vmiHu7du9fzSQBA
uJwFSrY3nj9//sqVK8t3fe973xPDePnllyufe+DAgWXLlp3V0muvvWZ7jkLJ
l4CGCiBclDXJcVmbPXv2j370o08++ST7r9myduKJJ2avdvrpp5fv+v73vy9m
8ze/+Y3nkwCAcLkMlDpZERNVoq4v7NixY6ylCRMmyPP9LAkoXwIaKoBwUdYk
l9madbRsduR/zZY18b3y5cuXl+/K6qGYzSeeeMLzSQBAuAYva48//rgYw7nn
nlv3mHfffffug+R+O9ur353zne98R9x+xRVXiFvuv/9+2yMPKF8CGiqAcFHW
pAGz1WBZ27dvn5iRNWvWlO+97777xL2/+MUvfJ4EAARt2LL22muvzZo1KxvA
pEmTnn/++cbHZ2EtBnznnXfmb9+8ebO4/dlnn7U22M8IKF8CGiqAoFHWpDjK
WrYMxeVKvvGNb5TvfeSRR8Rs9rmYs4NJAEDQBgyUt956S5yel7npppt0nnLv
vfeKxz/zzDP529evXy8aX/nqJZYElC8BDRVA0ChrUhxl7Q9/+MPEiROzV7v6
6qvL9/7sZz8Ts/nQQw/5PAkACNpQgfLiiy/Onj1bTH3t2rX79u3TedaNN944
dvD7aIULZSxatGjs4HXp7Qy2QkD5EtBQAQSNsibFUdYyc+bMyV7twgsvLN91
1113idns+eMvDiYBAOEaJFC2bt06c+ZMMemsQWg2tczSpUuzp8yfPz9/Y1ZG
xC+1VZYRewLKl4CGCiBclDUpmrK2ZMmS7NXOPvvs8l233nqrmM0XXnjB80kA
QLjcB8rmzZvFb3tlvvvd7x44cEDziTt37pwyZUr2rPXr1+dvf/PNN8Wrbdq0
ycJ4awWULwENFUC4KGtSNGXtkksuyV7t2GOP3b9/f+Gua6+9Nrtr4sSJu3bt
8nwSABAux4Fy2223iSlmfa3wA82NHnjgAfHcLVu25G+XVx35yU9+YnSwDQLK
l4CGCiBclDUpmrImf96l8FXxPXv2HHnkkdntCxYs8H8SABAul4Hy4x//WExu
5syZHS4Uv3r16uy506dPL/yA2i9/+Uvxsvfcc4+5wTYLKF8CGiqAcFHWpGjK
2ttvvy3OaVm3bl3+9i1btoh5vPnmm/2fBACEy1mg7NixQ3yzbMaMGdu3b2/7
9CxSxVCvuuqqwl2vvvqquGvDhg2GBqsloHwJaKgAwkVZk6Ipa5lvfvObYna+
/e1vv//++3v27HnggQemTp0qAj27JYhJAECgnAXKBRdcIKa1YMGCW2pknaLy
ufv37z/nnHPE05977rnCvbt37xaXpq/80WerAsqXgIYKIFCUNSmmsrZjx465
c+eKOcrSVgTH2MHz501dRtjBJAAgUG4C5be//e2YhnIREzZu3CgecP3111c+
YOXKleIBzn4UWwgoXwIaKoBAUdakAcvaeeedN2b65Pb33ntv1apVkydPlnl9
6qmnPvbYY2FNAgBC5CZQsv2tTlmrzM377rtP3Hv88cfv3Lmz8vUfffRR8Zil
S5danpWigPIloKECCBFlTRqwrNmTLbTt27c//fTTr7/+evlyVaFMAgDCEmWg
uBdQvgQ0VABhoaxJZCsAwAgCBQBgBGVNIlsBAEYQKAAAIyhrEtkKADCCQAEA
GEFZk8hWAIARBAoAwAjKmkS2AgCMIFAAAEZQ1iSyFQBgBIECADCCsiaRrQAA
IwgUAIARlDWJbAUAGEGgAACMoKxJZCsAwAgCBQBgBGVNIlsBAEYQKAAAIyhr
EtkKADCCQAEAGEFZk8hWAIARBAoAwAjKmkS2AgCMIFAAAEZQ1iSDi0IM9ZVX
XjHyajH53//932zJ/O53vxt6IABgEYGC/khMACPKWo7BRbFx48bspa699lrF
Y/bv379ly5Zly5Ydc8wxRx111KpVq26//fZdu3YZGUDBU089NWnSpEWLFpl9
2Q6z8E//9E/ZkslG8vvf/97sYADAH44DRYfL0FH4+OOPx8fHly9fPmfOnOnT
py9cuHDdunW//vWvHQ/DIHsLlsQEMKKs5ZhaFFnoZM3o0EMPffvtt+ses2/f
vosuumisZMmSJe+//37/MeS99dZbJ5xwQvbip512msGX7TwL5557bvawH/zg
BwYHAwBecRkoOlyGjsILL7xw3HHHlYcxceLEDRs2OBuGQbYXLIkJgLImGVkU
v//97xcuXJi9zt/+7d8qHpalkpjc4sWL77333p///OeXXHKJuOWMM844cOBA
z2FIr7zyysknnyxe2WxZ6zwL//7v/549ZurUqf/5n/9pcDwA4A+XgaLDWego
fPjhh/PmzRMTzaaejWHr1q2bNm2aMWOGuPHBBx90MAyzbC9YEhMAZU0ysij+
8R//MXuRww8//IMPPqh7zDvvvHPIIYdkD8tS+KOPPhI3Zrv0G264QYzhySef
7DmMzN69e8fHx6dMmSIP9Bksaz1n4YILLsges2bNGlPjAQCvOAsUHW5Cp9Ed
d9whJrdx48b87S+99NK0adOy2+fOnetgGAa5WbAkJpA4yprUf1Fku+isEGUv
8q1vfUvxsB/+8IdiWnfffXf+9my3P2nSpOz2Sy+9tM8wMm+88caCBQvEVCZP
njxhwgSzZa3nLPzzP//z2MHzXnbs2GFqSADgD2eBosNB6OhYvXp1Nq2ZM2fu
3r27cNd1110nRvjee+85GIkpbhYsiQkkjrIm9V8U//Iv/yJeZOvWrYqHrV27
VpzVUD5Yev7554t6tXfv3j4jefjhh8VI5s2b9/zzz69YscJsWes5C5988smh
hx6aPeyv//qvTQ0JAPzhLFB0OAgdzWHMnz9/5cqV5bu+973viZl9+eWXK5+b
Vddly5ad1dJrr71me44cLFgSE0gcZU3qvyjWrFmTvcJRRx2lvnDTiSeemD3s
9NNPL9/1/e9/XwzjN7/5TZ+RZGVt9uzZP/rRj7KdfPZf42Wt/yx8/etfzx4z
Y8YMLnIFID7OAkWHg9DpKStiovXUVZsdO3aMtTRhwgR5aqIlzhYsiQmkjLIm
9VwU+/fvP/LII7NXuPrqq9WPFF+mXr58efmurF6JYTzxxBOdRzI6eCAuW1zy
v8bLWv9ZePDBB8XDfvWrX5kaFQB4wlmg6HAQOn08/vjjYgznnntu3WPefffd
uw+SA85m5+6c73znO+L2K664Qtxy//332x65swVLYgIpo6xJPRdFNrPiFTZt
2qR42L59+8TDKr8sfN9994l7f/GLX3QeSZnZsmZkFrZv3y4eduuttxoZFQD4
w02g6BgkdPS99tprs2bNygYwadKk559/vvHxcsnceeed+ds3b94sbn/22Wet
DfYzXC5YEhNIGWVN6rko7r//fvEK99xzj+Jh2TyKy3184xvfKN/7yCOPiBcx
ewVjs2XNyCz87ne/k0dBjYwKAPzhJlB0DBI6mt566y1xJmHmpptu0nnKvffe
Kx7/zDPP5G9fv369aHzlq5dY4nLBkphAyihrUs9F8Q//8A/iFf7t3/5N8bA/
/OEPEydOHKs5ueVnP/uZeJGHHnqo80jKzJY1I7Owf/9+8bMC2diMjAoA/OEm
UHQMEjo6XnzxxdmzZ4upr127dt++fTrPuvHGG8cOfh+tcE2PRYsWjR28hL6d
wVZwuWBJTCBllDWp56K46aabxCv813/9l/qRc+bMyR524YUXlu+66667xIuY
/dUb499ZMzILJ5100ljNV7MBIGjOAkWH+9BptHXr1pkzZ4pJZ2VHs6llli5d
mj1l/vz5+Ruz3iR+qc3IV/z0uVywJCaQLMqa1HNRbNiwQbzC//zP/6gfuWTJ
kuxhZ599dvmuW2+9VbzICy+80HkkZcbLmpFZEL8EV8hcAIiAs0DR4T501DZv
3ix+hizz3e9+98CBA5pP3Llzp/gD0/r16/O3v/nmm+LV+n/FrxWXC5bEBJJF
WZN6Lgp51sp//Md/qB95ySWXZA879thj9+/fX7jr2muvHTv425e7du3qPJIy
42XNyCyIY5Kc1AEgPs4CRYf70FG47bbbxKxlfa3wW9KNHnjgAfHcLVu25G+X
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
AAAAAGCfuEq/uqYBAAAAAAAAAAAAqPP/AVnj+yM=
     "], {{0, 499.5}, {583.5, 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{144, 144}],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSizeRaw->{583.5, 499.5},
   PlotRange->{{0, 583.5}, {0, 499.5}}]]], "Output",
 TaggingRules->{
  "Settings" :> {$CellContext`real11 = 1, $CellContext`real12 = 
     0, $CellContext`real13 = 0, $CellContext`real21 = 0, $CellContext`real22 = 
     1, $CellContext`real23 = 0, $CellContext`real31 = 0, $CellContext`real32 = 
     0, $CellContext`real33 = 1, $CellContext`state1 = 
     False, $CellContext`state2 = True}},
 CellID->604095604,ExpressionUUID->"e0c48a05-cb8a-4a5c-b330-8f3903ed892b"],

Cell[BoxData[
 PaneBox[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzs3XuYFNWd//EZRBGUy4KPBhdxVRYU8AYGooY4MWqMGhQTsiSSxJggq3GN
UZTkQQJxY9Ykm4tRQxKDRhKNJrpRY0SMKEYCMoCCCjPDbbgNMzAbmEuG2X18
9pnfd/ss51dWd1VXV5+qOtX1fv3BQ1dXVZ/qPqe+9Zmqrj7puq9cfX2vqqqq
246Uf67+wuwP33rrF77+iUHyYOrNt90w8+YZX/rYzbNmzJxx6weuO0wmNss/
P+xdVfW//+/J89///d+dnZ3/CQAAAACInuQvSWH50cwV0w7ktLe3/w0AAAAA
ED3JXyqIeUW2rq4uebajo6MrpxsAAAAAED0VwSSLSSKT/xRMapLpDh48mHRL
AQAAACBzJItJInPlNXX1I0kNAAAAABKk85q+HnL//v3q6sekmwYAAAAAmaau
h5SMJkntv/7rv9SJtqQbBQAAAADoVl9Sk6Qmqa29vZ0LIAEAAADABpLOJKNJ
UvvP//zPv/3tb0k3BwAAAADwfySjqZ9gI6wBAAAAgD0IawAAAABgIcIaAAAA
AFiIsAYAAAAAFiKsAQAAAICFCGsAAAAAYCHCGgAAAABYiLAGAAAAABYirAEA
AACAhQhrAAAAAFC+bTm1OS++l5qoZgi+QsIaAAAAAJSPsAYAAAAAVtmQ81ww
auYgqyWsAQAAAEA5CGsAAAAAYBV1ZWN+Imt7r/wZglwSSVgDAAAAgHAIawAA
AABgIXXnkBBhTS3ov3LCGgAAAACEQ1gDAAAAAAupO/MXDGhe1MxqQf+VE9YA
AAAAIBzCGgAAAABYiLAGAAAAABYirAEAAACAhQhrAAAAAGAh7gYJAAAAABYi
rAEAAACAhbblhAhrakH/lRPWAAAAACAcwhoAAAAAWGtDTn4iK0jNHGS1hDUA
AAAAKAdhDQAAAACspa5sVHcOefG91MQglz46EdYAAAAAoHyENQAAAADIAsIa
AAAAAFiIsAYAAAAAFiKsAQAAAICFCGsAAAAAYCHCGgAAAABYiLAGAAAAABYi
rAEAAACAhQhrAAAAAGCheMJaa2vr6tWrGxsbo3sJAAAAAKgk8YQ1SWqLc958
883oXgWZIj126dKl+/fvT7ohAAAAQCTiCWt1dXWLDyknr0k7X3755SVLluzZ
s6fUZdevX39VzsKFC0M3AMHNnTtXveHt7e1RrP/yyy+vqqo66aSTurq6olg/
AAAAkKzYvrMmGa2cvLZhw4YJEyZUV1dXHXLyySe/9NJLwdewdOlSteBXv/rV
Ul/dS1tb2+9yli9fbmqd9qutrVVbvW/fPp/ZPvzhD6s3/K9//Ws5a/Z6k6UD
yMqPOOKI5ubmEFsBAAAAWC7OG4yEzmtr1qwZNGhQVZ7evXv//ve/D7iSKMLa
pk2b1DqvuOIKU+u03+c+9zm11a+//rrPbCHCWsE1e73JS5YsmTp16i9/+csQ
mwAAAADYL+a7QYbLa3fccYc6XL/gggtefvnl5cuXf/azn1VTLr/88oArsSSs
HTx40NSrJ8WSsAYAAABUtvhv3f/222+XmtfGjRunDtc3b96sJ0oWGD58+MiR
I/VXluSoXoLY2Wef3adPnw984AOzZ892XiBXMKz5L9Kdu/zypptukgYcfvjh
o0aNmj59uiyinrrrrrvGjh2r1jlgwIDx48ffeuutXpvw0ksvXXrppSeccELv
3r3HjBnzhS98wedrd9OmTZO1TZo0Sd6rK6+88n3ve98ZZ5whbdu5c6eaYcmS
JeNzFi5cKC96yimnHHfccQHfB7Fo0aKampohQ4YcddRREydOnD9/vuvTf/jh
h6dMmSIzDB06VBqjT1/u3r1bXnTw4MFqq0899VR5+M477xTcivywJt1s1qxZ
8mb27dv3mGOOkRkee+wx/zX7vMnXXHONPDzvvPOcL7pgwQJ5x4499tiBAwfK
Nt5///2uVnltGgAAAGCbRH5nrbGxUec1ySNF5z///PPV4fqcOXMOHDhQcJ4d
O3aMGDHCdZ2kJBHZNDVDflgrukhDQ4PEK9cMEoveeOMNeVYCl+spr1M/Dz30
kPPbdsrJJ5+sX8hF0lxV7iJP16t/8IMf7OzslBl+85vfqCn/8A//oJ9VYa3o
Rkn8qcrjbPl3v/td17PS+F//+tfy1NatW/OX9Tq/5gpr0nJJ1vmL33fffT5r
9nmTzzrrrKrcd9b0K0r3yF/JDTfcEGTTAAAAANsk9aPYK1euVGHttddeKzrz
vHnz9NF1v379LrroojvvvHPNmjXOeS6++GI1w9e//nVZpyQy9XDmzJlqhvyw
VnSR8847T0355Cc/+cQTT1x//fXq4bXXXqs24cc//rGaMm7cuMcee2zZsmUF
23/aaafJPAMHDnzkkUeee+45nT2ffvrpgvOrsKY29uabb7711ltlWTXlnnvu
6XaENXH66afPmjXrtttuUxdYFt0oFQCHDRu2bt26DRs2fOQjH1EzbNy4UZ59
5ZVX1EMJVtLUZ5999sQTT6zKJUfJU21tbbKZH/rQh9Q8d999tzzcu3dvwa1w
hbVHH31UPZw2bdqLL774/e9/Xz0855xzunN3ESm4Zp832RXWnn/+eTXb4MGD
H3jggZ/97GennHKKmqJOhvpvWrE+CAAAAMQtkbDm/OZakF/KlrZNnz69Ko8c
rqsLIzs7O/v27StTJKropSZMmCBTRo8erR66wlrRRdrb2w8//HB1bK/OZwlp
xqRJkyZPnqweBvw6VVNT065du1pbW9XDp556Si01f/78gvPrsPaLX/xCTXn8
8cfVlKuvvrrbEdbOPvtsiTl6waIbJe+kBEB5eMwxx0gz9u/f39XV1Zajsp40
Sa351VdfVYtLqFFT9CWL4b6zduDAgV05+nJNabzKSnqRkr6z5gpr+rSa/mmG
JUuWTMp58sknA24aAAAAYI/4w1qpSU1bt27d1772tYkTJ/bp00fntZNOOqk7
d5IrP8op1dXV6j7wrrBWdJHly5erhxLQvJoUMKxJPHnggQc+/elPSwo7/vjj
9Qt94xvfKDi/Dmv6DvaSHCXUyJQRI0Z0O8KaJBTngkHeB2fsPeywwyTySDP0
B6F+vKygW265Rc0T+gYja9asuemmm+QTlE9Nfz2tV69eepFywtqll16qZquv
ry/YniCbBgAAANgjzrDW2dn52muvhUtqTnv37l2wYIE67SUkxL300kv6wPus
Q6pyJ8XkPzt27OjOC2tFF9HzX3fddV4tCRjW9KWGkpiGDRumX9c/rMnM+gt6
EveOPPJImXjCCSd0O8Lat7/9beeCQd6Hjo6OefPm6UsEFWmV+jhqamrUlDPO
OEMtPnr0aLW2uXPnqlcJF9aefvppCVZqyoABA3QDTIU1/XLbtm0r2J4gmwYA
AADYI7awFjqptbS0XJ5z2223OafrBCSrlThw2GGHyf8/9alPea3HFdaKLiLv
ieQImWH8+PF64k9/+tM5c+aoL451O3LEJZdc4vW6tbW1ap6PfexjTU1NMuWx
xx4LEtbEc889p6YsW7ZMTbn00ku7vcNakPdB27p168MPP6wCi5D8KxNvv/12
9fCtt97yWlBHqj//+c8+63eFtcmTJ6uHf/zjH9Ull+qlC4Y155q93mRXWJs1
a5aaTd/gccOGDXNyVqxYEXDTAAAAAHvEE9bKPKemb94uB95ypN3Q0PCjH/1I
XQw5ZMgQ9R0odejeu3fvRx99VF5u3bp1Z5999uDBg0899VS1kvwbjBRdRIem
uXPnyov+/Oc/Vw+vvPJKNUNzc7MKR/3793/mmWe2bNmS33jJJmqpyy67bO/e
vXV1deq7WkHC2vHHH79w4UKJVCeddJKacscdd3R7h7WiG7V+/fp/yJkyZYr6
spuOMOqmiE8++aR6KFFLPqb29va77rprcI5svnqJW265Rc0zffr0VatWyTwF
t8IV1s4991z18IUXXpCXvu+++9RDZ1gruGavN9kV1vR7MmLECOlsa9asmTRp
kpqyevXqgJsmHnnkkZkzZ6pF9KcsHWDevHnOW6nIDDfeeKPMXHDbAQAAgPLF
E9ZCf09NefDBB/Nvfa/I8baaZ+XKlQMGDFAT1bG9cu+996oZ8sNa0UWWLVum
bsfhdPjhhy9ZskS3zflNqIIXQ0pUOeqoo5xrUCfsqoqFNZlN3wRSGT58+O7d
u7t9w1rRjdI/WidpV3+B7phjjlGR6uDBg84vtemmnnLKKS0tLfolnK0KeOt+
yTuud1Kt3BnWvNZc8E12hTXJ7FdffXVVngsvvFDNEGTTJOKpifq+NOJrX/ta
/ucl4VdNXLt2bcHNBwAAAMoUc1gL/T21559/3vmbYlW5s06u8xovv/zyBRdc
oG6HWJX7epfzjIk8q6Y7f7rafxEhbT7//PPVWTwJjHKI/qc//ck5w1/+8pcJ
EyaoL5SpWzXmk9Cnv6I1duxYfdf6efPmFZxfhTXJiS+88ILaaokkkn10eHni
iSfUGvQFmcHfh+bm5s985jM6hMqmXXLJJc5zgtITbr75Zn0uT0LN1KlTnT9H
Lu64447jjjtOzeA8CeUkKUnNsH///u7c2dUvfvGLqlWyObIGdeZLEmXRNRd8
k9UJSmm/Xrajo2PGjBkSadXiEnWvu+46590yi26avmZVn11VTVIT77zzTj1R
/2ac6yckAAAAAFNiuwxSDon1vetDa2pqevHFF5csWbJr1y6veeSIXbKhzwwh
Fmlvb5cZ/Nuvb+/vRRq/c+fOIO3RYU093LZtm9fPZ/vw36iDBw/W19e/8847
Pp+7vK7MIOvxmkGW1ffhD0jepU2bNnldOVl0zUXfZGXr1q2ydeqbcQX5bJoE
289//vPqa26KfHC333777Nmz9+zZoyfKDDKbK9oDAAAABiX1o9jw4QprAAAA
ADKIsGYhwhoAAAAAwpqF3njjjddee23lypVJNwQAAABAYghrAAAAAGAhwhoA
AAAAWIiwBgAAAAAWIqwBAAAAgIUIawAAAABgIcIaAAAAAFiIsAYAAAAAFiKs
AQAAAICFCGsAAAAAYCHCGgAAAABYiLAGAAAAABYirAEAAACAhQhrAAAAAGAh
whoAAAAAWIiwBgAAAAAWIqwBAAAAgIUIawAAAABgIcIaAAAAAFiIsAYAAAAA
FiKsAQAAAICFCGsAAAAAYCHCGgAAAABYiLAGAAAAABYirAEAAACAhQhrAAAA
AGAhwhoAAAAAWIiwBgAAAAAWIqwBAAAAgIUIawAAAABgIcIaAAAAAFiIsAYA
AAAAFiKsAQAAAICFCGsAAAAAYCHCGgAAAABYiLAGlERGytKlS/fv3590QwAA
AFDhCGuZNXfu3Kty2tvbk26LSVFv1+WXX15VVXXSSSd1dXVFsX7YzNW71q9f
rx4uXLgw6aYBAIAKRFhLUG1t7e9y9u3bF/+rf/jDH67K+etf/xr/q0cnxHYV
/CDa2trUxOXLlztnPvnkk2XlRxxxRHNzs8l2xyjZjpdqrt61dOlS9fCrX/1q
0k0DAAAVKLqwduDAAYOzVaTPfe5z6kjv9ddfj//VCWtawQ9i06ZNauIVV1zh
nHnJkiVTp0795S9/abLR8Uq246UaYQ0AAMQporC2evXqxYsXv/nmm/6zvf32
2zLba6+9ZvClUyS2Y+aDBw/mTySsaSWFtQqQ9rBWsD+HmCfEGghrAAAgThGF
tcWH+OQ1eUrPFuf5ta1bt952220TJ0484ogjTj/99BtuuGHNmjX62WnTpo0f
P37SpEnLli27+OKL/+7v/u473/mO16oWLVpUU1MzZMiQo446SlY4f/5819v4
8MMPT5kyRWYYOnSorPn3v/+9mr579255lcGDB6sjvVNPPVUevvPOO/kv4dMe
SRNyiHj22Wf36dPnAx/4wOzZs10X5r300kuXXnrpCSec0Lt37zFjxnzhC1/Y
s2ePfjZIqPHZwCVLlozPeeihh/793/997Nixxx577Cc+8Ynf/e53zjVI15o1
a9a4ceP69u17zDHHyIs+9thjzhk2bNhw0003yQyHH374qFGjpk+fLtvlnKHo
Zrrkb5dPG7w+iLvuuku2SE0cMGCATLz11lvVItdcc408PO+885wvumDBgiuv
vFLegYEDB8o7dv/997ta5dUTXO655x71rjrfpY9//OMy5ZxzzmltbQ24Nq/2
FO14v/rVr6ZOnSqrlZ52+eWX/+AHP3BmFp/eWHQsOOn1vPHGGx/96Eflcxk+
fPh3v/tdeeree+8dMWKEdIYJEyY8/vjjzqX8+7Ne57p166TlRx99tGz+Zz/7
Wd1bZG3qvX3mmWfUlPr6ejVFWhvwVfzDWltbmzRbVijvgN6n1dXVqVf5/Oc/
7/WGAAAAFBRRWGtsbPTPa5s3bw4S6IzbsWPHyJEjq95LjjDXrl2rZpDDM5ki
x2nDhg1Tz379618vuCo5nq/K4zwLIwefrmerq6t//etfd+cCY/6yBU9zeLVH
NkSOaV1rkENE+SjVgpKh5OVcM5x88sl6hqJhzX8Df/Ob36gpJ510kmsb9cFw
Z2dn/rst7rvvPjVDQ0ODHBW7nj3uuOPkGF5/Xv6bmc+1Xf5t8Pog5BDda8PP
Ouusqtx31vQrzpkzJ38lN9xwQ5Ce4PKHP/xBzSCxV03RJ/jOPffcgGvzaY9/
x5PQnf/sjBkz9Jq9emPRseCi1+PqPJ/61KecDw877LCXX35ZLVK0P3ut8+qr
r1Yz/PjHP1ZTfvGLX6gp0s3UFB2jSh01+WfWLrzwQjVFPko15Uc/+pGa8o1v
fMPrDQEAACgouu+s+eS1olEuOhdddJE6cPr4xz/++OOPf+lLX1IPhw8frmZQ
h3zi8MMPnz59+p133vn0008XXJVKGXLUum7dug0bNnzkIx9RC27cuFGefeWV
V9RDSQrPPffcs88+e+KJJ6qDSTlgbmtre+yxxz70oQ+pee6++255uHfv3vxX
8WrPxRdfrKbL0fJrr70mx4rq4cyZM9WCp512mjwcOHDgI488Ig04//zz1Qx6
c4qGNf8N1GFNnHfeed/85jcvuOAC9XDQoEGqOz366KNqyrRp01588cXvf//7
6uE555yjXkIWVFM++clPPvHEE9dff716eO2116oZim5mPtd2+bfB64NYuXKl
PrYfN26cTFy2bJlavyusPf/882q2wYMHP/DAAz/72c9OOeUUNUWdIvTvCa7G
y/t27LHHOt/DBQsWqMV/+MMfBlmbf3t8Op5ec//+/e+9994HH3xQBoWa8vOf
/9y/N/p3FZ9efeaZZ8r7rD9lcckll9x///3vf//71cNZs2YF7M96nbK93/ve
9+Tj1utUZySDhLVSR01+WJP3Sk35l3/5FzXlsssuU1MKnjoHAADwEendIAuG
sgSTWmdnZ9++feWoSY5v5ahVTdQHrnV1dd2OQz7X1Xou8nb169dPZjvmmGOe
euqp/fv3d3V1teWoy8bmz5+v1vPqq6+qReS42rXmIF8dKtgevSFylKsnTpgw
QaaMHj1aPWxqatq1a5e+cE4aqdajr/jyD2tFN1CHtVNPPVVd8dXR0XH22Wer
ierUmEzflaPvcq9mkGQh/29vb5dj/qpc7pAtUjNIBJg0adLkyZMDbmY+13b5
t8Hng/D6zporrOnTWPrm7UuWLJmU8+STT3YH6wlON9xwg3pWxcOrr75a/t+r
V6+dO3cGWVvR9nhtr16zvmZSFlRTrrnmGjWlYG8s2lXy6fWoQdfS0qIeSk6U
XiRTJCyrKaondAfoz3qdq1atck1R1zkHCWuljpr8sCbJt0+fPjJl1KhR3blO
ftRRR8lD6XUF3woAAAAfUd+6Xw7GnNEswaQmVqxYoY6s/umf/klPvPPOO9VE
dX8/fTFV0V/pklhRdchhhx0mx/Df+MY3ZAPVs+rXuAq65ZZb1DzBw5qrPfpQ
Nl91dbW6H7scMD/wwAOf/vSnZQ3HH3+8nkFfi1X0zJr/Buqw9pWvfEUvopOC
vlmiHCffdNNNEydOPOmkk/RXpSR6yFPLly9XD+WFCjYgyGbmy98unzb4fBAB
w9qll16qZquvry/YniA9wUkymnpW3kwZlYMGDZL/X3TRRQHXVrQ9XturTwC9
/fbbaoqEZel4MmXEiBFqitfo8O8q+dR6JInrKSqVjx07Vj3csWOHWtvHP/5x
NaVof1brlM9FJ8QvfvGLah4Z+N3Bwlqpo6bgDUZUvhYNDQ0vvPCC+v+3v/1t
r3cDAADASwy/s+a8kUiCSa3bcWT12c9+Vk/813/9VzXxpz/9afehQ75+/foV
XVtHR8e8efP0NWbKsGHD1DFqTU2NmnLGGWeclTN69Gh5KP+ZO3euWkPwsOZq
z0svvaRf8axDqnKnqOQ/cqAr8+hL0STX6G8Y+Rx2lrqBOqzdcccdepFvfvOb
auLPfvYzefj000/LwbOaMmDAAL0qFZT0x3HdddcVbECQzczn2i7/Nvh8EAHD
mn65bdu2FWxPkJ7goq5slHT56quvqmX1hYhF11a0PV7bqxeUiKGmSOpRGUo+
dDXFa3T4d5V8+evxCmv6zS/an/PX+c///M9qHldY02/m2rVr1RQd1kodNQXD
2m9/+1s1UXLfrbfeqv7vum0OAABAEPH8KLYrryWS1IQcXx122GHqQFdP/MQn
PqGOplavXt1dSljTtm7d+vDDD6tjZrFgwQKZePvtt6uHb731lteC+pj5z3/+
s9c8BdujN+RTn/pUwaVqa2vVmj/2sY81NTXJlMcee8z/sLPUDdRh7dxzz9Xn
MvSXj9QPSU+ePFk9/OMf/6jmUStRQUl6nfxHHo4fP16/lkTmOXPm3HPPPUE2
syDXdvm3QSn4QeiwdskllzjX7wprs2bNUrPpWzJu2LBhTo7KCEF6govkX9XC
m266Sf7Tp08f/X3Gomsr2h6v7VUvKp544gk1RcapmnLllVeqKUVHR8Gukq/U
sBakPxcNaxKd1EN9LvjJJ59UU1RYCzFqCoa19vZ2dT5U3rfTTz+9ynFzGAAA
gJLEE9a6HXktXFJ75JFHZs6cqfKU0tzcPHfu3Hnz5jnvyyEz3HjjjTKz13rU
kbb42te+Vl9fr4/fjj76aPWdpoBhbf369f+QM2XKFPX1N30Ure7Lp48D5eiu
sbFRjt/uuuuuwTn6D/u33HKLmmf69OmrVq0qeOGlV3vUhvTu3fvRRx/t7Oxc
t27d2WefLSs/9dRT5VkJJmrNl112mbw/dXV1+ttkAcNa0Q103mDk2muvlWgg
77x6KAlr//79Mo8co6opL7zwgqzkvvvuUw91UNLfKpKPsqGhQd+cQacD/80s
yLVdRdvg9UFIB1NRsX///s8888yWLVucTdJhTb8PI0aMeO2119asWTNp0iQ1
RXXXID3BRZ/xUd/pu+qqq/RTRddWtD1e26vXfOKJJ7766qsys37r7r77bp/e
WLSr5Cs1rAXpz0XD2p/+9Cf18Pjjj3/ooYekP4waNUpNUWEtxKjx+p01191E
f/CDHxR8HwAAAPzFFta6c7cW2bx5c4gF5YBTHfM4byshact1HCXkGF5N1Lfi
d1m5cuWAAQOq3kuOyfWvgwU/szZu3Di1eJ8+ffTXW4455hh1FHfw4EHnF3nU
KaSq3K3qWlpadGOczfC5dX9+e5wbojKFcu+993bnzkmp2xrkNyD4mTX/DdSh
QH8LTPu3f/s3tQaJYK6nVDN0UFq2bJm6N4WTJJQlS5YE2cyCXNtVtA0+H4Tz
C2Jet+6XjK+/o+R04YUXqhmC9IR8+lfeqt57N4+iayvaHq/tda1Zk6ynone3
d2/07yr5Sg1rQfpz0bC2b98+V1/V61RhLcSo8Qpr+t4saiXbt2/3+qABAAB8
xBnWQtOXJznPp+irtu688049Uf+ilvN3rl1eeeWVCy64QB0c9u7de8KECc6D
YXXZ0tFHH120Vc3NzZ/5zGd01pDD1EsuuUSff+nOvbc333yz/tUnOWabOnWq
K67KVhx33HFqBud5wyDtefnll/WGiBNOOMF5pkZykP4OkRwD61vWz5s3T82g
fxBKH4qXtIE6rM2fP//aa69Vh7XDhw+XEK3X0NnZ+cUvflG1UNKNbKw6yyOx
S8+zePHi888/X91Ar7q6Wj7iP/3pT8E3M59ru4K0weuD+Mtf/iLd48gjj6xy
/FyXOtsiDdbLdnR0zJgxQ9/ofuDAgdddd52+3Wh3sJ7gor9K2b9/f9dPxhdd
W9H2eG2vWvPJJ5+spg8dOlQ6gPNGLl69sehYcMlfj1pWX5+8c+dOtSp9N8ii
/Tl/nfq+mhJO1RTpS/qbaPIGPvTQQ+r/+qciSh01skL1UP9muiLJV4fWmpoa
r/cBAADAXyrCWnfu14s+//nP6y/ddOdusn377bfPnj17z549eqLMILP5H8wr
6po6r5wSnByV1dfXv/POOz5v4LZt22QGdU/ygmRZfWP5Uslq33zzzV27dhV8
Vt4ldcv30Lw2UIc1dZs7CRRe6UPe6k2bNvnfXVOela3Qt0zP57+ZRQVpQ7f3
B6F/WcDf1q1b5b3yul99d4CeUJKiayvaHq/tbWxsDHFDjCBjoUzl92chHXXj
xo0+I678V9m+fbtkZDVA9Fl7AACAUqUlrME2rrAGoDt3kvH8888/+uij1ejg
59UAAEA5CGsIh7AG5GtsbKw65Nxzz+WO/QAAoByENYTT0tLyWo7X750BGbR/
//6f/OQnv/rVr2pra9mpAgCAMhHWAAAAAMBChDUAAAAAsBBhDQAAAAAsRFgD
AAAAAAsR1gAAAADAQoQ1AAAAALAQYQ0AAAAALERYAwAAAAALEdYA5aCHpNsF
/H/0UsB+jFMABhHWkHHOStqVhzoLG9BLAfsxTgFEgbCGLHNWVRkCHTntOer/
MtFZZ5NuL7KIXgrYj3EKICKENWSTLqyqqra1tbW2tra0tDQ3NzflyH/koUyU
p3SdpcgiTvRSwH6MUwCRIqwhg3Rt7ezslOq5d+9eKabyr/xfpv9PjvzH9ZTM
TIVFbOilgP0YpwCiRlhD1uja2tHRIT1fqmdra6tM6fEgT8kMMpvMLItQYRED
eilgP8YpgBgQ1pA1uraqotne3u5VWJ1kNlWIdYVNejtQyeilgP0YpwBiQFhD
pujrVdRfQeU/QWqrIjOrv4jqK1iS3hpUJnopYD/GKYB4ENaQHeqCEymOBw4c
aGpqamtrC15bFVlEFpTFZSVcvoIo0EsB+zFOAcSGsIbs0JestLS07Nu3r9Ta
qsiCsjiXryAi9FLAfoxTALEhrCE7pBpKP1d/CPX5Drg/WVD9OVRWRXmFcfTS
tGtoaFi8ePHq1aupqhWMcZpqDFKkC2ENGaGvWlH3Tw5XWxV1++WYr11ZtGjR
wIEDq6qqVqxYEc8rIn5p76UZ197ePmXKlKpDRo4cuWbNmqQbBfMYp+nFIEUa
ZSqsyZ6wpaVl+/bt2w7ZiszYsmXL5s2b6+vr165d29TUVE553bNnzxtvvCFr
k/90dXUV7GzPBfPHHP9+u2/fvunTp+visnz58ggGhy0yPkgN9lJZXFYiq5IV
ymqT3rJY6c4jHUm6k88xsMFxKmbPni0jdOzYsXfffffkyZN79eo1ZswYOTg0
OkSswDhlnJYvkXGanUGKSpKpsCZ7g23vlfS+CvGROrhp06a6urpVq1YFvMGy
F1m8trZWlVfpVAU7m8HiMmrUKCkuU6ZMmTp1asWHtYwPUrO9VFYiq5IVZvYg
UNm7d69XfzM4TlesWCEHfieeeGJbW5uacuONN8qAlYNDgwPEEoxTxmn54h+n
mRqkqCT2h7UlS5acdtppn/jEJ/SUxYsXy5SZM2eWuirnnwEzWF8yTpXXjRs3
rly58t133y2nvMrir7/+upRXCWuNjY0FO1t+HWk/JP8p/3577LHHLliwQP4z
Y8aMig9rGR+kZnuprERWxUGgdCqv/mZwnM6dO1eG58KFC/WU3bt39+vXb/To
0caGhzUYp4zT8sU/TjM1SFFJ7A9r4qMf/aiMr5///Ofy/7a2tlNOOeXII498
6623Sl1PxutLxunyumLFCiPlNbawJo1X/yGsVTyzvVRWwkFgbGFt2rRpMjxl
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
KAAAIwhrCrUVAGAEBQUAYARhTaG2AgCMoKAAAIwgrCnUVgCAERQUAIARhDWF
2goAMIKCAgAwgrCmUFsBAEZQUAAARhDWFGorAMAICgoAwAjCmkJtBQAYQUEB
ABhBWFOorQAAIygoAAAjCGsKtRUAYAQFBQBgBGFNobYCAIygoAAAjCCsKRnW
1iVLljRp0uSggw4y2ObOnTsfffTRoUOHdunSpWPHjqNGjbr55pu//vprg5Mo
WccAwBT3BeXNN9+cOnXqkCFDWrVq1bt375EjRy5evDj+11esWDF27NgDDjhg
t91269Gjx7HHHiv2zKLsBsfcvn37nXfeecwxx3Tr1q1NmzaDBg26+OKL169f
H9rssmXLTj755D59+ohmjzzyyCuvvPKNN96o2JmKNVH0dsKECfvtt1+LFi36
9u07adIkcbwRf2ZzhZpoFssT5UNYU7IKax999FGvXr3EpPfff39TbYpietJJ
J9UFHHbYYRs2bDA1lTJ1DAAMclxQHnzwQRFbgrvWX/7yl3G+PmXKlOB3hX32
2eedd97xjrlx40aRoYJjiqPipUuX+poVUw+OKfo5b948TWcq1sSrrrqqcePG
wZZ/+9vfxpnZXKEmmsXyRClZLSiEtYrefvvtvn37ykkbDGuXX365bPPggw9+
6KGHnnzyyVNOOUUOGThw4Pfff29qQqXpGAAY5LKg/PGPf5ST69Sp0yWXXPLc
c8/dfvvt7du3lwOfeuop/dfvvvtu9fXf/e53ixYtmjNnzn/8x3/IgQceeKD3
/Nro0aPl8EGDBonpLly48Nxzz23UqJEY0r17d+/x8P333y/HFMNnzpy5ZMmS
3//+9507dxZDRNSKOutXsSbOnj1bftqkSZPLLrvs2Wefve+++0SolAPvvffe
VIswM9REs1ieKCXCmuI4rG3btm3atGnNmjVTf/kxFdbWrVvXsmVL0eCAAQM2
b94sB4p9lCipckIvvviikQmVpmMAYJbLgiKOS2V4eeWVV9TAVatWyT4cffTR
mu/u2LGjbdu2YrQOHTp8+umnarjYM48fP162IA565cAvvvhCDjn00EO/++47
NfL1118vh991113q63vttZcY0q5duzVr1qgx33rrrebNm4vhZ555pq8ncWri
l19+qeKeSH9q+FdffSVCpZyLAp1AoSaaxfJEWRHWFJe19cMPP5SVRWjatKn8
s6SpsHb77bfLlmfNmuUdLvZjopqL4aeddpqRCZWmYwBglrOCsnDhQjmt6dOn
+z4aOnSoGC4OX73Byuevf/2r/PpNN93k++ijjz6SH02dOlUOee655+SQGTNm
eMfcuHGjHD558mQ55PXXX5dDLrvsMl+zw4YNE8O7du3qHRizJi5evFiOc+GF
F0Z9NHv27KiZzRtqolksT5QVYU1xGdaeeeYZObm99977L3/5iyxepsLa2LFj
RWvNmzfftGmT76MRI0bIUrht2zYj0ypHxwDALGcFRe5XO3TosGPHDt9HX375
pYhR+ku/FixYMHjw4J49e77wwgu+j0TNlXMxevRoOWTlypVyyD333OMdU+zS
5fDzzjtPDtm8efOiRYtuvfXWt956y9fs4YcfLsbs1q2bd2DMmnjnnXfK0byn
1aStW7fKG9lOP/10zfzmCjXRLJYnyoqwpjgOa927d7/jjju++eab+l1/aTQV
1uTFJ/379w9+dM0118jZ9N0z7kZuOwYAZjkrKIcddpg3T3322Wdz585dunSp
SGpVtiwCkZyLadOmySEiD8qrEPv16yeLl3T11VfLMZ999ll9m8uXLxcHzGLM
KVOmeIfHrImXXXaZnNDq1auDje+22251DbcmJZ/XbFATzWJ5oqwIa4rLsCbq
0f/13LJtNqy1bt26LuI+BVEK5WwuWrTIyLTK0TEAMMtZQenWrZuY0FVXXbVy
5cp99923zuPss89O/cTynTt3DhkyRLbjvdPn1ltvlSewRF6bOXPmnDlzJkyY
oE6KeROc1yeffPL4449PnDhRVoH27duvWrXKO0LMmnjPPffIab300ku+j0Q4
lR/16dMn3Sy7R000i+WJsiKsKS7Dmo/BsLZ9+3Y5I2PGjAl++vDDD8tP9U9O
tiG3HQMA49wUlO+++07e3iUOUOV5JR8RqbZs2ZKiZfXU/ZNOOsn30YIFC4IT
GjFihOZcnjzlITVp0iR4baRPVE1UJ/vGjh3r++i2226TH3Xo0CH2XGaJmmgW
yxMlRlhTyhHWxDKUtTv4rC3hz3/+s5zNxx9/vPpplaNjAGCcm4KingEinX/+
+R9++KGolcuXLxcFRQ689NJLkzY7bdo0FXw+++wz70ePPPJIp06d5Kdil64e
3ti4ceOpU6fu3Lkz2NqOHTuaNlD9FC0sXLhQ04Gomvjtt9/26dNHNnLdddeJ
43M5fP78+W3atJHDW7dunXR+M0FNNIvliRIjrCnlCGuiLMprVCZNmhT89Ikn
npCzOXfu3OqnVY6OAYBxbgrK6tWrVQLyhbJNmzbtvvvudQ1nsr766quYDYod
9YUXXigbFPHn1Vdf9X76wgsvyONhEeJmz54tSraIS6IoDxw4UH4l6h3ca9eu
FTnu888/v/baa2VqE/99++23o7qhqYne83o9e/Y88cQTBwwYIJOjfAfBHnvs
EXNms0VNNIvliRIjrCnlCGtCjx49RGuihAU/mjFjhpzNTN42ktuOAYBZbgqK
KJpyQs2aNQte7jh9+nT56WuvvRazNfUG4Y4dO65cudI3wpFHHik/9T2MUUxa
nvASEezjjz/WT+XWW2+VjZxxxhlR4+hr4pNPPinSYp2HCKSPPfbY8OHDDVZS
B6iJZrE8UVaENaU0YU0+HGzIkCHBj2688UY5m6+//rqRaZWjYwBglrOCIlJV
XcRTNdSlX3FePbZu3bpBgwbJ8ffaa6/33nvPN8LOnTvl+6yHDh0a/Pr9998v
v/vUU0/pJ7R9+/YWLVrURTy1T6pYE9euXTtr1qzzzjvvnHPOmTNnzhdffCEG
7rPPPnWVXgKeK9REs1ieKCvCmlKasCb/NNq1a9fg7QNnnXVWXcPNBakfEVbK
jgGAWc4KinyXdIcOHYLvU5s3b57sxoIFC/SNfPzxx+peMHHEK7OPj6jRcoRx
48YFP12+fLn89LbbbqtvuJlOZKibb7558+bNwZHl80a6dOkS1Z8UNVG9+PiK
K66I/61sURPNYnmirAhrSmnCmnqfyMsvv+wdvnXrVnnpiCjuRiZUmo4BgFnO
Cop6cv67777r+0g+J6RRo0b6d65t2LChb9++spFTTz016vH7gny0yH777Rf8
6NFHH5UtyHuC1Nurn3jiCd+YW7ZskanqmGOOiZpQVE1cu3bt2LFjhw4d+swz
z/g+UldXzp8/XzOzuUJNNIvlibIirCmlCWuinMkndI0fP947XBXT6667zsiE
StMxADDLWUF544035LRGjBihno5Y3/CAEZmtKh6gTpkyRbYg9sw7duzQjHnc
cceFBqJt27bJp3wIn376qRjyzjvvyH8OGjTI2yvhkksukR+JQ+uoCWmeBinf
UDBq1Cjv8C+++KJ37951DU8XEePo5zc/qIlmsTxRVoQ1pTRhTZg8ebKcnYsu
umjDhg1bt2597LHH5O0GrVu3FkNMTag0HQMAg1wWlJEjR8rJTZw4UT5iUfz3
4IMPlgMffPBBNebJJ5/cvcG6devkkJUrV8oHPAq//vWvbwgzZ84cOfKKFSvk
A/fETvuBBx5Yv369GPjuu+8ee+yxsoWzzjpLTUs+7qOu4Z1o8vn/Yg8v9vxy
ciJViaIfNUeamjh69GjZ7K9+9av3339f5MRXXnmlX79+cuCsWbOqX54uxa+J
wd8OQSxPlBJhTSlTWFu9evWee+4p50hURrmnqmu4YDvb59bmtmMAYJDLgvLB
Bx/079+/bpeWLVuq/582bZp3zMGDB8vhn3zyiRwyfvz4ukpE7FItqAc1SOIA
WP3/gAEDvDcEiWPgnj17qk/bt2+v/r9du3bLli3TzJGmJq5du7ZLly6qKfWi
N+GCCy4I3riXc/FrYvC3QxDLE6VktaAQ1mKSf4E0ezX1v//971GjRnnfQ9qv
X7/nn3/e4CRK1jEAMMVxQRHVc8qUKfJFY/IwdeDAgbfccotvtCOOOEKOoF51
LR+gpzdixAhvI0uXLvVmw7qGN7JNnz5927Ztvslt3Ljx/PPPlyfjpCZNmqgT
bRr6mvjPf/7zxBNP9Hagd+/e9913X+GSmhSzJgZ/O4RieaJ8CGtKhmHNHrHQ
Vq1aJWrrBx98EHw+UoZy2zEAqF4mBUXsS99///0lS5Y4uKR806ZNohyLffia
NWv0Kenbb7/9+9//Pn/+/H/84x9bt2411YH169evWLFCdGD16tX6W+0KgZpo
FssTZUJYU0oZ1gAA7lFQAABGENYUaisAwAgKCgDACMKaQm0FABhBQQEAGEFY
U6itAAAjKCgAACMIawq1FQBgBAUFAGAEYU2htgIAjKCgAACMIKwp1FYAgBEU
FACAEYQ1hdoKADCCggIAMIKwplBbAQBGUFAAAEYQ1hRqKwDACAoKAMAIwppC
bQUAGEFBAQAYQVhTqK0AACMoKAAAIwhrCrUVAGAEBQUAYARhTTG4KGRX3377
bSOtIZ1PP/1U/Aqff/551h0BUHMoKADi44gFGoQ1xeCiuOKKK0RTZ511lmac
nTt3Pvroo0OHDu3SpUvHjh1HjRp18803f/3110Y64LNkyZImTZocdNBBNhpP
ytmMP/300+JXEHP93XffGW8cADQcFxSXXBavDL355ptTp04dMmRIq1atevfu
PXLkyMWLF8f/+ooVK8aOHXvAAQfstttuPXr0OPbYY8VSEocxwTG3b99+5513
HnPMMd26dWvTps2gQYMuvvji9evXhza7bNmyk08+uU+fPqLZI4888sorr3zj
jTcqdqbiMYDo7YQJE/bbb78WLVr07dt30qRJ4vgt/szmSkHXT45YoEFYU0wt
ir/+9a9iryh272vXro0aR+ycTzrppLqAww47bMOGDdX3weujjz7q1auXaHz/
/fc323IKLmdcELVMNH7TTTcZbxkANFwWFJcc78Oz8uCDD4rYEpzNX/7yl3G+
PmXKlOB3hX322eedd97xjrlx40ZxfB4cU6SMpUuX+poVUw+OKfo5b948TWcq
HgNcddVVjRs3Drb829/+Ns7M5kqh10+OWBDFVEEJVYNh7bvvvhswYIBo59pr
r9WMdvnll8vJHXzwwQ899NCTTz55yimnyCEDBw78/vvvq+yG8vbbb/ft21e2
nIew5mzGpddee0203Lx583fffddsywCg4bKguOR4H56JP/7xj3KOOnXqdMkl
lzz33HO33357+/bt5cCnnnpK//W7775bff13v/vdokWL5syZ8x//8R9y4IEH
Hug9vzZ69Gg5fNCgQWK6CxcuPPfccxs1aiSGdO/e3Zsv7r//fjmmGD5z5swl
S5b8/ve/79y5sxgiolbUWb+KxwCzZ8+WnzZp0uSyyy579tln77vvPhEq5cB7
77031SLMTKHXT45YEIWwphhZFA8++KBopF27dps2bYoaZ926dS1bthSjiSq8
efNmOVDsQ8QuWvbhxRdfrLIbwrZt26ZNm9asWTP1l6XMw5qbGfc54YQTRMtj
xowx3jIARHFWUFzKZB/unjjOl+HllVdeUQNXrVol5/Hoo4/WfHfHjh1t27YV
o3Xo0OHTTz9Vw8VSGj9+vGxBhAg58IsvvpBDDj30UO/Fb9dff70cftddd6mv
77XXXnJlWLNmjRrzrbfeEsf2YviZZ57p60mcY4Avv/xSxT2R/tTwr776SoRK
ORf5PyGllGD95IgFoQhrSvWLQuwTxM5QNDJlyhTNaLfffruc1qxZs7zDxX5G
VAcx/LTTTqumG8KHH34o97RC06ZN5Z/pMg9rDmY86E9/+pOsRKtXrzbeOACE
clZQXMpkH+7YwoUL5TxOnz7d99HQoUPFcBEHNHcV/fWvf5VfD17M9tFHH8mP
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
z59//vnnyyF777239/za2rVr27dvL9OZ+BXEmLfcckvHjh3lyM8884y3ZXHg
IYd36tTpkksuEXNx++23y68LTz31lBpT/GT9+/eXw4cNG3bfffeJpn7605/K
IQceeOB3332XfCmi1hHWFGe1dd26dfKPOQMGDNi8ebMcKDZwEUBkH1588cU8
t29wEn/7298OOeSQOo9gWPviiy/kR4ceeqh3L3f99dfL4XfddVeVswMAZpUy
rDkoLjWlFpbn7Nmz5bz4zkCJ4CaHf/jhh8FviYVwwgknqAODmGFt+vTpcvwT
TzxRHDGq4Q8++KAcfu2116qBl156qRz48MMPq4Fvv/12hw4dgilSRD8xsEmT
Jq+88ooauGrVKtmC9ypNEc3kQNF/b9YWXZLDX3755TjzAngR1hRntfX222+X
05o1a5Z3uNhvi12BGH7aaafluX1Tk/jv//7vpk2bynaaN28eFdaee+45+dGM
GTO8wzdu3CiHT548ucrZAQCzShnWHBSXmlILy3PUqFEy5nz55Zfe4cuXL5fz
fu+99wa/ddddd4mP5PUz8cPaEUccIUYW+fejjz7yffSTn/xEfNS7d2/5z507
d8rzYnvssYf4f++YF110kZzo3//+dzlk4cKFcogIg75m5eWOYorqL8mHH354
XcM1P7576pcsWSIbuemmm+LMC+BFWFOc1daxY8fKeBK823TEiBHiIxFh4tx4
m1X7piahbkP7r//6r8WLF0eFtZUrV8qP7rnnHu9wMWk5/LzzzqtmXgDAuFKG
NQfFpabUwvJ85513HnnkkeAFMIsWLQoNqvIr8oTjZZddNmzYsPhhTeYvEaCC
H11zzTVych988IGchPznlVde6RtTHGTKj6677jo5RP5MHTp02LFjh29kkUA3
btyozqCpZu+4445gH9auXes93wfER1hTnNXWvfbaS0yof//+wY/U/kRs8rlt
39QkDj744FNPPfWNN96o9/yRLRjWxO5RXrjer18/7wXn6k63Z599tpp5AQDj
ShnWHBSXmlKzy3P79u3yjJvw8ccfez/aunWr/EPuAQccIP4/flj7+uuvZYOT
Jk0Kfnrrrbd6Dxgefvhh+c+nn3462Df5kchocshhhx0m/jl69Gj5z88++2zu
3LlLly71nSsUnn/+efndf/zjH+Kf33333WuvvfY///M/7733nu/8HZAIYU1x
Vltbt25d98OLnJU77rhDdmPRokW5bd/UJDZu3Kj+XxPW6ht2s40bN5Z5bebM
mXPmzFGXu/tuGQaAPChlWHNQXGpKrS3Pb7/9VoSX66+/Xl1XM378eN848okr
zZs3l1chJjqzJv+ue9RRRwU/+tWvfiWn+Oijj4p/3nbbbfKfoXeQtW3bVnx0
+OGHy39269ZN/POqq65auXLlvvvuW+dx9tlnex9oOWvWLDl88+bN5557bqtW
rdSYe+yxxwsvvBBvOQF+hDXFTW1Vf7QZM2ZM8FP1156o141l3r6lSejDmrBg
wYK6gBEjRgT/tAUAmStfWHNQXGpKDS5PNVPSxIkTfY+7XLp0qbxP7ZZbbpFD
EoU1eQdZ06ZN1e1mkshT3bt3lxOVF2Ree+218p9vvfVWsB15xnPAgAH1DWfH
ZJdEpt5tt92CxyH9+vXbsmWL/KJqVp039BLt3H///ckXG0BY+/+5qa1iHuWG
f+aZZwY//fOf/yy78fjjj+ezfUuT0Ie1Rx55pFOnTmp316xZM/n/jRs3njp1
KlcXAMib8oU1B8WlptTg8rzhhhvqGh42ovLLz372M3VtzKZNm3r16lXXcNOZ
KuuJwpo6sSUC1Ntvvy0Hfvnll6eeeqqa4m233SYGXnnllfKf//rXv4LtyGc/
9u3bV/z/Rx995A1c559//ocffigOR8VBy/777y8HXnrppfKLZ599thqzd+/e
zz//vPiV165de80118irg9q2bSv+Wd1SRC0irCluauuOHTvkNht6WfUTTzwh
uzF37tx8tm9pEpqw9sILL8iK1qFDh9mzZ4uVZPv27WI1GDhwoPxK8JWUAJCt
8oU1B8WlptTg8vzqq682b968detWUfEHDBggZ1BdCSn+R/yzTZs23gCVKKyJ
iCcfxig0a9ZM/P9xxx0nH8WvXtn2wAMPiDGnTZsm/7l69epgO/JaxwMPPFD8
vxhB5S8VyiSRLnfffXcZP8WsiSHip5RjilD26aefekdWrxW4/PLLky01gLDm
4ay29ujRo67hPSDBj2bMmCG7Uc3bVWy3b2MSmrB25JFHyo+WLFniHb5ly5Y+
ffrUNVzz4LtDGQCyVb6wVu+kuNSUWl6eIunssccedQ1Xy4hA9Nhjj8n5ffDB
B72jJQprwvr1608++eS6HxKpbf78+d5jjPvvv1/+c9WqVcFGZLKTr1oTx6Uq
/anLHRUVwV577bV6zwm73/zmN74xxRGsvEXxhBNOiDkvgEJYU5zVVvlkoSFD
hgQ/uvHGG2U3Xn/99dy2b2MSUWFt586d8hVsoQ/jVfvbp556KuksAIA9pQxr
DopLTanx5amSztNPPy2vPBT2/SF5ANCkSRP5zwULFsRpeeHChddff/0vfvEL
MQkRo7Zv367CoHyiiHpsoxjT993vv/9eXqj505/+VA7p2LGj+GefPn2CE1JX
q86ePVv88+6775b/lI8x8ZHzqN71BsRHWFOc1dZTTjlFTKhr167Bm63OOuus
uoZbsbzPF8pb+zYmERXWxFohh48bN07zLXkVOgDkRCnDmoPiUlNqYXkuWrRo
xowZItQEP1LPG5k5c6a6KlLviSeeSNeNiy++WC7PzZs3i3+++eabatK+Mdes
WSM/Uq9gO/DAA+sabsTwPQ5FmDdvnhxZpsi5c+fKf/7+978P9kHO4+DBg9PN
AmoZYU1xVlvV+1N8z4zdunWrvLhaXimd2/ZtTEJzGaR8tEjoVRCPPvqo/FaZ
ruoHUAKlDGsOiktNKf3yFCFUnpbad999g59eddVVcvaXLVt21113XRFGXirZ
vn17+c/Qhzcqd99998iRI9UZMUUcPcpuHHLIIXKIiGzyufrB9yaoN7Kp4wr1
qqB3333XN7K8961Ro0bywdTvv/++HDP45+VvvvlGPkzykksu0S0yIAxhTXFW
W9euXSufZ+h7w4iKHtddd12e27cxCU1YO+644+RH8+fP9w7ftm2b+luc705e
AMhWKcOag+JSU2pheY4dO1bOi+/k2ieffNKuXbu6hnvBNC9LTXTPmnpsiO/a
0d/+9rdyuEhzauDUqVNlzvJGMHGc2b9//7qGJ4TIZ4YIb7zxhvz6iBEjtm/f
rkbetGmT/GOyN1OfdNJJdQ230vvuspdPwuRvy0iHsKa4rK2TJ0+Wk7vooos2
bNiwdevWxx57TF6b3bp1azEk5+0nmsTJJ5/cvcG6deuiWtOEtRUrVshHZonG
H3jggfXr14uBYu967LHHyq+cddZZ1c8OABhUyrBWb3rPj9Ivz2XLlskKLnLN
008/vXPnzh07drz44ovy+WCCSFKar0eFNdGsXBpXXHGFGvi3v/1NPjt63333
/dOf/vTtt99++umnKsH17t1bLF418gcffCA7Jhp55ZVXRMfWrFkzfPhwOfJV
V13lndzIkSPl8IkTJ8qXAoj/qvvsvA9F+ctf/iIHdujQQRzPfP311yKK/u53
v5P3wYkkWPTrWpEJwprisrauXr16zz33lFMU+xa5Z65ruKDayF9dbLefaBKD
Bw+WH33yySdRrenfs6ZutZbkI5WkAQMGsOsDkDdlDWtm9/yoheV50003qZLd
smXLFi1aqH+OHj1a/6bUqLC2YMEC2cI555zjHf6b3/xGNa5eySrsvvvu77zz
jq+R//N//o8awdurI444QgQ975gi2ckzbmou1P+LMOhrdvr06TIG1jWcYlPv
levVq1fhfjvkhNWCQljT+Pe//z1q1CixIatNvl+/fs8//3xR2o8/CbHfk59+
9tlnUU2tWLFCjhOVJZcuXerdVdY1vI1F7BK3bdtmcI4AwAjHBcUlg3t+1NfG
8hSz07dvX28F79Gjx2OPPVbxi/I+iAMOOMA3fPHixbKd8847zzt8x44dd999
t7xDTRK5afz48SJthbYv+tC1a1c1svgVLrjggo0bNwbHFAeoU6ZMadu2rRxT
JOuBAwfecsstoc2++OKLImDK03yC6M/YsWODt7wBMRHWlExqq5ipVatWiSQi
9iT6vy/ls303k1A2bdokVgAxrTVr1gSfywQAOVHisCa53PPXglpYnmvXrn2x
weeff251Qtu2bRPJSExILFJx2FBx/I8//vill156/fXX5XNCNMRP8/777y9Z
siTO7SRfffXVq6++Ko6Ey/qDwhnCmlL62goAcIOCAgAwgrCmUFsB/L/27mBV
bTCKwmjf/9n6KEWJVG+cmB4IHFq47cQdPeWuNZKMMtt85E+ECIMCQIRYa7YV
gAiDAkCEWGu2FYAIgwJAhFhrthWACIMCQIRYa7YVgAiDAkCEWGu2FYAIgwJA
hFhrthWACIMCQIRYa7YVgAiDAkCEWGu2FYAIgwJAhFhrthWACIMCQIRYa7YV
gAiDAkCEWGu2FYAIgwJAhFhrthWACIMCQIRYa7YVgAiDAkCEWGu2FYAIgwJA
hFhrthWACIMCQIRYa7YVgAiDAkCEWGu2FYAIgwJAhFhrthWACIMCQIRYa7YV
gAiDAkCEWGu2FYAIgwJAhFhrthWACIMCQIRYa98AAACGOSh/xBoAAMAzDsqf
/yvWAAAAvgixBgAAMJBYAwAAGEisAQAADCTWAAAABhJrAAAAA4k1AACAgcQa
AADAQGINAABgILEGAAAwkFgDAAAYSKwBAAAMJNYAAAAGEmsAAAADiTUAAICB
xBoAAMBAYg0AAGAgsQYAADCQWAMAABhIrAEAAAwk1gAAAAYSawAAAAOJNQAA
gIHEGgAAwEBiDQAAYKCDYu07AAAAzzki1gAAAHheMNYAAAB4GbEGAAAwkFgD
AAAYaI+1y+WyLMvtdnv37QAAAPBRdVaNVqW2ruv5fL5er+++IwAAAD6qzqrR
qtS2bTudTlVteg0AAOC9qsuqzqrRHo9Hxdr9fq9w8+YaAADAe1WXVZ1Vo/X/
aO8P2uq6l9cAAABer6JsL7X6sf1pv76fh5RsAAAAr1H9tZ9+3J+gbZ/Zz0OW
ZVl+AgAAcLzqrz3Efj/9+Kl1XavpfgAAAHC8/Sv9/840AAAAAAAA4G9+AfTE
dxc=
     "], {{0, 499.5}, {583.5, 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{144, 144}],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSizeRaw->{583.5, 499.5},
   PlotRange->{{0, 583.5}, {0, 499.5}}]]], "Output",
 TaggingRules->{
  "Settings" :> {$CellContext`real11 = 1, $CellContext`real12 = 
     0, $CellContext`real13 = 0, $CellContext`real21 = 0, $CellContext`real22 = 
     1, $CellContext`real23 = 0, $CellContext`real31 = 0, $CellContext`real32 = 
     0, $CellContext`real33 = 0.17999999999999994`, $CellContext`state1 = 
     False, $CellContext`state2 = True}},
 CellTags->"Snapshot",
 CellID->579798803,ExpressionUUID->"035394c1-58b8-4799-b270-0b3573117be6"],

Cell[BoxData[
 PaneBox[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzs3XmUFOW9//EZRFmUJejR4EEJygUF3MCLW4gkMcYto2jIJYEkhohEY4xR
lHiAgF7NNcnNYtSQDYlGiSZ6osaIY0QxkgGGQUGFmWEbtmFmmJthFoe593ju
4fe9/fx4TlvdXV3d/VTVU1Xv1x8cuqaquqr6WerT9VT1iJnfvvbGXmVlZXf0
lX+u/drcT95++9fuvm6wvJh66x03zb511g2X3zpn1uxZt58/8wiZ2CT//LR3
Wdn//f9Qhv/5n//p6ur6LwAAAACA/yR/SQrLjGaOmHYgpaOj430AAAAAgP8k
f6kgliuydXd3y187Ozu7U3oAAAAAAP5TEUyymCQy+U/WpCaZ7uDBg2FvKQAA
AAAkjmQxSWSOvKZGP5LUAAAAACBEOq/p8ZBtbW1q9GPYmwYAAAAAiabGQ0pG
k6T23//93+pCW9gbBQAAAADoUTepSVKT1NbR0cEASAAAAACwgaQzyWiS1P7r
v/7r/fffD3tzAAAAAAD/n2Q09RNshDUAAAAAsAdhDQAAAAAsRFgDAAAAAAsR
1gAAAADAQoQ1AAAAALAQYQ0AAAAALERYAwAAAAALEdYAAAAAwEKENQAAAACw
EGENAAAAAEq3I6U65ZUPUxPVDN5XSFgDAAAAgNIR1gAAAADAKptSXvRGzexl
tYQ1AAAAACgFYQ0AAAAArKJGNmYmsvYPy5zBy5BIwhoAAAAAFIewBgAAAAAW
Uk8OKSKsqQXdV05YAwAAAIDiENYAAAAAwELqyfxZA1ouama1oPvKCWsAAAAA
UBzCGgAAAABYiLAGAAAAABYirAEAAACAhQhrAAAAAGAhngYJAAAAABYirAEA
AACAhXakFBHW1ILuKyesAQAAAEBxCGsAAAAAYK1NKZmJLCs1s5fVEtYAAAAA
oBSENQAAAACwlhrZqJ4c8sqHqYlehj6mI6wBAAAAQOkIawAAAACQBIQ1AAAA
ALAQYQ0AAAAALERYAwAAAAALEdYAAAAAwEKENQAAAACwEGENAAAAACxEWAMA
AAAACxHWAAAAAMBCwYS11tbWdevWNTQ0+PcWAAAAABAnwYQ1SWrLU95++23/
3gWJIiV2xYoVbW1tYW8IAAAA4Itgwlptbe3yw0rJa7Kdr732WmVl5b59+wpd
duPGjdekLFmypOgNgHcLFixQB7yjo8OP9V955ZVlZWUjRozo7u72Y/0AAABA
uAK7Z00yWil5bdOmTRMnTiwvLy877JRTTnn11Ve9r2HFihVqwe985zuFvnsu
7e3tf0pZtWqVqXXar7q6Wu31/v37XWb75Cc/qQ74P//5z1LWnOsgSwGQlR91
1FFNTU1F7AUAAABguSAfMFJ0XqupqRk8eHBZht69e//5z3/2uBI/wtqWLVvU
Oq+66ipT67TfV77yFbXXa9ascZmtiLCWdc25DnJlZeXUqVN/97vfFbELAAAA
gP0CfhpkcXntrrvuUqfrF1988WuvvbZq1aovf/nLasqVV17pcSWWhLWDBw+a
evewWBLWAAAAgHgL/tH97777bqF5bfz48ep0fevWrXqiZIGTTz551KhR+pYl
OauXIHbOOef06dPn/PPPnzt3bvoAuaxhzX2RntTwy1tuuUU24Mgjjxw9evSM
GTNkEfWne++9d9y4cWqdAwcOnDBhwu23355rF1599dXLLrvspJNO6t2799ix
Y7/2ta+53HY3bdo0WdukSZPkWF199dUf/ehHzzzzTNm23bt3qxkqKysnpCxZ
skTe9NRTTz3hhBM8Hgfx+OOPT548+dhjjz366KPPO++8RYsWOT79pUuXTpky
RWYYOnSobIy+fLl371550yFDhqi9Pu200+Tle++9l3UvMsOaFLM5c+bIwezX
r99xxx0nMyxbtsx9zS4Hefr06fLywgsvTH/TxYsXyxE7/vjjBw0aJPv48MMP
O7Yq164BAAAAtgnld9YaGhp0XpM8knf+iy66SJ2uz5s378CBA1nn2bVr18iR
Ix3jJCWJyK6pGTLDWt5F6uvrJV45ZpBY9NZbb8lfJXA5/pTr0s+jjz6afred
csopp+g3cpA0V5Ya5Ol4949//ONdXV0ywx/+8Ac15WMf+5j+qwpreXdK4k9Z
hvQt/+EPf+j4q2z8E088IX/avn175rK5rq85wppsuSTrzMUfeughlzW7HOSz
zz67LHXPmn5HKR6ZK7npppu87BoAAABgm7B+FHv16tUqrL355pt5Z164cKE+
u+7fv/8ll1wyf/78mpqa9Hk+85nPqBnuvvtuWackMvVy9uzZaobMsJZ3kQsv
vFBN+fznP//000/feOON6uX111+vduHnP/+5mjJ+/Phly5atXLky6/affvrp
Ms+gQYMee+yxF198UWfP5557Luv8Kqypnb311ltvv/12WVZNeeCBB3rSwpo4
44wz5syZc8cdd6gBlnl3SgXAYcOGbdiwYdOmTZ/+9KfVDJs3b5a/vv766+ql
BCvZ1BdeeGH48OFlqeQoeaq9vV128xOf+ISa5/7775eXLS0tWffCEdaefPJJ
9XLatGmvvPLKj3/8Y/Xy3HPP7Uk9RSTrml0OsiOsvfTSS2q2IUOGPPLII7/6
1a9OPfVUNUVdDHXftXxlEAAAAAhaKGEt/c41L7+ULds2Y8aMsgxyuq4GRnZ1
dfXr10+mSFTRS02cOFGmjBkzRr10hLW8i3R0dBx55JHq3F5dzxKyGZMmTaqo
qFAvPd5O1djYuGfPntbWVvXy2WefVUstWrQo6/w6rP32t79VU5566ik15dpr
r+1JC2vnnHOOxBy9YN6dkiMpAVBeHnfccbIZbW1t3d3d7Skq68kmqTW/8cYb
anEJNWqKHrJY3D1rBw4c2JOih2vKxquspBcp6J41R1jTl9X0TzNUVlZOSnnm
mWc87hoAAABgj+DDWqFJTduwYcN3v/vd8847r0+fPjqvjRgxoid1kSszyinl
5eXqOfCOsJZ3kVWrVqmXEtBybZLHsCbx5JFHHvniF78oKezEE0/Ub/S9730v
6/w6rOkn2EtylFAjU0aOHNmTFtYkoaQv6OU4pMfeI444QiKPbIb+INSPl2V1
2223qXmKfsBITU3NLbfcIp+gfGr69rRevXrpRUoJa5dddpmara6uLuv2eNk1
AAAAwB5BhrWurq4333yzuKSWrqWlZfHixeqyl5AQ9+qrr+oT77MPK0tdFJP/
7Nq1qycjrOVdRM8/c+bMXFviMazpoYaSmIYNG6bf1z2sycz6Bj2Je3379pWJ
J510Uk9aWPv+97+fvqCX49DZ2blw4UI9RFCRrVIfx+TJk9WUM888Uy0+ZswY
tbYFCxaodykurD333HMSrNSUgQMH6g0wFdb02+3YsSPr9njZNQAAAMAegYW1
opNac3PzlSl33HFH+nSdgGS1EgeOOOII+f8XvvCFXOtxhLW8i8gxkRwhM0yY
MEFP/OUvfzlv3jx141hPWo649NJLc71vdXW1mufyyy9vbGyUKcuWLfMS1sSL
L76opqxcuVJNueyyy3pyhzUvx0Hbvn370qVLVWARkn9l4p133qlevvPOO7kW
1JHq73//u8v6HWGtoqJCvfzrX/+qhlyqt84a1tLXnOsgO8LanDlz1Gz6AY+b
Nm2al1JVVeVx1wAAAAB7BBPWSrymph/eLifecqZdX1//s5/9TA2GPPbYY9U9
UOrUvXfv3k8++aS83YYNG84555whQ4acdtppaiWZDxjJu4gOTQsWLJA3/fWv
f61eXn311WqGpqYmFY4GDBjw/PPPb9u2LXPjJZuopa644oqWlpba2lp1r5aX
sHbiiScuWbJEItWIESPUlLvuuqsnd1jLu1MbN278WMqUKVPUzW46wqiHIj7z
zDPqpUQt+Zg6OjruvffeISmy++otbrvtNjXPjBkz1q5dK/Nk3QtHWLvgggvU
y5dfflne+qGHHlIv08Na1jXnOsiOsKaPyciRI6Ww1dTUTJo0SU1Zt26dx10T
jz322OzZs9Ui+lOWArBw4cL0R6nIDDfffLPMnHXfAQAAgNIFE9aKvk9N+c1v
fpP56HtFzrfVPKtXrx44cKCaqM7tlQcffFDNkBnW8i6ycuVK9TiOdEceeWRl
ZaXetvQ7obIOhpSocvTRR6evQV2wK8sX1mQ2/RBI5eSTT967d2+Pa1jLu1P6
R+sk7eob6I477jgVqQ4ePJh+U5ve1FNPPbW5uVm/RfpWeXx0v+Qdx5FUK08P
a7nWnPUgO8KaZPZrr722LMOnPvUpNYOXXZOIpybq59KI7373u5mfl4RfNXH9
+vVZdx8AAAAoUcBhrej71F566aX03xQrS111clzXeO211y6++GL1OMSy1O1d
6VdM5K9qevpPV7svImSbL7roInUVTwKjnKL/7W9/S5/hH//4x8SJE9UNZepR
jZkk9OlbtMaNG6efWr9w4cKs86uwJjnx5ZdfVnstkUSyjw4vTz/9tFqDHpDp
/Tg0NTV96Utf0iFUdu3SSy9NvyYoJeHWW2/V1/Ik1EydOjX958jFXXfddcIJ
J6gZ0i9CpZOUpGZoa2vrSV1d/frXv662SnZH1qCufEmizLvmrAdZXaCU7dfL
dnZ2zpo1SyKtWlyi7syZM9Oflpl31/SYVX11VW2Smjh//nw9Uf9mnOMnJAAA
AABTAhsGKafE+tn1RWtsbHzllVcqKyv37NmTax45Y5ds6DJDEYt0dHTIDO7b
rx/vn4ts/O7du71sjw5r6uWOHTty/Xy2C/edOnjwYF1d3Xvvvefyucv7ygyy
nlwzyLL6OfweyVHasmVLrpGTedec9yAr27dvl71Td8Zl5bJrEmy/+tWvqtvc
FPng7rzzzrlz5+7bt09PlBlkNke0BwAAAAwK60ex4cIR1gAAAAAkEGHNQoQ1
AAAAAIQ1C7311ltvvvnm6tWrw94QAAAAAKEhrAEAAACAhQhrAAAAAGAhwhoA
AAAAWIiwBgAAAAAWIqwBAAAAgIUIawAAAABgIcIaAAAAAFiIsAYAAAAAFiKs
AQAAAICFCGsAAAAAYCHCGgAAAABYiLAGAAAAABYirAEAAACAhQhrAAAAAGAh
whoAAAAAWIiwBgAAAAAWIqwBAAAAgIUIawAAAABgIcIaAAAAAFiIsAYAAAAA
FiKsAQAAAICFCGsAAAAAYCHCGgAAAABYiLAGAAAAABYirAEAAACAhQhrAAAA
AGAhwhoAAAAAWIiwBgAAAAAWIqwBAAAAgIUIawAAAABgIcIaAAAAAFiIsAYA
AAAAFiKsAQAAAICFCGsAAAAAYCHCGlAQqSkrVqxoa2sLe0MAAAAQc4S1xFqw
YME1KR0dHWFvi0l+79eVV15ZVlY2YsSI7u5uP9YPmzlK18aNG9XLJUuWhL1p
AAAghghrIaqurv5Tyv79+4N/909+8pNlKf/85z+Df3f/FLFfWT+I9vZ2NXHV
qlXpM59yyimy8qOOOqqpqcnkdgco3IIXaY7StWLFCvXyO9/5TtibBgAAYsi/
sHbgwAGDs8XSV77yFXWmt2bNmuDfnbCmZf0gtmzZoiZeddVV6TNXVlZOnTr1
d7/7ncmNDla4BS/SCGsAACBIPoW1devWLV++/O2333af7d1335XZ3nzzTYNv
HSGBnTMfPHgwcyJhTSsorMVA1MNa1vJcxDxFrIGwBgAAguRTWFt+mEtekz/p
2YK8vrZ9+/Y77rjjvPPOO+qoo84444ybbrqppqZG/3XatGkTJkyYNGnSypUr
P/OZz3zkIx/5wQ9+kGtVjz/++OTJk4899tijjz5aVrho0SLHYVy6dOmUKVNk
hqFDh8qa//znP6vpe/fulXcZMmSIOtM77bTT5OV7772X+RYu2yNpQk4Rzznn
nD59+px//vlz5851DMx79dVXL7vsspNOOql3795jx4792te+tm/fPv1XL6HG
ZQcrKysnpDz66KP/+Z//OW7cuOOPP/66667705/+lL4GKVpz5swZP358v379
jjvuOHnTZcuWpc+wadOmW265RWY48sgjR48ePWPGDNmv9Bny7qZD5n65bEOu
D+Lee++VPVITBw4cKBNvv/12tcj06dPl5YUXXpj+posXL7766qvlCAwaNEiO
2MMPP+zYqlwlweGBBx5QRzX9KH3uc5+TKeeee25ra6vHteXanrwF7/e///3U
qVNltVLSrrzyyp/85CfpmcWlNOatC+n0et56663Pfvaz8rmcfPLJP/zhD+VP
Dz744MiRI6UwTJw48amnnkpfyr0863Vu2LBBtvyYY46R3f/yl7+sS4usTR3b
559/Xk2pq6tTU2RrPb6Le1hrb2+XzZYVyhHQbVptba16l69+9au5DggAAEBW
PoW1hoYG97y2detWL4HOuF27do0aNarsw+QMc/369WoGOT2TKXKeNmzYMPXX
u+++O+uq5Hy+LEP6VRg5+XT8tby8/IknnuhJBcbMZbNe5si1PbIjck7rWIOc
IspHqRaUDCVv55jhlFNO0TPkDWvuO/iHP/xBTRkxYoRjH/XJcFdXV+bRFg89
9JCaob6+Xs6KHX894YQT5Bxef17uu5nJsV/u25Drg5BT9Fw7fvbZZ5el7lnT
7zhv3rzMldx0001eSoLDX/7yFzWDxF41RV/gu+CCCzyuzWV73AuehO7Mv86a
NUuvOVdpzFsXHPR6HIXnC1/4QvrLI4444rXXXlOL5C3PudZ57bXXqhl+/vOf
qym//e1v1RQpZmqKjlGF1prMK2uf+tSn1BT5KNWUn/3sZ2rK9773vVwHBAAA
ICv/7llzyWt5o5x/LrnkEnXi9LnPfe6pp5664YYb1MuTTz5ZzaBO+cSRRx45
Y8aM+fPnP/fcc1lXpVKGnLVu2LBh06ZNn/70p9WCmzdvlr++/vrr6qUkhRdf
fPGFF14YPny4OpmUE+b29vZly5Z94hOfUPPcf//98rKlpSXzXXJtz2c+8xk1
Xc6W33zzTTlXVC9nz56tFjz99NPl5aBBgx577DHZgIsuukjNoHcnb1hz30Ed
1sSFF154zz33XHzxxerl4MGDVXF68skn1ZRp06a98sorP/7xj9XLc889V72F
LKimfP7zn3/66advvPFG9fL6669XM+TdzUyO/XLfhlwfxOrVq/W5/fjx42Xi
ypUr1fodYe2ll15Ssw0ZMuSRRx751a9+deqpp6op6hKhe0lwbLwct+OPPz79
GC5evFgt/tOf/tTL2ty3x6Xg6TUPGDDgwQcf/M1vfiOVQk359a9/7V4a3YuK
S6k+66yz5DjrT1lceumlDz/88L/+67+ql3PmzPFYnvU6ZX9/9KMfycet16mu
SHoJa4XWmsywJsdKTfnWt76lplxxxRVqStZL5wAAAC58fRpk1lAWYlLr6urq
16+fnDXJ+a2ctaqJ+sS1tra2J+2UzzFaz0EOV//+/WW244477tlnn21ra+vu
7m5PUcPGFi1apNbzxhtvqEXkvNqxZi+3DmXdHr0jcparJ06cOFGmjBkzRr1s
bGzcs2ePHjgnG6nWo0d8uYe1vDuow9ppp52mRnx1dnaec845aqK6NCbT96To
p9yrGSRZyP87OjrknL8slTtkj9QMEgEmTZpUUVHhcTczOfbLfRtcPohc96w5
wpq+jKUf3l5ZWTkp5ZlnnunxVhLS3XTTTeqvKh5ee+218v9evXrt3r3by9ry
bk+u/dVr1mMmZUE1Zfr06WpK1tKYt6hk0utRla65uVm9lJwopUimSFhWU1RJ
6PFQnvU6165d65iixjl7CWuF1prMsCbJt0+fPjJl9OjRPalCfvTRR8tLKXVZ
DwUAAIALvx/dLydj6dEsxKQmqqqq1JnVv/3bv+mJ8+fPVxPV8/30YKq8v9Il
saLssCOOOELO4b/3ve/JDqq/ql/jyuq2225T83gPa47t0aeymcrLy9Xz2OWE
+ZFHHvniF78oazjxxBP1DHosVt4ra+47qMPat7/9bb2ITgr6YYlynnzLLbec
d955I0aM0LdKSfSQP61atUq9lDfKugFedjNT5n65bIPLB+ExrF122WVqtrq6
uqzb46UkpJOMpv4qB1Nq5eDBg+X/l1xyice15d2eXPurLwC9++67aoqEZSl4
MmXkyJFqSq7a4V5UMqn1SBLXU1QqHzdunHq5a9cutbbPfe5zakre8qzWKZ+L
Tohf//rX1TxS8Xu8hbVCa03WB4yofC3q6+tffvll9f/vf//7uY4GAABALgH8
zlr6g0RCTGo9aWdWX/7yl/XEf//3f1cTf/nLX/YcPuXr379/3rV1dnYuXLhQ
jzFThg0bps5RJ0+erKaceeaZZ6eMGTNGXsp/FixYoNbgPaw5tufVV1/V73j2
YWWpS1TyHznRlXn0UDTJNfoOI5fTzkJ3UIe1u+66Sy9yzz33qIm/+tWv5OVz
zz0nJ89qysCBA/WqVFDSH8fMmTOzboCX3czk2C/3bXD5IDyGNf12O3bsyLo9
XkqCgxrZKOnyjTfeUMvqgYh515Z3e3Ltr15QIoaaIqlHZSj50NWUXLXDvahk
ylxPrrCmD37e8py5zm984xtqHkdY0wdz/fr1aooOa4XWmqxh7Y9//KOaKLnv
9ttvV/93PDYHAADAi2B+FNuR10JJakLOr4444gh1oqsnXnfddepsat26dT2F
hDVt+/btS5cuVefMYvHixTLxzjvvVC/feeedXAvqc+a///3vuebJuj16R77w
hS9kXaq6ulqt+fLLL29sbJQpy5Ytcz/tLHQHdVi74IIL9LUMffOR+iHpiooK
9fKvf/2rmketRAUlKXXyH3k5YcIE/V4SmefNm/fAAw942c2sHPvlvg1K1g9C
h7VLL700ff2OsDZnzhw1m34k46ZNm+alqIzgpSQ4SP5VW3jLLbfIf/r06aPv
Z8y7trzbk2t/1ZuKp59+Wk2ReqqmXH311WpK3tqRtahkKjSseSnPecOaRCf1
Ul8LfuaZZ9QUFdaKqDVZw1pHR4e6HirH7YwzzihLezgMAABAQYIJaz1pea24
pPbYY4/Nnj1b5SmlqalpwYIFCxcuTH8uh8xw8803y8y51qPOtMV3v/vduro6
ff52zDHHqHuaPIa1jRs3fixlypQp6vY3fRatnsunzwPl7K6hoUHO3+69994h
KfqL/dtuu03NM2PGjLVr12YdeJlre9SO9O7d+8knn+zq6tqwYcM555wjKz/t
tNPkrxJM1JqvuOIKOT61tbX6bjKPYS3vDqY/YOT666+XaCBHXr2UhNXW1ibz
yDmqmvLyyy/LSh566CH1UgclfVeRfJT19fX64Qw6HbjvZlaO/cq7Dbk+CClg
KioOGDDg+eef37ZtW/om6bCmj8PIkSPffPPNmpqaSZMmqSmquHopCQ76io+6
p++aa67Rf8q7trzbk2t/9ZqHDx/+xhtvyMz60N1///0upTFvUclUaFjzUp7z
hrW//e1v6uWJJ5746KOPSnkYPXq0mqLCWhG1JtfvrDmeJvqTn/wk63EAAABw
F1hY60k9WmTr1q1FLCgnnOqcJ/2xEpK2HOdRQs7h1UT9KH6H1atXDxw4sOzD
5Jxc/zqY9ytr48ePV4v36dNH395y3HHHqbO4gwcPpt/Ioy4hlaUeVdfc3Kw3
Jn0zXB7dn7k96TuiMoXy4IMP9qSuSanHGmRugPcra+47qEOBvgtM+4//+A+1
Bolgjj+pzdBBaeXKlerZFOkkoVRWVnrZzawc+5V3G1w+iPQbxHI9ul8yvr5H
Kd2nPvUpNYOXkpBJ/8pb2Yef5pF3bXm3J9f+OtasSdZT0bsnd2l0LyqZCg1r
Xspz3rC2f/9+R1nV61RhrYhakyus6WezqJXs3Lkz1wcNAADgIsiwVjQ9PCn9
eooetTV//nw9Uf+iVvrvXDu8/vrrF198sTo57N2798SJE9NPhtWwpWOOOSbv
VjU1NX3pS1/SWUNOUy+99FJ9/aUndWxvvfVW/atPcs42depUR1yVvTjhhBPU
DOnXDb1sz2uvvaZ3RJx00knpV2okB+l7iOQcWD+yfuHChWoG/YNQ+lS8oB3U
YW3RokXXX3+9Oq09+eSTJUTrNXR1dX39619XWyjpRnZWXeWR2KXnWb58+UUX
XaQeoFdeXi4f8d/+9jfvu5nJsV9etiHXB/GPf/xDikffvn3L0n6uS11tkQ3W
y3Z2ds6aNUs/6H7QoEEzZ87Ujxvt8VYSHPStlAMGDHD8ZHzeteXdnlz7q9Z8
yimnqOlDhw6VApD+IJdcpTFvXXDIXI9aVo9P3r17t1qVfhpk3vKcuU79XE0J
p2qKlCV9J5ocwEcffVT9X/9URKG1RlaoXurfTFck+erQOnny5FzHAQAAwF0k
wlpP6teLvvrVr+qbbnpSD9m+8847586du2/fPj1RZpDZ3E/mFTWmLldO8U7O
yurq6t577z2XA7hjxw6ZQT2TPCtZVj9YvlCy2rfffnvPnj1Z/ypHST3yvWi5
dlCHNfWYOwkUudKHHOotW7a4P11T/ip7oR+Znsl9N/Pysg09uT8I/csC7rZv
3y7HKtfz6ns8lISC5F1b3u3Jtb8NDQ1FPBDDS10oUenlWUhB3bx5s0uNK/1d
du7cKRlZVRB91R4AAKBQUQlrsI0jrAHoSV1kvOiii4455hhVO/h5NQAAUArC
GopDWAMyNTQ0lB12wQUX8MR+AABQCsIaitPc3PxmSq7fOwMSqK2t7Re/+MXv
f//76upqGlUAAFAiwhoAAAAAWIiwBgAAAAAWIqwBAAAAgIUIawAAAABgIcIa
AAAAAFiIsAYAAAAAFiKsAQAAAICFCGsAAAAAYCHCGqAczCHs7QLw/1FJEQkU
VAAGEdaQcOk9aXcG+lkgdFRSRAIFFYAfCGtIsvReVapAZ0pHivq/TEzvZ8Pe
XiBxqKSIBAoqAJ8Q1pBMumNVvWp7e3tra2tzc3NTU1NjivxHXspE+ZPuZ+lk
gcBQSREJFFQAviKsIYF039rV1SW9Z0tLi3Sm8q/8X6b/b4r8x/EnmZkeFggG
lRSRQEEF4DfCGpJG962dnZ1S8qX3bG1tlSmHcpA/yQwym8wsi9DDAn6jkiIS
KKgAAkBYQ9LovlV1mh0dHbk61nQym+qIdQ8b9n4AsUUlRSRQUAEEgLCGRNHj
VdS3oPIfL32rIjOrb0T1CJaw9waIISopIoGCCiAYhDUkhxpwIp3jgQMHGhsb
29vbvfetiiwiC8rishKGrwDGUUkRCRRUAIEhrCE59JCV5ubm/fv3F9q3KrKg
LM7wFcAPVFJEAgUVQGAIa0gO6Q2lnKsvQl3uAXcnC6qvQ2VVdK+AWVRSRAIF
NdLq6+uXL1++bt06Tn0RCYQ1JIQetaKen1xc36qoxy8HPHbl8ccfHzRoUFlZ
WVVVVTDvCAQs6pW0h3qaDDEoqInV0dExZcqUssNGjRpVU1MT9kYBeSQqrElL
2NzcvHPnzh2HbUdibNu2bevWrXV1devXr29sbCyle923b99bb70la5P/dHd3
Zy1sL3rz1xT3crt///4ZM2bozmXVqlU+VA5bUEmTLOBK2kM9LVbC66nBgiqL
y0pkVbJCWW3YexYoXXikIElxcsmqBuvp3LlzpXqOGzfu/vvvr6io6NWr19ix
YyXBma4igEmJCmvSGuz4sLDbKgRH+sEtW7bU1tauXbvW4wOWc5HFq6urVfcq
hSprYTPYuYwePVo6lylTpkydOjX2J4FU0iQLuJL2UE+LlfB6aragykpkVbLC
xIY1paWlJVd5M1VPq6qqJJ0NHz68vb1dTbn55pultkqCM1tBALPsD2uVlZWn
n376ddddp6csX75cpsyePbvQVaV/DZjA/iXhVPe6efPm1atXf/DBB6V0r7L4
mjVrpHuV88CGhoashS2zH+k4LPNP7uX2+OOPX7x4sfxn1qxZsT8JpJImWcCV
tId6WqyE11OzBVVWIqsirEmhylXeTNXTBQsWSN1csmSJnrJ3797+/fuPGTPG
ZPUATLM/rInPfvazUr9+/etfy//b29tPPfXUvn37vvPOO4WuJ+H9S8Lp7rWq
qspI9xpYWJONV//hJBDxFnAl7aGeFivh9dRsQZWVENaCCWvTpk2TuinNQvrE
8ePH9+nTx2WwNBC6SIQ1qdSDBw8eMmTInj175s2bJ3XtRz/6URHrSfjIjYTT
A1fkFK70gStr1qzxPgzypZSiTwK1JJwEUkmTLOBK2kM9LVbC66nZgqq+VSCs
eRwGWUo9nTBhQnl5eWdnZ/rEa665RiqstBXGqgdgWiTCmli6dKnUpk9/+tNH
HXXUpEmTintoUsLviU443b1WV1dL6i+le5XF161bJ2trbGz08oARTgK9o5Im
WcCVtId6WqyE11OzBVVWkvCwVtADRkqpp0OHDh0yZIhjoqqwK1asMFM3AB9E
Jaz1HP72o3///o5L2IAX6jdMpW2Xk7ddu3aV0r3K4rISWZXLL5mqXqMjH04C
AS3gStpDPUVRgi+oCWeqnk6cOFHqZseHn/1YUVEhEyUs+7wTQPEiFNZuvfVW
qVADBw7csWNH2NuCSJKusLOzs7W1ddu2bVLgi+tbZUFZXFYiq+IkEDAryEra
Qz1FsQIuqAlnqp5Onz5d6uamTZvSJ5511ln9+vXj+MNmUQlrr7/+enl5+Zln
nikV7fLLLw97cxBJ6mdM29raGhoaiv46VBaUxWUl6mdMc70XJ4FAEYKspD3U
UxQr4IKacKbq6cKFC6Vuqqe2Kjt37uzbt+8ZZ5zh+z4AJYhEWJOmbOTIkQMG
DNixY4d6mI96MiRQED12pbm5ub6+vqWlpdC+VRaRBWXxDm/Dq9I5OhSPY+zT
cRKI2AuykvZQT1GsgAtqwpmqp+vWrevdu/ewYcP076zdeOONUlsXLFgQyH4A
RYpEWPvmN78ptemnP/2p/H/Xrl2DBw8eNGjQtm3bwt4uRI/6OvTAgQO7d++u
q6uTku+9b5WZZRFZUBb3+I09J4FAoQKrpD3UU5QgyIKacAbrqXqi+NixY++7
776Kigo1ZMvxfEjANvaHtZUrV0rNOvfcc/UTvR5++GGZctVVV4W7YYgoKUjS
MkuZb2hoqK2tbWpq8tK3ymwysywiC8rieX+TxY+TwNmzZ0vJr6qqKvkYAFYL
ppL2UE9RmsAKasIZrKdywKdMmVJ22KhRo2pqaoLZC6Bo9oc1wKyDBw9KaZdG
vrW1VbrLd999d+vWrR25fytH/iQzyGwysywiL2XxUL6xBxIimEraQz1FaQIr
qAlnvJ7W1dUtX7587dq1XV1dfm88UDrCGhJI97BS8vfu3bt58+YNGzbU1tbu
3r27vb39gxT5j7yUifInmUFmk5lLOQl0EcAuA9ESQCXtoZ6iZMEU1ISjniLh
CGtIJt3DtrW1NTc379q1q76+fuPGjdXV1atT5D/yUibKn2QGmY2TQCBIflfS
HuopTAigoCYc9RQJR1hDkr2fojrZ1tbWpqamffv27UmR/8hLmag7VuoIEDwq
KSKBggrAJ4Q1JJz6UlR0dnZKN9qeRl7KRPVXvgIFwkIlRSRQUAH4gbAGKN3d
3e9n4DldgD2opIgECioAgwhrAAAAAGAhwhoAAAAAWIiwBgAAAAAWIqwBAAAA
gIUIawAAAABgIcIaAAAAAFiIsAYAAAAAFiKsAQAAAICFCGsAAAAAYCHCWhQd
zCHs7QLgL+o+AMvRTAFmEdYiJL3R685AkwjEFXUfgOVopgCfENaiIr0BlA+r
M6UjRf1fJqY3iWFvLwAzqPsALEczBfiHsGY/3QaqBrC9vb21tbW5ubmpqakx
Rf4jL2Wi/Ek3ibSHQNRR9wFYjmYK8BthzXK6Gezq6pKGrqWlRdo9+Vf+L9P/
N0X+4/iTzExjCEQadR+A5WimgAAQ1mymm8HOzk75jKSha21tlSmHcpA/yQwy
m8wsi9AYAhFF3QdgOZopIBiENZvpZlC1bx0dHbnawHQym2ozdWMY9n4AKAx1
H4DlaKaAYBDWrKWHFqgvrOQ/XppBRWZWX17pwQZh7w0Ar6j7ACxHMwUEhrBm
JzU2QNqxAwcONDY2tre3e28GFVlEFpTFZSWMNACigroPwHI0U0CQCGt20qML
mpub9+/fX2gzqMiCsjgjDYAIoe4DsBzNFBAkwpqdpOGST0R9Z+Vyu647WVB9
cyWroiUEIoG6D8ByNFNAkAhrFtIDDNSjbotrBhX1pFyGGSRNfX398uXL161b
571eSyF5++23pev0dcPgjrofA0XUPiBCaKaAgCUqrElT0NzcvHPnzh2HbbfS
tm3btm7dWldXt379ejl5LqUllMVlJbIqWaGsNuw9iwNdeKQgSXHK1b+86M1f
UwwW8o6OjilTppQdNmrUqJqaGvdF9u7de8UVV/Tt21ctcvLJJz/55JO5Zr7n
nnvUbEuXLjW42VpUKqlPqPtGeKykPabraRG1L6ISXk8TzmAztW/fvrfeekvW
Jv/p7u7OVd7M1tPHH3980KBBUkOrqqqMVgvAL4kKa9K57PiwsNu87KQl3LJl
S21t7dq1az0+CzcXWVxWIquSFSbthM0njiLU0tKStbCFFdbmzp0rfdC4cePu
v//+ioqKXr16jR07VopBrvkPHDjwsY99TBaRmR944IHbb7994MCB8vKpp57K
nFm65qOOOkqdiD766KMGN1uLSiX1CXXfCI+VtMd0PS209kVXwutpwpltpqqr
q9V3SlKocpU3U/V0//79M2bM0F+nrFq1yofKAZiXqLCW/jWgzf2Lagk3b968
evXqDz74oJSWUBaXlciqEnjC5hNHEZJClbWwZfYjHYdl/slUCa+qqpLzw+HD
h7e3t6spN998s3RJcg6Za5HHHntMZpgzZ46eUllZKVOmTJnimFOaiHPPPffI
I49U6/QprEWlkvqEum+Ex0raY7SeFlH7oivh9TThzDZTa9askdwnYa2hoSFX
eTNVT0ePHq16t6lTpxLWECH2h7XHH3/89NNP/8UvfpE+8ZZbbpGJGzduLGhV
UelfdEsovX/pLaGsJJknbD6xOawtWLBAOqAlS5boKXv37u3fv/+YMWNyLfL8
88/PmzcvvZfcs2ePrOTjH/+4Y84HHnhApsvMixcvJqz5hLpvRChhrYjaF10J
r6cJZ7aZksQXWFg7/vjjpf+S/8yaNYuwhgixP6xJs1BeXn7eeefpKe3t7QMG
DBg+fHiht6NGZeSGHmMgjVjpYwxUS5jAEzafOIqQl2GQL6UEENamTZsmHZB8
3OkTx48f36dPH5fbARwkjslKFi5cmD5Rys/RRx89atQo2X5fw1pUKqlPqPtG
eKykPUbrqZHaFxUJr6cJZ7aZWrNmTUHDIEupp7Lx6j+ENUSL/WFNTJ48WaqV
tA/q5bPPPisv77777kLXE5V7onVLWF1dvWfPnlJaQllcVpLMEzafpH9d7/EB
I4GFtQkTJpSXl3d2dqZPvOaaa6S+SG/osmB7e/ucOXO++c1vnn/++bKG6dOn
OxqEq6++WlZSWVkp//c1rEWlkvqEum+Ex0raY7SeFl37oijh9TThzDZT69at
k7U1NjZ6fMCIkf6UsIZoiURY+81vfiPV6sc//rF6qe4Pfeedd8LdKv+on5uU
Vkiar127dpXSEsrishJZFT86GTDVa3TkYzasDR06dMiQIY6JqldasWKFy4Jy
3qXvuR45cuSyZcvSG4Tnn39epkuCUy99DWsJR90PmMF6WnTtA6Il+GbKeH9K
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
TQmODgyXyGDIvMGXRuSCka8hbrFeNSRrJhfDa0O2NodkLThb1VVUVHTo0OHE
E0+cNWvWMccc079//3Hjxol/mzdvrt4uIrK5pEsdr1A3zgoiAtq+EKBCjGVI
QAG8lH4wpEwGjb00iimYM8DRd4JGsV41JGsmF8N1Q4yBjMz1tlqPHj1mz549
ceJEOQZyzJgx4o/a2tpy7WwXeeMsiKR3MWGMgUwLTleYrzSDIeX3deqKMPbS
KKZgvMwfsYr1qiFZM7kYrhuiKxiNM+RVVFS0b99+7NixIlkbOHBgfX39iBEj
hgwZctRRR6mfw86lP1mLIzWTa5N5X543H1rwmxopwgFCKsQ9GNIWHPMGXxpF
Fox8DfGJ9aohWTO5GM4N0RWMzFZvIlMTGVmXLl1mzJgxderUPn36HHvssSJx
E1lb69atrQ+spagltw5o1J6aiXpQ2ZmNbVtpT2+LwfOkKUITilSIbzCk9Yaa
kjf40ii+YK4vh6ShRvFivWpI1vQWY71FtBn8N8TjMNG43lZr27bt4MGDZ8+e
PWLEiJ49ew4bNmzMmDG2B9ZMbsbjG9Don5q5loTTUrLVpLEnD/LGBBSgoJgG
Q7q2//kAl0aonoxGWq5ZXuaPOMQaUEjW9BbD2mt17bLamsSwG6IrGIFryyxv
q02ZMmXmzJkDBgzo1auXSNmGDx9eX18vkjUzK1nvm0CsJ6rKziKXzbbObAY+
bnynC8cIKaJ9MKRXHMkHuDSsy5aytdd1zZKvQbtYAwrJmvZi+HTVbrjhBvWR
+Dvshni1SDTONrmioqJNmzYiRxOZWkNDQ58+fQYOHDh69OjBgwd36NDB+nPY
CTbgMd04KzimMRpGQuYZA5k2tKJIEb2DIV2zFXVFFLw00p6s5d1qIJthC7rE
GlBI1rQXw6cRs34UYUN0BSNwTXOaNGkifwh71qxZgwYN6tGjh0jTxowZI1K2
urq6qqoq68wli0Sx3jiLe7wKIyHz3PhOG3mYki4FEJTGwZA+ISOfjWQtz4+v
QatYAwrJmvZi+IyEVNOD3FZzboiuYFiuXx5WVFS0aNGiT58+06ZNO+200/r1
69e7d+/hw4ePGDGib9++LVu2tD6wFt/5FseNM9tds0SeJlCyNqSEG9+pw2FC
6mgZDOlzWy2XpWQtT74GfWINKCRrcRTDtcMWdgykbUN0BcNyfUmvUF1drX4I
e9SoUSJrGzBggPhj2LBh3bp1E3lcTMlafGMaS5+XubLtlwlFKiVufKcODSlS
xyuuqZcAL7LwCg3+YSWfpWTNtT5pvRFBrAGFZC2OYri2Y9ZkLcKG+Hm1sFxz
IpGINW/evEePHmecccb06dMHDx4s/h40aNCYMWPEv+3bt6+trbUma5G/ZItj
TGNMj5vpkvGRkLaDxRVqPnmkki4FEI7/fbEgQcR/nnwRyZro50yysE1xDVu2
+f3Fcc2Sr0GLWAMKyVocxXAdCammBLytZtuQszmFD69wVl1d3bZt23Hjxs2Y
MeOEE07o27dvnz59hg0bNnLkyIEDB4qPxAzW+QNmHPG9DMTY1MzJGfJSUWwt
uPGdRhwppJTe55qdbVfBS6PgN9Jquv8rsot865ou5GsoXkwnp0SyFlMxbO8S
iTAG0rohfl4tFK+BIhUVFbW1tV27dj355JNnzpw5atSo+vr6fv36iUxtxIgR
vXv3rqurs/4ctk9zHfeNs5LWlz6ZHQnJGMg0kgcr6VIAoXnFOC3ykZI110xN
sq3cypBkLe+4J+hzKxBwFd/JmSdZi60Y1rZU/B1hDKR1Q7a2lK6gP68Eqqqq
qnXr1oMHD546deoZZ5wxcODAHj16iH/HjBkzZMgQkcQ5H1iTVV2Cl4EkXGWa
ZPZbBa7QNJIHK+lSAFHIeKQlGNnkwydrtkzNlnb5POBm225BcexvQNkJZ4gm
+GkcAclafMWwXuPq7+C31dQaGGEVitcASJGF1dTUdOrU6YQTTpgxY8aECRP6
9OnTq1cvkaaNHj36uOOOEx81a9bMlqxppL6pK5vUzMn5fW/SJSoFrtCU4mCh
DMh3iWgMVfmQyZp/ppb3HgkZ+a1rSQl/cJAhsZ4kJGvxFcP1W69QHXW5CCOs
gpP3v1yb2aqqqlatWg0YMOCMM86YOnXq8OHDe/Toccwxx4g/+vXr1717d5Gp
2cZAFqMsb5wFkcGRkFyhKSWPV9KlAPTQlbXlQyZrVl45l+3BEMmarAWMFEld
s7QVKCjWk4RkLb5iOO8yhL2N7toY0hUsyBmzKioqmjZtetRRR40dO3b69OnD
hg3r0KFDTU1N8+bN/YJWGFm4cRaELYhnYeiI7UzI+AmQIvJ4JV0KQL9iErd8
Ecma11K2B0PkxAhhIqlrlrYCBcV6kpCsxVoMW4MWagxk3iNZi1TkjFLRSiRr
VVVVzZo1CxCpAsnsjbOCsjYSkjGQ6cXxQtmLkLXli0vWvPo51uiZ/2akiPaK
7FKirUBBsZ4kJGuxFsPWoEXbkBW31QriLfqJs1VdedfYJH4AMbWiNctAGqmw
WDDY5cMna/JViv5tvs8rsoPvRVLXLM07Cor15CRZi7UY0d7Yb9uQVXn3e6OJ
4y36VHgxMjUS0nbCJF0chMAhQzb532vLh3/BSL7Q76nlHSMhbYsHlNQ1q0pL
vgYvsZ6cJGuxFkNvslbend6A4rhxVltbW11dXVVVZXsVJBUeTXZGQmb2pwrK
Q3mfnIAP/4fOCl4arvfRQt1cU9KVrOXI1+Ah1pOTZC2+YtjeZxt5QxlvIuK7
caYG87du3bqmpkYka7YZ6HtHZqvJcr1ByRjIVJNHLelSAAnw+VntfNRkreDN
NdcgHqrYSV2zGYloKEasJyfJmvZiFP/dkW1D0dq0lIr156dt01XX2usRbPre
kWVkJGQGr9BywlFDlnkNhsxHTdbybsMjrZwZYrS3roVaRAtnLZGvwSbWk5Nk
TXsxnClG5J6qdSXlmjjE9DIQ51v0g7y1z5a1lWudl4AtKJdlssYYyLTzageA
jHDN1/JFJGu2lt9/wVyakzUafNjEenKSrGkvhm0kQLR7atYNlVPiEMeYxoBv
0Q/1y8UyhSyPOk+K7TCV3/eQth3kbEkd/5YcyALXrzELXhry9Y/qe1Gvjwre
XAtb2qSuWa++R+lLAmPFenKSrJlcjGLaNBMY9RZ920roWsetvEdCZuclKmWM
AwdI1pQtH+eloeWta3EULMh2NY6bQvmJ9eQkWTO5GKnLLOK+cRa5YPxycemV
90jIUDdqYSaaAsBKfrOaj/PSKDIKJ3XNyu26vpWFxh9SrCcnyZrJxVCtgZlD
yGJ9GYjen5+ma50I28E18zSOhnhdBgwJKIBp9F4aouW3/Wp2rri3rq3/mq4S
Btxu3uMtmrT/yJOsWRgSW0tWDJW/lGBbQcR34yzuhte20XLKGkxmO0/KptoZ
A1keOHaAK72XRkyvyC5l18haIeRrcBVrQCFZM7kYyTYCKbpx5o8xkEkp15GQ
3KgtD7QGgCu9l4az/xD5xWtJBRRbhbi+RbNsvo1ENLEGFJI1k4tR4v0t2Vv0
S2wSv1ycEOc3kOURzmw7xRmVUoYEFMA0ei8NOQxSKrIzYOtd6CphwO1ap5Cv
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
LR+G/HAAyoPXSMhivgEIclrygpEywCEAAGhBsqYQW7WzdTVL8JoRxkBCI6+R
kMWss+AabJmarQwBLyJas8RxCAAAWpCsKcRW7Ur/mhFbp5pkLUUmOSz6pvXf
VJpSOTO1Ik8q/3bGlpo5fxQ7YBtFa5Y4DgEAQAuSNYXYql2J3+HPGMj0ch67
sPwTveC5nvxUrsR1Q7Ema9aNWgc9WqcH+dKD8z9xHAIAgBaxBhSSNZTy5lpS
rzRB8YpP1orkk53ZFLmnPivxuYPmesct2lZQGhwCAIAWsQYUkjWU8h3+tg2V
+Je4UYzEk7WAiv8GQK7H9SP/e3+hRoH6bAWlwSEAAGgRa0AhWUO+VM+RJfLy
SegS8K5WKBUWlY3kH5FXqOWkkqsqfj0mbAU+OAQAAC1iDSgka8iXKo2y9asZ
A5kuAZO1CgeZhVVVVVVXVzdp0qSmpqa2traurq5Fixbi36ZNm4opURIzy+kq
aHylSWnaGVqzxHEIAABaxBpQSNaQL8lrRko52BJxcCZrXomYyMJatWrVunXr
9u3bd+rUqWuj7t2719fXH3PMMQMHDhw6dOioUaOOPvroYrIz+UKSOPaUZC0j
OAQAAC1I1hRia3zifs0IP6+Wds5n1lRS1q5duw4dOnTu3Llbt24iBevVq1e/
fv0GDx48YsSIMWPGNDQ0nNBI/DF+/PixY8eKicOGDRNZW5cuXULdVpN30OLe
U5K1jOAQAAC0IFlTiK3xifvmmm3lJGup40zWunbtOmDAgEGDBg0fPnzUqFHH
H3+8zMtObCQTNJmdiazt2GOP7d27d48ePUQ2J/6VCZ3I18S/5qRpEslaRnAI
AABakKwpxNZYxXdzjZ9XKwPOdL5169YiKZODEidOnCjvncnUTGRwxxxzjMjI
evbs2aNRfX29SNZEyjZy5Mhx48aJJE78K/4W+Zpcm9d7RUqZpkkkaxnBIQAA
aEGyphBbYxXfY2WMgSwDrsmayLlGjx49fPhweY+sT58+Iinr2UhlZ0OHDhUZ
nJhzwoQJ4t8xY8YMHjy4e/fubdu2bdGiRXV1tTlpmkSylhEcAgCAFiRrCrE1
brbesq6sKqbVojTkixZdf2dN5FwiI5MJmvhXJGv9+/cXuZjI4I4//niRnTU0
NIh/x40bJyaKeTp27NimTZvmzZs3adKkoqLCNUdLME2TSNYygkMAANCCZE0h
tsYtjnf4MwYyjWR2Joc4eqVUucbH1uSjZ/KxNZGUidRMvUtETBTpm5inQ4cO
rVu3rq2tra6u9snREk/TJJK1jOAQAAC0IFlTiK1xi+M1I7bePrfVzCRvnxXM
zpzJmnqviHydiEjZBgwY0LNnzy5durRr165Vq1Y1NTXy1679V2VCmiaRrGUE
hwAAoAXJmkJsLQHtrxmx9cm1FBLFi5ad2bRp00a+VGT48OEyRzvqqKM6dOjQ
smXLJk2aBMnRcialaVJpTlQuh8RxCAAAWsQaUEjWYKP35loc4yoRmRrcGDE3
c9OvX7+jjz66U6dObdu2lQ+jBczRcualaZIsW3lsBT44BAAALWINKCRrcNJ4
c83WOWcMZIkFfPQsSFYlEyvnR3V1dbW1tSpHS3WaJskSlsdW4INDAADQItaA
QrIGJ13v8I/vtwDgyjqyUVd2ZkupnKsNlaPlzE7TpNKcq1wRieMQAAC0iDWg
kKzBla2DHe2OGD+vFjctz52pHEoQx8g/k3K9uRZ8E4anaZIsbXlsBT44BAAA
LWINKCRrcKXlWTNbX51kTQuNz50Fyc6cW4+2oVSkaVLxFRtc0vuaaRwCAIAW
sQYUkjW4Kv41I/y8mi66njvLeQ9uDCVUMdKVpkl6X8DiXzlJ72umyaOQdCkA
AKkXa0AhWYOXIl8zwhjIyLQPbiwyO3MWL+CmU5emIVMIKAAALWINKCRr8FLk
zTXbsiRrPnRlZ9bnzmJNlEjTUAYIKAAALUjWFGJriUW+ucYYyIJ0PXoW4bmz
4jmPL2kaUoemCQCgBcmaQmwtscjv3rflINxWy8fwk2fJpkWkaUg7AgoAQAuS
NYXYWnq2PnnADnm0FK/M6B3cmHh2ZqMSedI0pFSWWycAgEYkawqxtfQivMNf
y2v/0yiOR8+S3qcCzC8h4IWAAgDQgmRNIbaWXoTXjNjmL+8xkKl+9AzIMgIK
AEALkjWF2JqIUK8ZifyYW1qU2aNnQGaVZQMFACg9kjWF2JqIUDfXyu/n1cr7
0TMgswgoAAAtSNYUYmtSgt9cs2UoaUzWMvjoGZBBBBQAgBYkawqxNSkBBzem
9+fVtD96RoIGGC5dbRQAwFgkawqxNUG2rMQ1GUnRGEgePQMyjoACANCCZE0h
tiYoyEhIWyJjVLLGo2cArAgoAAAtSNYUYmuCCr5mxLQxkDx6BsCHCc0UAKAM
kKwpxNZk+d9cs32ayG01Hj0DEBABBQCgBcmaQmxNlv/NNdtHJSsSj54BiICA
AgDQgmRNIbYmzuvmmm0MpP8PZxeDR88AaEFAAQBoQbKmEFsT5/UOf9tEjWMg
efQMQBwIKAAALUjWFGKrCWxJkEymXDO4yHj0DEDcCCgAAC1I1hRiqwmcIyGL
/3k1Hj0DUGIEFACAFiRrCrHVBM77aDZBkjUePQOQLAIKAEALkjWF2GoI/wzL
dREePQNgFAIKAEALkjWF2GoIn5tr1ttqPHoGwFgEFACAFiRrCrHVHF4p2KSv
FZmdMbgRQKwIKAAALUjWFGKrOQo+uUZ2BsBkBBQAgBYkawqx1SjFZ2c8egYg
KQQUAIAWJGsKsdUoYcc68ugZAHMQUAAAWpCsKcRWoxQcCcngRgDGIqAAALQg
WVOIraax/Rw22RmAtCCgAAC0IFlTiK0Gku/nJzsDkC4EFACAFiRrCrEVAKAF
AQUAoAXJmkJsBQBoQUABAGhBsqYQWwEAWhBQAABakKwpxFYAgBYEFACAFiRr
CrEVAKAFAQUAoAXJmkJsBQBoQUABAGhBsqYQWwEAWhBQAABakKwpxFYAgBYE
FACAFiRrCrEVAKAFAQUAoAXJmkJsBQBoQUABAGhBsqYQWwEAWhBQAABakKwp
xFYAgBYEFACAFiRrCrEVAKAFAQUAoAXJmkJsBQBoQUABAGhBsqYQWwEAWhBQ
AABakKwpxFYAgBYEFACAFiRrCrEVAKAFAQUAoAXJmkJsBQBoQUABAGhBsqYQ
WwEAWhBQAABakKwpxFYAgBYEFACAFiRrCrEVAKAFAQUAoAXJmkJsBQBoQUAB
AGhBsqYUXxXrv6apRBELkNTWXSVeJyWWtf0F4IqAEofE66RksrOnBVEPAMma
UnxVyDVMmjRJV5F82ijnR+K/sgCLFi3SVYDi5b6WdEFKRBz9TO0vAFcElDhk
J6CIajew/kvPzPMQKDGSNcWo2CoaKNntd8ZWr4/MbNOyE1slkjUAeQJKPLIT
UEjWJDPPQ6DESNYUo2KraqidsdXrIzPbtOzEVolkDUCegBKP7AQUkjXJzPMQ
KDGSNSXtsRUmIFkDkCegADqQrAF5kjULYiuKR7IGIE9AAXQgWQPyJGsWJYit
6v1Oixr5BMeYYmvArbsWONZQrncr/qta/01hS+hfyMjJWthDY1sq8o4EXLCY
DYWqZ6A8EFD8C0xA0VLCyC2zz/zFh5Ww8/uUZ33UZC1skWxLRd73gAuG3ZB1
/livHZiJZE2JNbau//ohbidbE6RCp43PGtQmfNo0r8W9GsCw8/vXia1i5Zpl
Rbnub7StyKWsxbYdiwg7FfzAWXctF+ZEClUq6345lwrYYYu1BsLuEVCWwrYD
XmsgoDjrJJfagOJTQlvTvcjtmTV1UGSP3TUE+GzRuXXrRqPtTtilfMKQ61IR
krWUhlTiKXzIgx7TyknWJP/WybZIHLE1bPMYdv6CdZLziK3R2jqvrYhFbFVk
XUmEnSp44HKOr6PDJmsFN2Fbv5w4qZHzb9dFbAULVQMRltJ48gDpJU/44tdA
QHHWSS6dASVfqEW1Nt3+yZothfTftHVVti0G3J2cR1gJWwkFA4pzqbDJWqpD
KvEUXuQRj2nlJGt5y7Umpnt9dZbz/oLLetfb9mWa7Ya4V5tm3YpXrHGNEc75
rZsOVSc5t9hq3YraQa9SBdyKqmpZWlXOsDtrW61PldoOd9hkreAJYFu/bTe9
9sW2Fa+T0FbhXks5Ky1IfQavZ6D8hGoHfNZAQHHWSS6dAcXr2Lk2wv7Jmn/9
+xwytTuS67KqbLam3mt3fEriupvOMOQTicIma66bNj+kRp5OPM0I1zNKF5K1
vEfTobg2yNbpzqW8PvJq03wuauvXdEHmz1vCYsDA59pqWWOrcz3FRHCvI+h/
FFx3yuvQSNag6bqqIMX234Tr+v331BpBnEV1HU+V99h96w76n7quJ4/rIv7H
CCgnxZ/qrpdtwKuSgOL81JCA4toOOw9cwWTNP2qE6tsHPEZep2KQM8ErYrpu
yDUSBTl86Q2pxFP4i/VYk6yp73O82hmvq15XbPVvu/KOVqXg/AWbKRvX9sQ/
eobdRL5QrIm2UwXTLtcZoiVrXv2uRY4B8/57mner8IInoWsxClaac1vB6zn4
V9xASgVvB/zXQECxcrZv+ZQElIDf/qlFCiZrETYdME90cm407JlQ8NTNe5yK
0ZK1NIZU24aIp7DyueqLR7JWUMliq8/l7Nqe+MwfKh9xNnT5Qt+mFhNbI3xq
nSfUsSs+WbPuacBvfQvuS9hvqvMeBz1IpXlFPZ9FItQzkEYElIDzZySgFFzK
Vnj/ZE1jnhgkWXPWcJClwiYRxSdrqQ6pxFP4CN5IRkCy5mV9o0mNXJfSFVtD
xcG8pX1Y7y1U2+Xa4BQsVdgmyL9ZC7VT/huSMy/65oPnoXbNq2zq2PmHmII1
E6R35LUjYZM1r7L51HOE1QJpVPx5HrwZJKD4lyp4TfpsJdpOyUXWh08YoyVr
roX3T6yCHFPndsOeCV6rXf/1S++9IlGQXbbKfVN6Q6oqGPEUeZI1i+Krwueq
t0VSp5hia7T2IaDUxdYgbMsWPHBhd825ftd1en0xWLBmfEJbwX1xRpbgh8Br
RwLWM1Bmij/Pfa5BAop1ovkBJWzGkS+UrPnUlbM2/NMN/531Kn+QpbxWVTCk
FpOslUdIJZ7CJtYDTbImuV7L8hpXrSix1bmUlthaTKOnqtpGftnluhfRvm9c
5HhHtGILEAVrxj/EO3fEGmvUAY3wPTDBBbAq/jz3ugYJKLm0BRSStXyAMOR6
jzVC1eXTH1KJp7CJ9UCTrOUdP6kpb16rT70u4cRja8D5o60wkS9Cg69NsmZq
shdkO3YakzXrRp0ZYqhv55yRxdrsyzhi2xGfAfYRkrWw9QyUpeIbUtcLioAS
odUN2zT5FztCQxeheYycrDkL75+sBYlZzsKEjXQFw5BXOaMla9Z1pjGkEk9h
o7chtSFZ8/qeU4k7trp+VeVcofq0yFzDyRk4gmwlbDPlupWAnxZcp1fVRdu1
gKxfDFrrIXhkUcV2Dfr+i+SDVdr6xiH6aimCC6AQUPIElK8F6XvbmtPSJ2v+
x9RWmLBnQsEw5FXOIpM168oND6nEU/jQ25DakKwFv6iTiq22EgZpgSd9/ZOa
PvMorg1UiWNrqJ2S/w0SWaLtmtWib/7Qqo1rfFcbDZ5CFowRrvUTKoLLeSLU
M1CugrcD/msgoFhFa3Vd6yTsVpybC9XQFSykbQb/ZM1rX1yX8k/WggQ75y6H
PRP8q9RnnaGStVSHVOIpfBS8fIpBslbwclNXfUyxtWDbbmt2gseCgHXlOnOJ
Y2uEABe5HkIla/6nh+sBVRt1bZ9dw27Aysl5hEifo2Bbs1dH0b94QFkK3g74
r4GA4rN+yfyAYi1kwKbbP1nzOgciJGvWdfrvjnWGsGdCwaNsLYbrLgeJGqkO
qbbVEk9h5X/5FIlkzfW2u/NT5ww+17XXFerVpvnECP+Y4ty0V3Pqw7VZK3Fs
zQerhJxbspbz7d5E2DUr/9bbP0z4nAA5jy/0nPtuXcQ5g/+xdl2tzyLWSgvy
FTqQasHbAf81EFCs1PyuRfJfKsGAki+0s84VFkzWgh9K/2QtH/UYhToT/MOQ
TyQKlaylN6QST+FPHuuYVk6yZmvoFn39kgpr2+jattgu+UmNT7A6P5rUSH7k
1aY5Ww8p4Kad87s2Hf51kks6tkbYKdtH679mnS65NuMBS27bSsGjY9t0kB2x
dR58TkKfM8e6IangIgGLB5SlUO2AzxoIKM46yaUwoOTdmmKfRVwzC9t2vdbj
tV2fXr1rJPLfnSCV4LPvznjqGlZCJWteO2J+SC04f/DjgrJku6D0IlnLe7/+
Xc3pFWhsSYFrRmD9yKdNc00xXEur5vcpdqjGQS3lumv+S2mMrflC78ItGIls
lWb9MrCYZC3vOJr+R8da4OBHp+DR9Nqcz4Ku80eoZ6AsyRO++DUQUJx1kkth
QJGC14N/srbI49X01jTcuSr/WzARjpH/mWDbnH808YpEYZO1fGpDKvEUPuQR
j2nlWUvW1Hcsrh9Zv3WxfbEpF/Rayja/10dqPV4NsvU7Gdd1+swfcBGvlTjD
kNcuW2cIvq2CK7TNGXynghw46+LBSxKtVKqVzn+zCxRkR6xhwjazf7GdZYtw
8oQ6oEDaEVB85s9sQFFLFVzEtf5tmYttPV7b9TkldO1OwDPBPwzl3Wq+4HlY
5I4YElKJp/BXfEDxkbVkDYibNbIAMBbXKbSLcJsJ/gipSAWSNYULFuYjsgCp
wHUK7UjWtCOkIhVI1hQuWJiPyAKkAtcptCNZ046QilQgWVO4YGE+IguQClyn
0I5kTTtCKlKBZE3hgoX5iCxAKnCdQjuSNe0IqUgFkjWFCxbmI7IAqcB1Cu1I
1rQjpCIVSNYULlgAgBYEFACAFiRrCrEVAKAFAQUAoAXJmkJsBQBoQUABAGhB
sqYQWwEAWhBQAABakKwpxFYAgBYEFACAFiRrCrEVAKAFAQUAoAXJmkJsBQBo
QUABAGhBsqYQWwEAWhBQAABakKwpxFYAgBYEFACAFiRrCrEVAKAFAQUAoAXJ
mkJsBQBoQUABAGhBsqYQWwEAWhBQAABakKwpxFYAgBYEFACAFiRrCrEVAKAF
AQUAoAXJmkJsBQBoQUABAGhBsqYQWwEAWhBQAABakKwpxFYAgBYEFACAFiRr
CrEVAKAFAQUAoAXJmkJsBQBoQUABAGhBsqYQWwEAWhBQAABakKwpxFYAgBYE
FACAFiRrCrEVAKAFAQUAoAXJmkJsBQBoQUABAGhBsqYQWwEAWhBQAABakKwp
xFYAgBYEFACAFiRrCrEVAKAFAQUAoAXJmkJsBQBoQUABAGhBsqYQWwEAWhBQ
AABakKwpxFYAgBYEFACAFiRrCrEVAKAFAQUAoAXJmkJsBQBoQUABAGhBsqYQ
WwEAWhBQAABakKwpxFYAgBYEFACAFiRrCrEVAKAFAQUAoAXJmkJsBQBoQUAB
AGhBsqYQWwEAWhBQAABakKwpxFYAgBYEFACAFiRrCrEVAKAFAQUAoAXJmkJs
BQBoQUABAGhBsqakPbauW7euqqpqyJAhSRfET0yFPHLkyMqVKxsaGjp27Ni2
bdspU6bcfPPNe/fu1bsVAAgo2YCyf//+hQsXTpo0qW2jsWPHLlmy5Isvvgi4
+Nq1a+d7+/jjj70WLNjCv/zyy2eeeeaAAQNqamr69Olz9tlni35C8bvwzjvv
nHXWWccdd1xtbW3Pnj0nT578+OOPB9xZvfbs2XPNNdeMHj26rq6ue/fuYmeX
Ll168ODB4GsQVTRv3jyxL82aNevSpctJJ50kwpno/xS5rUOHDt1+++2zZ88W
c7Zs2XL48OFXXHHF559/bp3n/PPP/1Yh4tywlTbgAdWFGo67hmEgkjUl1cna
li1bRPsgyn/ssccmXRZPMRVStJDTpk3LOYwcOXLnzp0aNwQAASUYUN56663+
/fs7m0Qx8d///neQNVx00UXOxZWNGze6LlWwhb/qqqsqKyudK7zllluK2YW7
7rqrSZMmzpnnzp175MiRIPury7vvvtupUydnSU4++eSAXx6ee+65rnXeu3fv
t99+O/K2Pvvss4aGBufMHTp0eP/999Vs4r+uW7cSKbOaP/gB1YUajruGYSZ5
3GNaOclaaWzatKlPnz6y/MYma/EV8oorrpCrHTp06PLly1etWjVjxgw5Zfjw
4V999ZXGbQFAEEkFlAMHDvTr1081iffdd9/q1asvuOACOaW+vj7I/bXx48eL
mVu0aDHIzT//+U/nIgVb+BUrVshPq6qqLr/88qeeeuruu+8WPWQ5USRc0Xbh
zTfflJlaTU3Ntdde+/zzz99///09e/aUM998882RajGKffv2qWKfeeaZf/7z
n8U+zpo1S04RVVpwDaKXLmdu167drbfeumbNmocffviEE06QE0XNq7s/obYl
guDAgQPlR5MmTRLV/sQTT0ydOlWt9ssvv5Rzik9dj7g1cX7mmWfkzMEPqC7U
cNw1DGPJgx7TyknW4nbw4MFFixZZv1Q0MFmLtZDbt2+vra0V6xw8ePCePXvk
RNFynn/++XJbInbr2hYABJRUQLnxxhvlpidPnvx/lpFdIoWR06+77jr/NRw5
cqRly5ZiznPOOSfIFoO08Lt27Wrfvr34qLKyct26dWr67t27RU9VTG/Tpo0a
CBFqFxYsWCAn/ulPf1ITd+zY0bFjRzGxbdu2QXZBC9W1vvjii63TRVdfTv/X
v/7ls/jhw4dbtWolq+KTTz5R00U4mz9/vlzD8uXLI2xLJA5y4umnn2799lJU
r5z+l7/8xX/XRKYg5xR/yCmhDqgu1HA+5hqGsWINKCRrsRJthbxmherq6oqK
Cr15kBZxF3Lx4sVy5cuWLbNOF0lcVVWVmD5r1ixd2wKAgJIKKOPGjRPbra2t
3bJli+2j448/XnzUo0cP/zVs3rxZFt46HMtLwBZ+7dq1cp4LL7zQ6yPRPY6w
CyNGjBBTRLfWNqfoY8vVfvjhhwX3QospU6bkGm+CiG62dfpLL70kS+J/K2TD
hg1ytptuusn2kagH+dGPf/zjCNsaO3asmNK5c2eRw1pnFimA1xatnnzySTnb
pEmTRL4jJ4Y6oLpQw7aPtNcwjBVrQCFZi5X6Mqe+vv71118Xl7nePEiLuAs5
b948scKmTZvaHuMVTjvtNNl/CPXoMQAUL6mA0rp1a7HdhoYG50fXXnutLNUH
H3zgs4ZHH31Uzvbqq68W3FzAFv5Xv/qVnM16j0A6cOCAfCrnu9/9boRdOPXU
U3Nuydoll1wi59y6dWvBvdDi7bfffuCBB+644w7b9DVr1siS2L5RtHnmmWdG
jx7drVu35557zvaR6PzINcyePTvstsSccsrtt9/u3KionP9ze7GGsnfv3i5d
uuQac2fraRPqgOpCDUvx1TCMRbKmpDFZ69y5s2gf5AB+Y5O1WAspn00YOHCg
8yMV1m1PDQNA3BIJKKLjJ7d79tlnOz+97bbb5KdPPfWUz0quvvrqXOM9BdHP
vPfeey+99NIFCxb89re/3bRpk3PmgC28GuW1efNm50qaNWuWa3zEOMIuiO60
nKIGsAnbtm2TQ8jkOhN06NAheY9G+Oijj6KtRN2gWbRoUdhtPf3003LKP/7x
D/HfL7/88rXXXnvkkUfefffdIG9fUQfOdm8o+AGNGzWMLCBZU1KXrIngaP3G
xsxkLe5CtmjRQqzwxBNPdH4k+g/ymK5Zs0bX5gAgiKQCikxSJkyY4PxIpF2y
VCtXrvRZg+qOyjtcSkVFxWWXXbZ//37rzAFb+N/85jdyJS+88ILto127dsmP
evXqFWEXPv30U/lyhsrKSpFUrlq1avHixfJWhSByTJ89jY+oJdFjX7hw4ZAh
Q2RJ5s+fH21VosM/ZswYuRLXR7D9t7Vs2TI5cc+ePeeff37z5s3VAe3atavz
HpPVhx9+WF1dnWu8bWoboBLqgMaBGo67hmEUkjUldcmajZnJmo3eQh46dEge
tTlz5jg//d3vfic/tT54DgAlkFRAke8PFz3Av//979bpe/fu7dy5syyVc3CX
lcp0co0vhBw/frx6uWKu0FPAXi28unMxb94820e//OUv5Udt2rSJtgsiYZQP
Ddk8/fTTPkWNlYo+0llnnRX5vcTq4btp06ZF2NZ1110np6sc3Eok4Pfcc4/X
pq+55ho522233Wb7KNQBjQM1HHcNwyjyiMe0cpK1UspgsiZOGPk8+/e+9z3n
p+qh3YceekjL5gAgoKQCivqev3///mrg4q5du2bOnKk6kKKz57X4jh075Dwi
V1qxYoV65fjq1avVT0Q98sgjXot7tfD79+/v1auXXPz6668/dOiQWq1882Su
MTGMsAui53D66aer6U2bNlV/19fXb9iwIXQN6nDDDTfkGoeSqsLMnTs3+I+S
K4sWLVLd8k8//TTCtv77v/9bTe/Ro4dIYEXc3Lp167XXXiufe2rVqpXrY33i
GKlnqUQl2z4NdUDjQA3HXcMwijziMa2cZK2UMpisHT58WDaGrk83/P73v5fH
9PHHH9eyOQAIKKmAcuTIEXWbqUmTJuLvU045RXREc41v4ZDT7733Xq/FRRfx
2WefXbp06Ysvvmj76LHHHpOLn3zyyV6L+7TwzzzzjOrTduvWbfLkyYMHD841
3nqQL1Tv2rVrhF2YMGGCnDJt2rT333//q6++2rlzp+hdy58SqKur0/g2yH37
9v3DwfWZ6N27d+/Zs+fAgQMvvfSS3M1cyHF6IrpdeOGFckHROX/llVe85vTf
lgiOcoqoZOv76vOWn0i44oornKsVSYH8VCQjrtsNfkDjQA3HXcMwCsmaQrJW
AtoLKb+YEo2Y86M777xTHlN+ag1AiSUYUHbs2DF9+vTcN4mUR3UO//jHP0Zb
c48ePcTiHTt29JrBv4VftWqVzLmUqqqqBx98UGR/tqUC7oJo2+V/J06caBsF
d9ddd8mPfvSjH0XbWafHH38858Z/qc8//1x0qmUf2/VlEU6iLzRjxgy58rZt
2wZ5LafXtq688kq5nquvvto2s+hTyYe+Tz/9dOeqRPIrF3zzzTe9Nhf8gMaK
GkbZC9LUREayVkrZTNZGjhwpVjhmzBjnRz/72c/kMf3b3/6ma3MAEETiAeXZ
Z59duHDhd77znRtvvPG11147dOiQ6OPJUhX8iV4v8j35wr59+1xnKNjCb926
ddmyZT/84Q9/8IMfPPzww5999pmY2Lt375zbe6IK7sJNN90k/+t8vbnI3bp1
65ZrHEsZbWedoiVrecsdlkcffbTgzNu3bx81apScv2fPnu+++26oQtq2tWTJ
Evlf17fKDB06NOf203sff/yxHLXiGlutQh3Q+FDDKG8ka0risbVI2UzW5Jdj
nTp1cr4j9/vf/36u8RVhe/fu1bU5AAjCwIDyk5/8RDaJe/bs8Zpn27ZtL7zw
wqpVq5y/XJn/+suxuro6r8UjtPCi5yyfBvrpT39acGbbLsj/Cu+9955XYTQ+
17Nly5bfOqjXR6xZs+bOO+988sknnQuqN1QsXbrUfxMfffSRelJJ1LbsmTsF
35ZKMH/96187Z5bD6kaPHm2brn4i4YEHHvAvsFOoAxoKNSzFV8MwFsmaYmBs
DSWbyZr6MTXbd8UHDhyQgwcGDRqka1sAEFBSAWXJkiVnnHHG1KlTbdNFAG3b
tq0o0rBhw3wW/8UvfiFLbv3ZMmn37t1yTJfPvQCvFn7r1q3z5s1raGh44okn
bB+pXuvq1avD7oK6qeH6zhPZJy9NCDhy5IgsW9++fZ2fXnXVVbKc69ev91nJ
zp07+/TpI+ecOXOm1+syQm1LpLHyv9/+9rdtc4r1y5/ruuyyy2wfqSGCXu/c
CHVAtaCGlZhqGCYjWVNI1kpAeyFFgyYfJLc9Wbxy5Up5QK+//npd2wKAgJIK
KOrtdrbh37fccoucLhIcn8VF1JazjRgxQr0KUlJvOF+8eLHX4j5vg5S91ilT
plinf/bZZ/I5uK5du6pfcAu+C6+88oqcMmHCBFvH+w9/+IP86LzzzvPZX41E
11pu0XY75uOPP66rq8s1vizF/3WF5557rlyDCGeHDx/WtS35bFR1dbVtsKh8
yWHO7R1cnTp1yjU+zOVVgFAHVBdqOB9zDcNYJGsKyVoJxFHIc845Rx67iy66
aOfOnQcOHHjwwQflC5xbtGghpmjcFgAEkVRA2bhxo/xBk759+z722GOiO/fJ
J5+o9Ed080QLqWaePn1650bbt2+XU44cOTJu3Dg588yZM0XXNN/4uo8FCxbI
ifX19dY12Pi08LNnz5ZruPTSS997772DBw/+9a9/lb9nLSxbtizCLnz11Vfq
vf2nnHLKhg0bRA9czL906VL5enPR3Q37RFJk69evl08htWvX7tFHHxU1KQrz
/PPPq0F3ItlUMztr/tVXX5V7Lfy///f/bnDz8MMPR9jW66+/Lie2adPmj3/8
4969e0WWceutt8qhdAMHDrQ9KbBt2zY5/wknnOCzv8EPqC7UcNw1DGORrCkk
ayUQRyE3b9589NFHy8MnmmL1OzuipeWl/QASkWBAufrqq3NfkwMPpA4dOtje
Mz969Gj5kUzKJPF3x44d1VLyPoLUu3dv9cNnrnxa+K1bt1pXay2YyARt73IM
vgtitar9zzVmZ7KPnWt8b979998fpQajUi88yTX+eFZNTY36r+h4Wx+sdtb8
/Pnzc4VYfzQh+Lbyje/EUNVSXV2tfjKse/fu1kMvqbur4rj47GyoA6oLNRx3
DcNM8rjHtHKStVKSr3I1/BGtmAr5n//8Z8qUKaKFVE1Z//79n376ab1bAYCA
Egwohw8fXrJkiXzoRhLdSNFT/eCDD2xzqptotgdntm/fft5551l/BbhVq1bf
+ta3/vd//9d/0/4t/Pvvvz958mRr37hHjx533323s9sZfBeEvXv3XnLJJda+
tCB2bePGjQVqKgYi7qinoqQuXbo8+OCDttmcNS9f3uLvtNNOi7At6fnnnx8w
YIC6tSTqdt68ee+8847rnHKegi/rCH5ANaKG465hGEge/ZhWTrKGUhJnyBtv
vPHiiy+KgO58OSQAlEziAeXgwYOioyi6haJVdH21Y0GiRd20adNzzz333nvv
aewc7tix4+WXXxYN9ebNm/2fGwq1C2JVYoUvvPDChg0bvH5ZoGS2bt36fKNt
27YZta3du3e/8sorom+mMUQGP6AaUcPIFJI1JfHYCgAoDwQUAIAWJGsKsRUA
oAUBBQCgBcmaQmwFAGhBQAEAaEGyphBbAQBaEFAAAFqQrCnEVgCAFgQUAIAW
JGsKsRUAoAUBBQCgBcmaQmwFAGhBQAEAaEGyphBbAQBaEFAAAFqQrCnEVgCA
FgQUAIAWJGsKsRUAoAUBBQCgBcmaQmwFAGhBQAEAaEGyphBbAQBaEFAAAFqQ
rCnEVgCAFgQUAIAWJGuKxqqQRd20aZOWtSEOn3zyiThG27ZtS7ogAMoQAQVA
4ujqlAeSNUVjVfz0pz8Vq/r+978fbfEjR46sXLmyoaGhY8eObdu2nTJlys03
37x3797ga1i/fv306dN79erVrFmz8ePHX3nllW+++WaQBRcsWNCpU6cTTzwx
WsldFb87oaxbt66qqmrIkCH+sz366KPiGInZvvzyy5hKAiCzkg0o+/fvX7hw
4aRJk9o2Gjt27JIlS7744ouAi69du3a+t48//thrwYLN78svv3zmmWcOGDCg
pqamT58+Z599tugnFL8L77zzzllnnXXcccfV1tb27Nlz8uTJjz/+eMCd1Yua
j7vmqeFQNUxXpzyQrCm6qmLDhg3iim7evPnWrVsjLH7o0KFp06blHEaOHLlz
584ga7j44oudi4vW409/+pP/gqIFkDOL1iZCyV0VvzuhbNmypXv37mL9xx57
bMGZRRor5rzpppu0FwNAxiUYUN56663+/fs7W10x8d///neQNVx00UXOxZWN
Gze6LlWw+b3qqqsqKyudK7zllluK2YW77rqrSZMmzpnnzp175MiRIPurCzUf
d81TwxFqmK5OGZDHPaaVZzBZ+/LLLwcPHizWc91110VbwxVXXCFLMnTo0OXL
l69atWrGjBlyyvDhw7/66iv/xe+55x45c+fOnZcuXbpu3bpf//rX7du3F1NE
S7J27VqvBT/99FM5W05rslbk7oSyadOmPn36yJUHSdZee+01MWfTpk3feecd
jcUAgKQCyoEDB/r166da3fvuu2/16tUXXHCBnFJfXx/kHoTs3bVo0WKQm3/+
85/ORQo2vytWrJCfitzz8ssvf+qpp+6+++7evXvLiaJTGm0X3nzzTdmbramp
ufbaa59//vn777+/Z8+ecuabb745YL0Vj5qPu+ap4Wg1TFenDGgJKF4ymKyJ
S0mspK6u7vPPP4+w+Pbt22tra8UaRIDes2ePnCgymvPPP18WT1ytPouLOeWF
LApg/YrmrbfeEtepmP69733Pa8HTTz899zVdyVqRuxPcwYMHFy1aZP0CKkiy
Jsi9njNnjpZiAICUVEC58cYb5aYnT54sgqZtVbkAed+RI0datmwp5jznnHOC
bDFI87tr1y71neG6devU9N27d4sespjepk0bNdYi1C4sWLBATrQOHdmxY0fH
jh3FxLZt2wbZBS2o+XzMNU8N56PWMF2dtNMSULxkLVkTaYi4kMVKzj333Ghr
WLx4sSzGsmXLrNNF1lNVVSWmz5o1y2fxv/3tb3Lxyy+/3PbRpEmTxPROnTq5
LnjHHXeITysqKuTiupK1IncnoH/961+ySRSqq6vlXgRM1h577DHZxm7evLn4
kgCAlFRAGTdunFiktrZ2y5Ytto+OP/548VGPHj381yAaQ1n4JUuWFNxcwOZ3
7dq1cp4LL7zQ66MVK1ZE2IURI0aIKaK3bJtTPQ7w4YcfFtwLLah5Kb6ap4al
CDVMVyftSNaU4qvif/7nf+RKnn322WhrmDdvXq7xbrXze9TTTjtNthgHDx70
WnzPnj1r1qy57bbb3nrrLdtHY8eOFYsfddRRzqXefvttef9LpHgyp9OVrBW5
OwE98cQTstrr6+tff/11uQsBk7UvvviiefPmrs0sAESWVEBp3bq1WKShocH5
0bXXXitX+MEHH/isQb6RQHj11VcLbi5g8/urX/1Kzma99SAdOHBAPuzz3e9+
N8IunHrqqa4d2ksuuUTOGe3h8QioeSm+mqeGpQg1TFcn7UjWlOKrYs6cObnG
e9OR37ojBzEOHDjQ+ZG6kEVuFXa1L730kkiLcm7f0IrGZMiQIeKj4447Tvyt
N1mLaXdsRIvauXPn22+/XQ72DpWsCd/61rdyjSPYeVcSAF0SCSh79+6V2z37
7LOdn952223y06eeespnJVdffXWu8ekb0RW89957L7300gULFvz2t791/e2A
gM3v5ZdfLjft+sV+s2bNco1PMUfYBTksRFi+fLmabdu2bXJkmlxnCVDzUnw1
Tw1LkWuYrk6qkawpRVbFkSNH2rRp43UZBiSuI7EG1zfnixZDlnDNmjUB1/bx
xx8/9NBDZ511llxt69at33jjDds88gUgTZs2/fvf/57/ujnSlazp3R0voiH9
P8vY77DJmqgiWZJXXnmlyJIAgJRUQJEduQkTJjg/El1TWaqVK1f6rGHKlCly
NnkXQKmoqLjsssv2799vnTlg8/ub3/xGruSFF16wfbRr1y75Ua9evSLswqef
firfrVdZWSk63qtWrVq8eHGXLl3kbKIf7rOnelHzcdc8NVxMDdPVSbUiA4q/
TCVrYmflGhYuXBhtDYcOHZJrcH0I9He/+538tOAb+BX11qBc41dJzrGRL774
ohyG/fOf/1xO0Zisad+dgMImayKBlSX52c9+prckADIrqYDS0NCQaxxhLr9/
U/bu3du5c2e5zjvuuMNnDao3mGv8Hn78+PHWUOL/oLFX87tu3Tq5+Lx582wf
/fKXv5QfieQ02i6ITrUc52/z9NNP+xRVO2o+7pqnhoupYbo6qSaPXUwrz1Sy
9sADD8g13HfffdHWIHZfpk6u72x88skn5fofeuihIGs7fPhwdSN1dbdr1876
7MPnn38ufzdEtB7qBzs0Jmt6dye4sMnatm3bZEm+/e1v6y0JgMxKKqAsW7ZM
Lti/f381uGvXrl0zZ85UsUD0Ib0W37Fjh5xHxI4VK1aoEVOrV6/u0KGD/OiR
Rx7xWtyr+d2/f3+vXr3k4tdff/2hQ4fUauXb+WTnOcIuiJ6D9VXG8r3HUn19
/YYNG0LVXjGo+bhrnhoupobp6qSaPHYxrTxTyZr6CuW5557zmW3fvn3/cJDP
bYn0Sj6L6jru5fe//71cf/Afr9+6davIwsQVet1118msTfyr2of58+eLKaIx
sb5QSGOypn13AgqbrIkqki/mFQvqLQmAzCpNQHESDZr6Kl60bOLvU045RY6o
VL+kee+993otLnqezz777NKlS1988UXbR/KFcsLJJ5/stbhP8/vMM8+orma3
bt0mT54sf0KuoqKiVatW4o+uXbtG2IUJEybIKdOmTXv//fe/+uqrnTt33nDD
DbJVr6ur0/hOQp/wHbbYTtR8QdRwMTVMVyfVigwo/jKVrF155ZVyDe+++67P
bCI3ybmRn8p79OJKdy545513yjmj/TaZenb1v/7rv8R/H3zwQfnf+++/3zqb
3mfW4tsdH2GTNUF+Leb6IhQAiKA0AcXVjh07pk+fbgsxolu4evVq+fcf//jH
aKXq0aOHWLxjx45eM/g3v6tWrZL9UqWqqkoEI9FDti0VcBdE+JD/nThxoujK
Wrd11113yY9+9KMfRdtZJ//wHbzYEWS85sMWL4Is1DBdnfSyNTV6ZSpZk2/q
ED766COf2fxb+5EjR4q/x4wZ41zwZz/7mZzzb3/7W4TiHTp0qKamRl2nQ4cO
lWvr+03yPrtoZOR/n3nmmQjbUuLbHR8RkjX5Wyq6UlQAKE1A8fHss88uXLjw
O9/5zo033vjaa6+JEKC+o/vLX/4SbZ3yXeLCvn37XGco2Pxu3bp12bJlP/zh
D3/wgx88/PDDn332mZjYu3fvnNurqAruwk033ST/63xruujfduvWLdc43iza
zjoVTNYCFjuCjNd82OJFkIUapquTXkUGFH+ZStbUqJWNGzf6zLZly5bfOtxz
zz3y0xkzZuQaf7paPUSmfP/73881vhRo7969PisXTcTNN9+8Z88e56fyQVr5
xZG8R1/Q73//+9AVYVHk7kQTIVmTdwAZGwBAl9IElFB+8pOfyFbXNUBI27Zt
e+GFF1atWuX8ccz819+/1dXVeS0eofndvn17VVWVWOqnP/1pwZltuyD/K7z3
3ntehVGPCxXPP3wHL7Yrar4Y1HAQdHXSi2RNKbIq1GtRixnXp359zPbt0IED
B+Qd9kGDBvksrn6c0Zlk7du3TzYaEydOzDf+fsdP3XTt2jXX+FZb+V/nCyRL
uTvRRGhR5f3Es846S3thAGRTUgFlyZIlZ5xxxtSpU23TRQBt27atWOGwYcN8
Fv/FL34ht2v9aSdp9+7d8tdYXAdLSF7N79atW+fNm9fQ0PDEE0/YPlJD9Fev
Xh12F8ScclnX90LIQV9xRBlX1LwSU81Tw0q0Gqark14ka0qRVfHSSy/JNdx5
552RVyKuevkE6Pz5863TV65cKVd+/fXX+yz+9ttvy9lGjRqlXkkkXXbZZfIj
kUD5rEHvM2tF7k40YZO1Dz/8UBbmyiuv1F4YANmUVEBZtGiRXNA2wvyWW26R
00Un0Gdx9ZMBI0aMsP147sUXXyw/Wrx4sdfiPm/Mk78OPGXKFOv0zz77TD4r
1LVrV/UrV8F34ZVXXpFTJkyYIH+5WPnDH/4gPzrvvPN89lcjal6Kr+apYSla
DdPVSbUiA4q/TCVronjym5kzzzyzmGKcc845siQXXXTRzp07Dxw48OCDD8rv
Q8T6xRQ15/Tp0zs32r59u5oon2bNNf7kx6effiqmiEXEquRb9EWjIerZZ+t6
k7VQu6NL5B/FXrt2rfbCAMimpALKxo0bZWvft2/fxx57TPQSP/nkE9VFFL1H
0QirmZ1B5MiRI+PGjZMzz5w58+OPP843vhJhwYIFcmJ9fb11DTY+ze/s2bPl
Gi699NL33nvv4MGDf/3rX+Vv/grLli2LsAtfffWVerf5KaecsmHDhsOHD4v5
ly5dKt+aLnrREd7QEg01H3fNU8PF1DBdnVQrMqD4y1Sylv/6gu3evXsxK9m8
efPRRx8tCyMuavXLGpWVlba33I8ePVp+JNscSbRL8slTqXXr1urvurq69evX
+29de7IWfHd0CZusXXDBBWL+Vq1aiQY2jvIAyKAEA8rVV1+tmn05tkHq0KGD
es+85BpExN8dO3a0Bg71d+/evdWPv7jyaX63bt1qXa21YKK3bHvfXfBdEKtV
IUb2YOVPxuQa35Rle91x3Kj5uGueGo5cw3R1Uk0e95hWnrVkbfny5XIltt+m
D+s///nPlClTrL9n3b9/f+cP1qvviOQdNOV///d/xVWpLmp5Xasbbf5OOeUU
Mf9xxx1XTPmj7Y4u8t5iwLHcR44ckY3ht771rZjKAyCDEgwohw8fXrJkiXwE
RhLhYP78+R988IFtTq8gsn379vPOO08+5iyJPp5oJEVw8d+0f/P7/vvvT548
OWfRo0ePu+++29abDbULwt69ey+55BL5umNF7JrGd7MERM3HXfPUcLQapquT
dvLQx7TyrCVr+/btkz9r+JOf/KT48oj9feONN1588UVxCTvfpljQ/v37RYhf
vXr1P/7xD587+yVT5O7EZM2aNfK4R37fLwA4JR5QDh48+M477zz//POi4XV9
/V1BotHetGnTc88999577zn7nJHt2LHj5ZdfFrFg8+bNouPqM2eoXRCrEit8
4YUXNmzY4PX29dKg5uNGDYdFVyftSNYULVUhfxqjbdu2orRaSoVYzZs3Txyv
8ePHJ10QAGWFgALAEHR10o5kTdFSFbt375aPid11111aSoX4fPDBB3LE+Jo1
a5IuC4CyQkABYAK6OmWAZE3RVRX33HNPrvGXoJMdiYGCvv3tb4sjNXv27KQL
AqDcEFAAmICuThkgWVM0VsUZZ5whVrVw4UIta0Mc3njjDXGM2rdvb/3hAwDQ
goACIHF0dcoDyZqisSq2bt3685//fMWKFVrWhji8/PLL4hi98sorSRcEQBki
oABIHF2d8kCypsRaFQCA7CCgAAC0IFlTiK0AAC0IKAAALUjWFGIrAEALAgoA
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
r169IuzCp59+Kt/MUFlZKVKeVatWLV68WN6nEEQG5LOn0VDDcddwQKKiRE60
cOHCIUOGyMLMnz8/2qpESjVmzBi5Etdn//23tWzZMjlxz549559/fvPmzdUx
7dq1q/MuntWHH35YXV2da7xzahsZFeqYovzEGlBI1mJy6NAhWdo5c+Y4P/3d
734nP7U+AmyIEmRSJGsAEmdCQJEvDxfdv7///e/W6Xv37u3cubMsoXNkl5Xq
h+caX1c4fvx49eq/XKEno72aYnXbYt68ebaPfvnLX8qP2rRpE20XRDojnxiy
efrpp32KGhk1HHcNB6S6PdJZZ50V+YXY6vm7adOmRdjWddddJ6erNNxK5OD3
3HOP16avueYaOdttt91m+yjUMUX5kYc4ppWTrMVEVJR8svh73/ue81P1dOpD
Dz1U+rL5I1kDkAUmBBT1JX///v3VsLpdu3bNnDlT9R5FT89r8R07dsh5RE9+
xYoV6n3jq1evVr8P9cgjj3gt7tUU79+/v1evXnLx66+//tChQ2q18r2Iuca0
JcIuiF7E6aefrqY3bdpU/V1fX79hw4bQNVgINRx3DQd0ww035BpHk6ryzJ07
N/jvkiuLFi2Si4vE59NPP42wrf/+/9q7t9A6qv0P4Bus+CANVmz522qUSlFE
UdSKUEWwqK3WItTLmx4tiqKo4I0iyl8FEREkNP4r4oOGWukFFcSKLaVqxEs9
lIOgKfVFa0hTc6xJ+teTYC5nkcVZ7LMvk4uzk2ny+Txlz549lzXJ/q1vZmbN
3/6Wpjc3N4cMGzpsnZ2dTz31VLyzbP78+TXv7AuHKd2tFtq54t1JHVNmn3iI
G7RwYa1BhoaG4l99zevM33777bgvO3bsmP5tyyasAXPB9BSUY8eO/aNKult5
eHg4nQQ58cQTw88rV64MvdDS2BgRcfrrr79eb+Ghf7hz587W1tY9e/ZUvLV9
+/b48WuuuabexzO+ij/88MPUoV2yZMmqVasuvPDC0th5hzia+uLFi6ewCytW
rIhTbrzxxgMHDoyMjPT09ISudRzovqmpKfexCrVw41o4+3e7Qm9vb19f38DA
wCeffBL3tDTJKyFDt+r++++PHwzxp729vd6c2esKvbI4JbRz+RMBRsuekvDo
o49WLzbErvhuiHs11zvxY8rs09CCIqw1TvwPTPhrrX5r48aNcV+K86i1RFgD
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
jmkAAAAAAABAPf8GEKZQbg==
     "], {{0, 499.5}, {583.5, 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{144, 144}],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSizeRaw->{583.5, 499.5},
   PlotRange->{{0, 583.5}, {0, 499.5}}]]], "Output",
 TaggingRules->{
  "Settings" :> {$CellContext`real11 = 1, $CellContext`real12 = 
     1, $CellContext`real13 = 
     0, $CellContext`real21 = -0.33999999999999997`, $CellContext`real22 = 
     0, $CellContext`real23 = 1, $CellContext`real31 = 0, $CellContext`real32 = 
     1, $CellContext`real33 = 1, $CellContext`state1 = 
     False, $CellContext`state2 = True}},
 CellTags->"Snapshot",
 CellID->1545175582,ExpressionUUID->"d7dd2488-d7cc-47fc-b245-fbf302b9dcaa"],

Cell[BoxData[
 PaneBox[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzs3XmUFPW9//8Z9kUGRAQhCLIElEVluaAigRhDCBoQFS8JGI2KKCFGESVe
wEEjisnVxAWJGkRciLiciBpxVBCDMjIMsijMDNsAM8PMMGGYJTD3Hs89/t6/
/nz5nLKX6pruT3dVdT8ff3Cmq6s+XVVdn3rXi1q6102/vfrWJhkZGXe3kn+u
/tW8H86Z86v7rukgL6bccfftM++YcctP75g7Y+aMORfd1FQGlss/f2qWkfH/
//1tiP/93/+tr6//FwAAAAAg8SR/SQoLjWZBMe14QG1t7b8BAAAAAIkn+UsF
sUiR7cSJE/JuXV3diYAGAAAAAEDiqQgmWUwSmfwRNqlJpjt58qTbcwoAAAAA
aUeymCSyoLymrn4kqQEAAACAi3Re09dDVldXq6sf3Z41AAAAAEhr6npIyWiS
1P7nf/5HnWhze6YAAAAAAA3qJjVJapLaamtruQASAAAAALxA0plkNElq//rX
v/7973+7PTsAAAAAgP9HMpr6CTbCGgAAAAB4B2ENAAAAADyIsAYAAAAAHkRY
AwAAAAAPIqwBAAAAgAcR1gAAAADAgwhrAAAAAOBBhDUAAAAA8CDCGgAAAAB4
EGENAAAAAOJ3ICAv4MPvUgPVCM4bJKwBAAAAQPwIawAAAADgKbsC3nNGjeyk
WcIaAAAAAMSDsAYAAAAAnqKubAxNZDXfFTqCk0siCWsAAAAAEBvCGgAAAAB4
kHpySAxhTU1o3zhhDQAAAABiQ1gDAAAAAA9ST+YPG9AiUSOrCe0bJ6wBAAAA
QGwIawAAAADgQYQ1AAAAAPAgwhoAAAAAeBBhDQAAAAA8iKdBAgAAAIAHEdYA
AAAAwIMOBMQQ1tSE9o0T1gAAAAAgNoQ1AAAAAPCsXQGhiSwsNbKTZglrAAAA
ABAPwhoAAAAAeJa6slE9OeTD71IDnVz6aEVYAwAAAID4EdYAAAAAIB0Q1gAA
AADAgwhrAAAAAOBBhDUAAAAA8CDCGgAAAAB4EGENAAAAADyIsAYAAAAAHkRY
AwAAAAAPIqwBAAAAgAclJ6xVVVVt2bKluLg4cR8BAAAAAKkkOWFNktragG3b
tiXuU5BWZItdt25ddXW12zMCAAAAJERywlpBQcHaU+LJazKf69evz8nJOXLk
SGOn3bFjx1UBy5cvj3kG4NzChQvVCq+trU1E+1dccUVGRkavXr1OnDiRiPYB
AAAAdyXtnjXJaPHktV27do0YMSIzMzPjlN69e3/88cfOW1i3bp2a8K677mrs
p0dSU1PzRsBnn31mqk3vy8vLU0t99OhRm9F++MMfqhV+7NixeFqOtJJlA5DG
W7RoUV5eHsNSAAAAAB6XzAeMxJzX8vPzO3TokBGiWbNmf//73x02koiwtmfP
HtXmlVdeaapN7/vlL3+plvqLL76wGS2GsBa25UgrOScnZ8qUKS+++GIMiwAA
AAB4X5KfBhlbXrv33nvV4fqYMWPWr1//2WefXX/99WrIFVdc4bARj4S1kydP
mvp0t3gkrAEAAACpLfmP7v/qq68am9eGDh2qDtf37t2rB0oW6NGjR79+/fQt
S3JUL0FsyJAhLVu2vOiii+bNm2e9QC5sWLOfpCFw+eXs2bNlBpo3b96/f//p
06fLJOqtBx98cNCgQarNrKysYcOGzZkzJ9IifPzxx+PHjz/77LObNWs2cODA
X/3qVza33U2dOlVaGz16tKyrSZMmnXXWWeeff77M2+HDh9UIOTk5wwKWL18u
H9qnT58uXbo4XA/ipZdeGjt27BlnnNG2bduRI0cuWrQo6NtfsWLF5MmTZYSu
XbvKzOjTl6WlpfKhHTt2VEt97rnnysuvv/467FKEhjXZzObOnSsrs3Xr1p06
dZIRVq1aZd+yzUqeNm2avLzkkkusH7ps2TJZY507d27fvr0s49NPPx00V5EW
DQAAAPAaV35nrbi4WOc1ySNRxx81apQ6XJ8/f/7x48fDjnPo0KG+ffsGXScp
SUQWTY0QGtaiTlJUVCTxKmgEiUVffvmlvCuBK+itSKd+XnjhBevddkrv3r31
BwWRNJcRuMgz6NMvvfTS+vp6GeFvf/ubGnLOOefod1VYi7pQEn8yQljn/A9/
+EPQuzLzr7zyiry1f//+0GkjnV8LCmsy55KsQyd/6qmnbFq2WckXXnhhRuCe
Nf2JsnmENnL77bc7WTQAAADAa9z6Uezc3FwV1jZu3Bh15OzsbH103aZNm8sv
v3zBggX5+fnWcX784x+rEe677z5pUxKZejlz5kw1QmhYizrJJZdcooZce+21
q1evvvXWW9XLG2+8US3Ck08+qYYMHTp01apVGzZsCDv/5513nozTvn37lStX
vvfeezp7vv3222HHV2FNLewdd9wxZ84cmVYNWbJkSYMlrInBgwfPnTv37rvv
VhdYRl0oFQC7d+++ffv2Xbt2/ehHP1Ij7N69W9795JNP1EsJVjKr77zzTs+e
PTMCyVHyVE1NjSzmD37wAzXO4sWL5WVlZWXYpQgKa6+++qp6OXXq1A8//PCx
xx5TL4cPH94QeIpI2JZtVnJQWHv//ffVaB07dly6dOmzzz7bp08fNUSdDLVf
tGjbIAAAAJBsroQ1651rTn4pW+Zt+vTpGSHkcF1dGFlfX9+6dWsZIlFFTzVi
xAgZMmDAAPUyKKxFnaS2trZ58+bq2F6dzxIyG6NHj544caJ66fB2qrKyspKS
kqqqKvXyrbfeUlMtWrQo7Pg6rP31r39VQ1577TU15Oqrr26whLUhQ4ZIzNET
Rl0oWZMSAOVlp06dZDaqq6tPnDhRE6CynsySavnTTz9Vk0uoUUP0JYux3bN2
/PjxkgB9uabMvMpKepJG3bMWFNb0aTX90ww5OTmjA958802HiwYAAAB4R/LD
WmOTmrZ9+/bf/e53I0eObNmypc5rvXr1agic5AqNckpmZqZ6DnxQWIs6yWef
faZeSkCLNEsOw5rEk6VLl/785z+XFNatWzf9Qffff3/Y8XVY00+wl+QooUaG
9O3bt8ES1iShWCd0sh6ssbdp06YSeWQ29BehfrwsrDvvvFONE/MDRvLz82fP
ni3foHxr+va0Jk2a6EniCWvjx49XoxUWFoadHyeLBgAAAHhHMsNafX39xo0b
Y0tqVpWVlcuWLVOnvYSEuI8//lgfeF94SkbgpJj8cejQoYaQsBZ1Ej3+TTfd
FGlOHIY1famhJKbu3bvrz7UPazKyvkFP4l6rVq1k4Nlnn91gCWsPP/ywdUIn
66Guri47O1tfIqjIXKmvY+zYsWrI+eefryYfMGCAam3hwoXqU2ILa2+//bYE
KzUkKytLz4CpsKY/7sCBA2Hnx8miAQAAAN6RtLAWc1KrqKi4IuDuu++2DtcJ
SJqVONC0aVP5+7rrrovUTlBYizqJrBPJETLCsGHD9MC//OUv8+fPVzeONVhy
xLhx4yJ9bl5enhrnpz/9aVlZmQxZtWqVk7Am3nvvPTVkw4YNasj48eMbIoc1
J+tB279//4oVK1RgEZJ/ZeA999yjXu7cuTPShDpS/fOf/7RpPyisTZw4Ub38
xz/+oS65VB8dNqxZW460koPC2ty5c9Vo+gGPu3btmh+wadMmh4sGAAAAeEdy
wlqc59T0w9vlwFuOtIuKiv785z+riyHPOOMMdQ+UOnRv1qzZq6++Kh+3ffv2
IUOGdOzY8dxzz1WNhD5gJOokOjQtXLhQPvS5555TLydNmqRGKC8vV+GoXbt2
a9as2bdvX+jMSzZRU02YMKGysrKgoEDdq+UkrHXr1m358uUSqXr16qWG3Hvv
vQ2Rw1rUhdqxY8c5AZMnT1Y3u+kIox6K+Oabb6qXErXka6qtrX3wwQc7Bsji
q4+488471TjTp0/fvHmzjBN2KYLC2sUXX6xefvDBB/LRTz31lHppDWthW460
koPCml4nffv2lY0tPz9/9OjRasiWLVscLppYuXLlzJkz1ST6W5YNIDs72/oo
FRlh1qxZMnLYZQcAAADil5ywFvN9asrzzz8f+uh7RY631Ti5ublZWVlqoDq2
V5544gk1QmhYizrJhg0b1OM4rJo3b56Tk6PnzXonVNiLISWqtG3b1tqCOmGX
ES2syWj6IZBKjx49SktLG2zDWtSF0j9aJ2lX30DXqVMnFalOnjxpvalNz2qf
Pn0qKir0R1jnyuGj+yXvBK1J1bg1rEVqOexKDgprktmvvvrqjBCXXXaZGsHJ
oknEUwP1c2nE7373u9DvS8KvGrh169awiw8AAADEKclhLeb71N5//33rb4pl
BM46BZ3XWL9+/ZgxY9TjEDMCt3dZz5jIu2q49aer7ScRMs+jRo1SZ/EkMMoh
+kcffWQd4fPPPx8xYoS6oUw9qjGUhD59i9agQYP0U+uzs7PDjq/CmuTEDz74
QC21RBLJPjq8rF69WrWgL8h0vh7Ky8t/8Ytf6BAqizZu3DjrOUHZEu644w59
Lk9CzZQpU6w/Ry7uvffeLl26qBGsJ6GsJCWpEaqrqxsCZ1dvvvlmNVeyONKC
OvMliTJqy2FXsjpBKfOvp62rq5sxY4ZEWjW5RN2bbrrJ+rTMqIumr1nVZ1fV
LKmBCxYs0AP1b8YF/YQEAAAAYErSLoOUQ2L97PqYlZWVffjhhzk5OSUlJZHG
kSN2yYY2I8QwSW1trYxgP//68f6RyMwfPnzYyfzosKZeHjhwINLPZ9uwX6iT
J08WFhZ+/fXXNt+7fK6MIO1EGkGm1c/hd0jW0p49eyJdORm15agrWdm/f78s
nbozLiybRZNge8MNN6jb3BT54u6555558+YdOXJED5QRZLSgaA8AAAAY5NaP
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
iRTW9MqPuj2HtnnbbbepcYLCml6ZW7duVUN0WGtsrwkb1l5//XU1UHLfnDlz
1N9Bj80BAABwIjk/ih2U11xJakKOr5o2baoOdPXAa665Rh1NbdmypaExYU3b
v3//ihUr1DGzWLZsmQy855571MudO3dGmlAfM//zn/+MNE7Y+dELct1114Wd
Ki8vT7X805/+tKysTIasWrXK/rCzsQuow9rFF1+sz2Xom4/UD0lPnDhRvfzH
P/6hxlGNqKAkW538IS+HDRumP0si8/z585csWeJkMcMKWi77eVDCfhE6rI0b
N87aflBYmzt3rhpNP5Jx165d8wNURnCyJQSR/KvmcPbs2fJHy5Yt9f2MUVuL
Oj+Rlld9qFi9erUaIv1UDZk0aZIaErV3hN1UQjU2rDnZnqOGNYlO6qU+F/zm
m2+qISqsxdBrwoa12tpadT5U1tvgwYMzLA+HAQAAaJTkhLUGS16LLamtXLly
5syZKk8p5eXlCxcuzM7Otj6XQ0aYNWuWjBypHXWkLX73u98VFhbq47fTTjtN
3dPkMKzt2LHjnIDJkyer29/0UbR6Lp8+DpSju+LiYjl+e/DBBzsG6P/Yv/PO
O9U406dP37x5c9gLLyPNj1qQZs2avfrqq/X19du3bx8yZIg0fu6558q7EkxU
yxMmTJD1U1BQoO8mcxjWoi6g9QEjN954o0QDWfPqpSSs6upqGUeOUdWQDz74
QBp56qmn1EsdlPRdRfJVFhUV6Ycz6HRgv5hhBS1X1HmI9EXIBqaiYrt27das
WbNv3z7rLOmwptdD3759N27cmJ+fP3r0aDVEba5OtoQg+oyPuqfvqquu0m9F
bS3q/ERaXt1yz549P/30UxlZr7rFixfbbI1RN5VQjQ1rTrbnqGHto48+Ui+7
dev2wgsvyPbQv39/NUSFtRh6TaTfWQt6mujjjz8edj0AAADYS1pYawg8WmTv
3r0xTCgHnOqYx/pYCUlbQcdRQo7h1UD9KP4gubm5WVlZGd8lx+T618Gcn1kb
OnSomrxly5b69pZOnTqpo7iTJ09ab+RRp5AyAo+qq6io0DNjnQ2bR/eHzo91
QVSmUJ544omGwDkp9ViD0BlwfmbNfgF1KNB3gWmPPPKIakEiWNBbajZ0UNqw
YYN6NoWVJJScnBwnixlW0HJFnQebL8J6g1ikR/dLxtf3KFlddtllagQnW0Io
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
JAJhDa47ceLEv0PwgCwgaeiDgEF0KAAGEdYAAAAAwIMIawAAAADgQYQ1AAAA
APAgwhoAAAAAeBBhDQAAAAA8iLAGAAAAAB5EWAMAAAAADyKsAQAAAIAHEdYA
AAAAwIMIa4jqZARuzxcAH2AHgnTDNg/AIMIaIrGWmBMhKEAAbLADQbphmweQ
CIQ1hGUtN7Jt1AXUBqi/ZaC1ALk9vwA8hB0I0g3bPIAEIawhiK44qtzU1NRU
VVVVVFSUl5eXBcgf8lIGylu6AFF9ADSwA0H6YZsHkFCENVjpolNfXy9lpbKy
UqqM/Ct/y/D/C5A/gt6SkSk9ANiBIN2wzQNINMIaNF106urqZJOQslJVVSVD
vo1A3pIRZDQZWSah9ADpjB0I0g3bPIAkIKxB00VHVZPa2tpIFcdKRlMVSpce
t5cDgAvYgSDdsM0DSALCGhR9IYf670H5w0nRUWRk9V+F+tIOt5cGQFKxA0G6
YZsHkByENTScupZDqsbx48fLyspqamqcFx1FJpEJZXJphOs6gLTCDgTphm0e
QNIQ1tBguZajoqLi6NGjjS06ikwok3NdB5Bu2IEg3bDNA0gawhoaAnVHNgD1
P4Q2N0fbkwnV/xNKU9QdIH2wA0G6YZsHkDSENejLOdSDhWMrOop6LjEXdSRI
UVHR2rVrt2zZ4ry3OplEvrUPP/ywoKCArwwxYAcSJIZ+Cn9hm/c7Oin8Ja3C
muwJKyoqDh48eOCU/di/f9++fXv37i0sLNy6dWtZWVk8dUcml0akKWlQmnV7
yRJCbzyyIcnmFKm8vufMPwKibrq1tbWTJ0/OOKVfv375+fnxT7Jt27YLL7ww
MzNTj/P555877E0JQif1HQ/uQBx20gZX+2lOTk5GBCtXrtSjlZSUXHHFFTJw
woQJje1NiZPm/dSD27wfudJPYyimgOvSKqzJ3uDAd7m9r/IEKRB79uwpKCjY
vHmzwycPRyKTSyPSlDSYqnUnaBOqrKwMu7GZPQicN2+elJVBgwYtXrx44sSJ
TZo0GThwoKzteCbZvn37mWeeKeNcd911Tz755C233NK8efNmzZpJgmtszzKI
Tuo7HtyBOOykDa720507d04P0bt3b2lh1apVapx33323S5cu6qhy/PjxsfWp
REjzfurBbd6PXOmnMRRTwHVpFdas/w2YhvUlElV3du/enZub+80338RTd2Ry
aUSaSuG6E7QJyUYVdmMLrSO1p4S+Zb/dbtq0SQpKz549a2pq1JBZs2ZJuZGi
E88kM2fOlCEPPfSQHrJ69WoZMm7cOEfdKTHopL7jwR2Iw07a4HY/DXLs2LEz
zzxT0ll1dbW8fOmll2Tyjh07Ll261GthLc37qQe3eT9Kfj+Nv5MCrvB+WJOC
dd555z3zzDPWgbNnz5aBO3bsaFRTaV5fItF1R/Zj8dcdaSS1607yw9rChQul
mixfvlwPKS0tbdOmzYABA+KZpH///i1atFCHhVqfPn1kwkOHDtnPUuLQSX3H
gzsQV8JaDP00yOLFi6WFRx99VL18+OGHx4wZI4sj/ZGw5ike3Ob9KPn9NP5O
CrjC+2FNdl+ZmZkjR47UQ2pqatq1a9ezZ8/G3o2b5lduRKKv6MjNzY3/ig5p
JLWv6AjahJxcBvl+QMwHgVOnTpX6ImvVOnDo0KEtW7Y8ceJEzJN06tSpffv2
QZ1IXXC1YcMG+1lKHDqp73hwB+Kwkza43U+tqqqqzjjjjM6dO+v/PykuLlYT
ejCspXk/9eA270fJ76dxdlLALd4Pa2Ls2LHSv2Q/pl6+9dZb8vK+++5rbDtp
fk90JLru5OXllZSUxFN3ZHJpJLXrjvW/AR0+YCTOg8Bhw4ZlZmbW1dVZB151
1VXSCwoLC2OeZNKkSfIyJydHj7B3714V1l544YWovSlB6KS+48EdiMNO2uB2
P7V68MEHZcwlS5aEvuXBsJbm/dSD27wfJb+fxtlJAbf4Iqw9//zz0pUee+wx
9XL69OnycufOne7OVcpQP+4pO72ysjI5Koin7sjk0og0xU98qqpRG42Tg8Cu
Xbt27NgxaOCMGTOkF6xbty7mSfQdMS+//LIcJ7z99tvq4QbiySefjGmhkY58
vQNxt59qR48elWmtp9WsPBjW0pyvt3k/MtVP4+mkgIt8Edaqqqpat2596aWX
yt91dXUdOnQYPny42zOVUqRGyIqV9bxv3z7ZEmIrOjKhTC6NSFMUHYMHgSNG
jJBSUvvdx1VNnDhRBkrIimeShx56yPrA8G7duqmnjrz//vuxLjfSkX93IO72
U+3++++PdFqtgbDmSf7d5v3IVD+Np5MCLvJFWGsIXGmcmZlZXFz8zjvvSLd6
/PHH3Z6jlKJ+37O6ulrWcMz/TygTyuTSiPp9T7eXyWUGDwKnTZsm2/yuXbus
Ay+44ILWrVtHWs/OJ9mxY8ef/vSn2bNnL126tLKy8rbbbpMJ9+7dG9NCI035
dwfibj9VKioqOnTocOaZZx47dizsCIQ1D/LvNu9HpvppzJ0UcJdfwprKaE88
8cSNN97YrFmzkpISt+copeiLOuSwoaioSA7aG1t0ZBKZUCav5XKOgNAL6YMK
isNr7EV2drZs/MuWLdNDDh482KpVq8GDB8czSUFBQX5+vvWbknnr3bt327Zt
G7+4SGv+3YG420+V+fPny4SPPPJIpBEIax7k323ej0z105g7KeAuv4Q1mb2z
zjrr0ksvPeOMMyZMmOD27KQg9f+Ex48fP3z4cGFhoWwSzouOjCyTyIQyOf9D
qBg8CNyyZUuzZs26d++ufxrm1ltvlYqzcOFCPY7Ertdff10/z8rJJNdff70M
ef755/WQ3//+9zJkxowZRtYA0opPdyDu9lNRXl6elZVlc1qtgbDmVT7d5v3I
VD910kkBD/JLWBO//e1v1Z01r7zyitvzkprkEKKurk42huLi4oKCAjmKcFJ0
ZDQZWSaRCWVynn+rGDwIbDj1f+8DBw586KGHJk6cmJmZef755+tHWkndad++
vYzwxhtvOJykIXABZPPmzZs2bXr77bc/9thjY8eOlXG+//3v2xw0Ajb8uANx
vZ/ed999MuThhx+2aZaw5ll+3Ob9yGA/jVoZAQ/yUVjLzc2VLtakSZPjx4+7
PS+p6eTJk7IZyN6vqqpK6shXX321d+/e2sg/IiNvyQgymowsk8hLmZz/IVTM
HgRKKZk8ebJ+Eki/fv3y8/OtI4wcObJdu3Z5eXnOJxGffvppz5499TjnnXfe
5s2bjSw+0pAfdyDu9lNZannZqVMn+/8hKSkpkda4pMSD/LjN+5HBfuqkMgJe
46Ow9u6770rPuummm9yekVSmS49sEqWlpbt3796+fXtBQcHhw4dramq+CZA/
5KUMlLdkBBlNRqboBAmtIDYctllYWLh27VrJU/X19UFvqUeTNWoS6zgyD19+
+SX/wYs4+W4H4pF+Cv/y3TbvR8b7qZPKCHiHL8LawYMH16xZ069fvyZNmgQ9
xgfG6dJTXV1dUVFx6NChoqKiHTt25OXl5QbIH/JSBspbMoKMRtEJlYiDQMD7
/LUDoZ8ifv7a5v2Ifoo054uwpu5Wy8zM/MMf/uD2vKSLfweo6lNVVVVeXn7k
yJGSAPlDXspAXXG8vPEASD52IEg3bPMAEsQXYW3btm3vvvsuv/2UZOp/C0Vd
XZ3UlxoLeSkD1bv83yCAUOxAkG7Y5gEkgi/CGtx14sSJf4fg/iYATrADQbph
mwdgEGENAAAAADyIsAYAAAAAHkRYAwAAAAAPIqwBAAAAgAcR1gAAAADAgwhr
AAAAAOBBhDUAAAAA8CDCGgAAAAB4EGENAAAAADyIsAYAAAAAHkRYQ1gnI3B7
vgAkCr0eQPzYkwBmEdZgZd2vngjBXhdIPfR6APFjTwIkCGENmnUfK9tDXUBt
gPpbBlr3um7PL4B40esBxI89CZA4hDU0WHazah9bU1NTVVVVUVFRXl5eFiB/
yEsZKG/pvS67XMC/6PUA4seeBEg0whr0nra+vl72pZWVlbJrlX/lbxn+fwHy
R9BbMjL7W8Cn6PUA4seeBEgCwlqa03vauro62QxkX1pVVSVDvo1A3pIRZDQZ
WSZhfwv4Dr0eQPzYkwDJQVhLc3pPq3ahtbW1kXazVjKa2i3r/a3bywHAKXo9
gPixJwGSg7CWzvTVC+r/xOQPJ3taRUZW/z+mr2dwe2kAREevBxA/9iRA0hDW
0pa6/EB2lcePHy8rK6upqXG+p1VkEplQJpdGuJgB8D56PYD4sScBkomwlrb0
BQwVFRVHjx5t7J5WkQllci5mAHyBXg8gfuxJgGQirKUt2TfKl67+W8zmjmB7
MqH6zzFpip1tohUVFa1du3bLli3Oe2sMkyCF0euTIIZOV19fv23bNlmrkUaQ
o1kZ4f3339+7d6+h2QRix54ESCbCWnrS1zCop+nGtqdV1MN4uZIhoWpraydP
npxxSr9+/fLz8+OfpFOnThkhli1blqjFgKvo9YkWQz8tLS2dMGFCq1at1CQ9
evR49dVXg8bZuHGjNKWb7du376ZNmxK2EEAUft+TvPTSS+3bt5euRD+CX6RV
WJNdQUVFxcGDBw+csj9d7du3b+/evYWFhVu3bi0rK4tnZyuTSyPSlDQozbq9
ZAmnNx7ZkGRzilRf3nPmHwFRN9158+ZJZRk0aNDixYsnTpzYpEmTgQMHypFh
PJNIfZQR+vfvP/27Pvroo8b2LIPopImTPr3eYSdtcLufHj9+/JxzzpFJZOQl
S5bMmTMnKytLXr722mt6HDmalQTXtGnTcePGPf744zNmzJBmW7RoUVBQ0Mi+
ZRL9NJ0Z3JMcOXLkyy+/lNbkjxMnTkTa3kz106NHj0qN0//v8dlnnyWgcwDm
pVVYk+Jy4Lvc3ue5Rna2e/bskXK/efNmh4/bjUQml0akKWnQg4dtxgVtQpWV
lWE3NoMHgZs2bZLDs549e9bU1Kghs2bNkkIjR4bxTCIzL0Pmz5/fmD6UcHTS
xEmfXu+wkza43U9XrlwpI8ydO1cPycnJkSGTJ0/WQ6ZMmSJDnnzyST3k2Wef
lSE333xztM6UQPTTdGZ2T5KXl6f+20c2qkjbm6l+2r9/f9W/VLcirMEvfBHW
xo4de16IBx54oLHtWP8bMM3ri9rZ7t69Ozc395tvvolnZyuTSyPSlDcP24wL
2oRkowq7sYXWkdpTQt+y324XLlwoZWX58uV6SGlpaZs2bQYMGBDPJPKtyThL
ly512n+Sgk6aOOnT6x120ga3++maNWvmz59fXFysh5SUlEgjl156qXpZV1fX
tGnTCy64wHrS4eTJk7KMNje4JQH9NJ2Z3ZN88cUXkvskrFk7QhBT/bRz587q
Ov8ZM2YQ1uAjvghrt9xyy2SLs88+W3rZggULGtsO9UXTO9tNmzbFv7OVRjx7
2GZc8sPa1KlTZYMPuupp6NChLVu2jHTdiJNJ5EBRxlm9erUcXkrlkoPGjz/+
2PX9AJ00cdKn17sS1mLop6GkG0oj2dnZ6uX27dvVqTdZqAceeGDatGmLFi36
5z//6bC1xKGfpjOzexJJfEkLazLz6g/CGvzFF2HNauvWrW3atLnwwgv1pSbO
ceWGpi9jkP1k/JcxqJ2tNw/bjAvahJxcBvl+QMwHgcOGDcvMzKyrq7MOvOqq
q6TWFBYWxjzJc889Jy/VLTPalClTnB9YJgKdNHHSp9c77KQNbvdTRWqZxLFf
//rXF110kbQgiUyX49WrV8vkt9xyi7qXTXP96mX6aTozuyf54osvGnUZZJz9
VCGswV/8FdaOHj36/e9/v0OHDrHdW8090Zre2ebl5ZWUlMSzs5XJpRHPHrYZ
Z/3veocPGImzuHTt2rVjx45BA1WtWbduXcyT/P73v1cPrPvggw+qqqrWr18/
ePBgGfJf//Vf0ftSwtBJEyd9er3DTtrgdj9VZA6tT3pctWqVLsePPPKIGj5k
yJCNGzdKpV6zZs2ZZ54pQ1588UVnXSoh6KfpzOyeZMuWLdJaWVmZwweMENaQ
hvwV1tRTkd966y23Z8T31C9ayo5O9pCHDh2KZ2crk0sj0hS/a2mlqkZtNE6K
y4gRI2Szr/3uM+UmTpwoA6XGxTyJfO7dd99tbeHw4cMtWrQYNGhQLAsMz6PX
h3K3n2rHjh0rLS195ZVXxo0bJ+NPmjRJDV+2bJkKa+Xl5Xpk9RCSa6+9NqYl
BuKV/D2JwX6qENbgLz4Ka48++qh0rnvvvdftGUkRsmOsq6urqqrat2+ffPux
7WllQplcGpGmfH3MZpzB4jJt2jTZ8nft2mUdeMEFF7Ru3TrSOo9hEuXiiy/O
zMw8evSos6WEz9Drg7jbT0NVVla2bdtW2pE13HAqlwnrOLL+27Rp873vfa8x
CwqYlOQ9CWENac4vYW3dunVNmzYdM2aMx+fTR9SPWlZXVxcXF8f8n2MyoUwu
jagftXR7mTzEYHHJzs4O+q3qgwcPtmrVavDgwfFM8thjj0nBOnbsmHXC/v37
Z2VluXvbGhKHXh/E3X66YMGCWbNmBa3D8ePHSzu5ubny9549e+Tv8847zzrC
kSNHMjMzhw8fHsPyAkYkeU9CWEOa80VYk5LXtWvXbt26Sdd2e15Sh76SoaKi
oqioqLKysrF7WplEJpTJa/1/NZRxoRfSBxUU59fYb9mypVmzZt27d9cP1bn1
1lul0CxcuFCPk5+f//rrr+uQ5WQSdWz5xz/+0TrPMkSOFY2sAXgQvT6Iu/30
tttuC7r7bN++fR07djz99NN1Rb7ssstknDfeeEOPc88998iQu+++28gaAGKQ
5D2JwX6qENbgL74Ia5dffrl0qyuvvPIBi3feecft+fI99Z9jx48fP3z4cGFh
oWwGzve0MrJMIhPK5CnwH+zGmS0u6oHeAwcOfOihhyZOnJiZmXn++efr587J
wWH79u2DjujsJxFSKDt06CDj3HDDDc8888zs2bNbt27dqlWrDz74wPjagHfQ
663c7aeS3bKysmS0qVOnLlmy5K677jrrrLOC8t3mzZubNGnSokWLmTNnPvHE
E+rG7W7duu3evTsRKwRwKJl7EsIa0pwvwlrXrl0zQtx0001uz1cqOHHihBxL
yAZQXFxcUFBQXl7uZE8ro8nIMolMKJNz1Vwos8VFVrI6SFP69esnh3nWEUaO
HNmuXbu8vDznk4idO3eqJ0AqvXv3Xrt2rYmlh6fR6zXX+6n0wVGjRkkWU5P0
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
2ciRIydNmiTC2pQpUxLPrHWh9IQS1gIasrIYbd9rujlwjy3bGs2GNamR29m4
NjKN+dZvTq7BObkvVTRzwhrqZCguMqxNnjx55syZMqzFr07pQtHRFtnbb/xC
CZXFBHQxKgpjy7aJ2zvdyhy913ylItdGJjKHNU6uwTm5I1U0c8IaGhFPbYMG
DRo1apSIaSKsTZo0adiwYVpYa1kcSKNVkKabk6rdVwm2O4pC8vwjhlzK3LaW
qOTRe/1XKnJtZFTmoMqcXINbckeqaOaENTQl+tWWyGUDBw7cfffdlyxZsnTp
0okTJ+6yyy477LDDwn7d+coroGsLtWOAppvjWLujKKRW7rpdlhlVcnHS/TZy
bWTNN9D5KTOscXINbsm9qKKZE9bQlHgJa7pFzQvlhE7rrxJs99JBYuO2jPM7
1xy2jdvZambzc6WcXINDzjuNKMIamhJKMKlTKCd02r3tWh9FIbFx28ftxZDO
T7VwbWRttGKaOA0n1+CQYU8rj7CGpoQSTOqkFY6mm5Oq3duu3VEUiuefMhTj
MK9VdKqlkaH+u3ZtpLZoaZNxcg2umPe0kghraEqLy0QxAZ3Q0drZsm8j2x1F
oXj+KUMZrgaHrK6FDPVfKcvtyMk1uFJpj0FYQyMCCia1CWV0kdZvu3YvHRS2
b4tlRhJLNRy61z/wfheujdQWxzAlJ9fgROaeVgZhDY1o/QF/AYQ1T7R76aCw
fVssM4xYIqwFSlscw5SENTiRuaeVQVhDIxgKMi6UW6VCaWcxrY+iUNi+beX/
bWvF2ux87JEW38imLYVhSq6EhBOZe1oZhDU0IpSzSHWyGWrYB+0Oa+1eOkRR
UNrK7ZiQNbfczxvZ3L5pDXJtRG1iDkhQQKXdBWENjWAMh7gGjxBy0drpbags
hj2zOzz/oKEwV6OLNLiH1D8SiH1kC6JXzLUR48vesrqGGlTaXRDW0IhKi06I
Arr6LpR2FtPupUMUm7itHIa1ZmuTn7/L5sOayaS1Nu/0ni8dPGS5pxVDWEMj
tI6Rb7FCufqu3devBhSZUR6buK3iH+TCml6U/18jv8sW+rWR0Uba1Cnuo0dJ
le42hDXUj14xLtCw5m07i2n30kFD59NiTk6uedUDNPIraYFeG6mldcsvFX3e
+vCf3G0qmjlhDfVr99mZYrQy4e2pxnbf0tXupYOGgtJuJfOatx//Rob6D+tE
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
YU2ptLauWHUTd5zWBanSqTHMQb2FoU9Le3laB5h3evM60VasnLNcUYnLW+xd
5Kuizda2RYGFst9w0UXry7Mj5WpVdLnir7I8YKt0DeRdIqCV8vYDaXOgoMTX
SV+wBcXQQq3rXp50z5raKPKIPbEEGN4x/u7RNy22OHlfZShDia8qENYCLanU
UxjIjV7RzAlrkrl30l5SRW3N2z3mnT5znfSl1NZifV3au4iXaKsoOpMCC5W5
4fpiX0fnDWuZb6HNXz64sF/8/4kv0RqWaw0UeJXDnQcIl9zhy8+BghJfJ31h
FpReVo8a7brNYU2LkOa3js5Ke0fLxelLKSt5V0JmQYm/Km9YC7qkUk+RRm7x
imZOWOtFPmvi8bSvzvrSv+CKnvXWvkzTToin9WnRd0mrNYk1Ij599K1zrZO+
pNoafRe1gGmtsnwXtapla1U78y6sNlvDKtU2d96wlrkDaPPXFjNtWbR3SdsJ
tRWe9qr4SrNZn/brGWifXP2AYQ4UlPg66QuzoKRtu8RO2BzWzOvfsMnU4kiJ
r1Vt07r6tMUxtCRxMeNlyFCJ8oa1xLf2v6QWfpx62hGJe5QrhLVeStehJHbI
0cfjr0p7Kq1PM3yoo1/T2Uzfi5RFy8KX2GtFa2t8PmUqeNoWNG+FxIVK2zRS
tGgmzsqm2ea3SJy/eUmjFSTe1MTrqXopix9dQPOum7jzJL7EvI2ANim/qyd+
bC0/lRSU+LOeFJTEfji+4TLDmrlq5Dq2t9xGabuizZ6QVjET3yixEtlsvnBL
KvUUZpVua8Ka+j4nrZ9J+9S7qq3mvqsX61Uyp8/spjSJ/Ym5euZ9i15WrSm2
UJmxK3GCYmEt7bhreeyCefOS9pJWeOZOmNiMzJUWfy/79Wz/FTcQKPt+wDwH
CkpUvH/rBVJQLL/9Uy/JDGsF3toyJ8bF3zTvnpC56/ZSdsViYS3Ekqq9EfUU
UYZPfXmEtUy11VbDxzmxPzFMnyuPxDu6Xta3qWVqa4Fno9Pk2nblw1p0SS2/
9c1clrzfVPdSNrrNSkureoaXFFjPQIgoKJbTd6SgZL5Ka7w5rDnMiTZhLb6G
bV6VN0SUD2tBl1TqKQzsO8kCCGtpVvRb2C/xVa5qa6462Iv0DyvS5eq7Ejuc
zFbl7YLM3VquhTK/kZx4+btvPM+1aGltU9vOXGIy14zN0VHaguQNa2ltM6zn
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
AE5QUAAAThDWFGorAMAJCgoAwAnCmkJtBQA4QUEBADhBWFOorQAAJygoAAAn
CGsKtRUA4AQFBQDgBGFNobYCAJygoAAAnCCsKdRWAIATFBQAgBOENYXaCgBw
goICAHCCsKZQWwEATlBQAABOENYUaisAwAkKCgDACcKaQm0FADhBQQEAOEFY
U6itAAAnKCgAACcIa0rNtfXtt9+++OKLt91220mTJk2YMGH33Xc/+eSTX3rp
pWJze+CBB2bMmDF58uSrr746+vjhhx++X5brr7++8WVZsWLFXnvtteaaa44Y
MWLrrbc+9thj77zzTpsXHnHEEWKp3//+9xdtewK3mwZAB/kT1m688cZBgwZt
vPHGNhPn6lHL1Jd33nln4cKFAwcO/MUvfpE4wZtvvnnmmWduv/32U6ZMGT16
9Oabb/7pT3/62WefNTcpc7Z1yrXmlfvuu2/ZsmVz584dPnz4rFmzFi1adOWV
V6ZN/Je//OXII49csGDByJEjZ86cudtuuyWucPHg0nSPP/54sdnmbW0Vytfr
Rx555GMf+9j6668vFkEsyCc+8YkbbrghbWL7NROVdoQmvfzyy8uXLxcfumnT
polDoHnz5omNcscddyTOSnwuzjjjjA9+8IOrr766+FzMnz//i1/84gsvvBCf
8uabb16yZIlYIjFPMecddthBrBlxIF2yAWgEYU2ps7aKj9uee+7ZF7PZZps9
99xzeef2xhtvbLrppnIOP/nJT6JPTZw4Mf4umrPOOqvZZfnMZz4Tf/mwYcMy
q60oCnJi0c2WWYQot5sGQDd5EtYeffRRcVAnWrLBBhtkTpy3Ry1TX44//ng5
wU9/+tP4s88//7zIOPG5iaPxm266ydAk82zrlGvNK+eee+6QIUPiC77vvvuK
VKJN/MMf/lAUyvjEoqRqUx511FGGbXTXXXcVm22u1lahfL3+/e9/LzKa9nIR
9sVKiE9sv2aiDEdowu233z5lypT4PEUbRArTJn766adFLI1PLD6Jf//736NT
HnroofHJhLXWWuvee+8t3AA0RW6UimZOWEsjPgLy7TbZZJMf/ehHV1xxxQc+
8AH5yPz58995551cc/vyl7+sPl9aV7Bw4cKNkqy33nrqJddcc02Dy3L++efL
iadOnXrOOefceOON3/nOd1ZbbTXZVxi+s3ryySflZH1Ow5rbTQOgm+osKGnu
ueeeOXPmyJZkRoYCPWqx+iIOsL/61a+qCRJT1Qc/+EH57Oabby4muPbaaw8/
/PABAwbISpF4HG4z29rkWvPKnXfeKbOPSATHHXfc7373O5EOZs2aJedz8skn
RycWCygff8973nP00Uf/5je/Of3008eNGycf/PGPfxydeOuttxYPjho1KnF7
/eMf/ygw21ytrUjJev3EE0/IRZPB5KqrrjrllFMmTJgg5/DLX/4yOnGuFR5l
OEJ78cUXZ8+eLZ8SLRftF7v617/+dbGl5IOXXnqpmlgszoYbbigfFx+9//mf
/xEt3GOPPeQjYjuKVCinPOuss1RTv/Wtb1133XWXXXbZdtttp6ZU59dyNQAN
kpujopkT1hI988wz8pucefPmrVy5Uj4oPoaiGMk2iE7Pfm5//OMfRT+T1hWk
+cIXviCnF/8psgyrlFwWMaXs28eOHfvII4+ox+++++6hQ4eKxw8++OC0F+66
665qqV2FNbebBkBn1VZQEr3++uvLly+PnvUwRwa3Paqhvtx1113vfe97+yLi
qerpp5+WT2266abq+FMQx5Dy8e9+97sFZluPvGs+6ogjjpAviV5V8uyzz06a
NKmv/6xidGIRT8SDgwYNEscA6sHbbrtNziF6Ievbb789evRo8eAhhxyS2Qb7
2eZqbRXK1+vPf/7zcsoLL7xQPSiC9vjx48WDIuFGJ7ZfM1HmI7RTTz1VPn7M
McdEH//rX/8qT+GtscYa6kERzeTE4qMazaGLFi2Sj//+978Xf7711ltjxowR
f4ql+Ne//qUmEy9ZunSpnFIE2wINQIMqLSiEtUSnn366fK/zzjsv+rjoeUQ/
IB7fe++9LWf14osvyrAjXxjvChL96le/khMvXLhQfK6LLMMqJZfl9ttvly+P
13TRNvH45MmTE18oirV4Vn7R2ucurDncNAC6rLaCEvfPf/5zo402kg0YPHiw
7CfNkcFhj2qoL9/85jdFe+Sz8uu4vqRU9Zvf/EY+dfbZZ0cff/755+XjWuiw
nG0NCqz5KHmx3GqrraY9ru4UePjhh+Uj1157rXzkxBNP1CaWl8mJFKNy7oMP
PignzrzlIdds7VtbkZL1WmRYeV5s+vTp2kWb6qpRkVnkI7nWjJJ5hCbPi4ko
/eqrr2qv/ehHPypf8u9//1s+suWWW/b1n1nW7ty88cYb5ZQnnXSS+POOO+6I
/hn16KOPyqeOPPLIAg1AgyotKIS1REuWLJE1JX5P6C677CI7+ddff91mVgcd
dJCYXnQ4l156aWJXEPfSSy9NmzZN9i0PPfRQwWVYpeSyrFy58rrrrjv11FPv
vvtu7SnZL02ZMiX+qnvvvVd+nyYinsx0rsKaw00DoMtqKyhx6hv42bNn33rr
rbKTNEQGhz2qub6o29A++9nPXn/99Wmp6s9//rN86r//+7+jj4tuWT7+8Y9/
vMBsa5B3zWt23nnnxPgjlkvO9oknnpCPyFI1fvz4+Net//nPf0SqjZ55+dnP
fiZfLlasuQG5Zmvf2oqUrNdit5ftPPbYY7WnxHGmfOr444+PvpflmlEyj9DE
bMVnbaeddoq/Vl08KY+OVGvPOOOM+MRiVf/fqisbr7nmmi222GLGjBm//e1v
tcnENHImH/zgB/M2AM0irCm11Vb5TcuGG24Yf+q4446TzdDuAE304x//WE58
2WWX/eEPf7AMa+oClfi3LgW4WhaNWBz5Temhhx6qPfXaa6/J0jx37lzxf7dh
raLFAdA1tRWUOBEZpk6dKg7qXnnlld6qqxTSIoPbHtVcXzbZZJPFixfLkX5V
zYqnKnE8LO+eW2+99eQiSOqWtF//+tcFZluDXGs+Tp7f7ItcpSY89dRTcm3M
nz9fPbjZZptFD7mffPLJK6+88qabbhLBIT7br3zlK339J3fEIf33v//9z33u
c0ccccT3vve9e+65R5sy12ztW1uRkvX6wgsvlNOIMKs99eabb8qnRJaRj+Ra
M1KxIzRFnrATUVTmzauvvlrO4W9/+1uvf9CSW265Rczt/vvvtx/LRZ2DW758
ed4GoFmENaW22irv3Ey8wll08rIZ1113nXkmjz/+uLys+kMf+lAvUqHMXcHD
Dz8sQ9Ds2bOdfACdLIsiFurSSy9dtmyZnO24ceNuu+02bRp5Q7HoQOT1CW7D
mtvFAdBZDYY1kRT+LzJAtzkyOOxRM+vL888/r/5vTlWnnnqqvNNH5LVzzjlH
HO4ecMABcnox82iCyzXbquVa83EiAsixWcSyizx1xRVXnH766fJMpSDilZpS
Dt/3pS996c9//vM666zTF/HRj35UG7h+9913l0+p0TCkAQMGHH300dHr33LN
1r61FSlZr0877TQ5jbzVSyNv+9pyyy3ln7nWTK/oEZpyzTXXyOnVfXPnnXee
fGTlypWHH374yJEjVQOmT58eP4kWJzLdggUL5Esy7+aLNwDNqrSgENbi1Dc2
++yzT/xZ9VWPedR68aHbYYcd5IdU1inLrkB9MylKYckF6Tlalig1kFRf/9eA
8ZPvN910k7wL4JRTTpGPOAxrzhcHQGfVU1BsGCKD2x41V33JTFXqcDFql112
MZzLsJltnfKGtV5/3JO3AGiiv8/1xhtvyK0mcsqIESPiE4sM9fLLL6vpVYDq
6x8QUhx+R0uturEr72wtW1uR8vX6a1/7mpwm8TI/uYrmzZvXy79mCh+hSf/4
xz/kj2KIo6Bbb71Va62K3lGieeeff755tupewj333LNAA9Asue0qmjlhLU4s
o/zUJ45zqG7NNg+Xqr4RUiPb23QFonNTdxOItV1yQXqOlkV56623BvdT/c97
3vOea6+9Vk3wwgsvyJ+t2XbbbdV5f4dhze3iAOiyegqKjbTI4LZHzVtfzKnq
oosuEv2/OhBVgysOHDjwyCOPNFz3FXRYE+stOianGiylr/98ovqRYjVMhPTJ
T37yn//8pzhAEssu3ks++PnPf15O/Oyzz8pHRG294IIL1CAYV111lfqZPHnY
kGu29q2tSPl6feyxx8ppEgdCkWM/zpkzp5d/zRQ7QpPEe6koHb2ZTg33Icyc
OVPEYbEGnnjiieOOO06egx4zZozhJsHly5fL144fP/7JJ58s0AA0S26RimZO
WIsTkUR+sg488MD4s5dffrlsxpVXXpk2h7/97W+yVzzqqKPUgzZdgeic5TTi
U19yKaTyy6IRXY2owk899dTXvvY1mdrEv+q6ejnq7OjRo6Ndq8Ow5nxxAHRW
PQXFRlpkcNuj5q0vhlT129/+Vh6HiwNLkS/EgYFIgqL0z58/X77E8BvElYa1
l19++W8xhrui8oa1bbbZRjZ+zz33/Pvf//7OO+8899xzJ5xwgsyqY8eOlVtK
je6oZYRefwBX50RefPFF8cirr7567bXXnnPOOfEfE//5z38uZ7Ljjjvmna19
awszr+3y9VrlF7Hg8WfltY4bbbRRL+eaKXyEJvzlL3+ZOnWqnHLJkiVit1dP
icWUj4tQFh2QXzjxxBPlU4m/YS1W1Kc+9Sk5gfiw/+lPfyrWADSr0oJCWEsk
v35ctGhR/Kmzzz5bNiPtimKxEubOnSsmWHfddaPX7dt0BaJHldPIG7GdKLMs
ZurnPw466CDx5yWXXCL//OEPfxidzO09a9UtDoBOqa2gZEqMDM571Lz1xZCq
5C84CzfeeGP0cXH0vuaaa/b1f4n32GOP5Z1teeLIvy9J2vS5wpqoLHJu22+/
vTa04Lnnniuf+sQnPtHrP6kk/xSxSLsusRc5dL/lllsy33TmzJliykmTJuWd
rX1rC8tc2yXr9fnnny+nid8aL8hhUuQdW/ZrpswRmsjU8ufw+voTqBaU1HnA
r3zlK9oLxZvK2/d23XVX7SnRcvUr4RMmTDAPB2puAJpl7mpKIqwlksMKLViw
IP7UN77xDdmM22+/PfG16uS+6DTWiVAXpYteV/wZ774ef/xx+TVU4vs2sixm
oqOQv8kox3qS1yQI67yb/Apr0KBB8s9rrrnGz8UB0Cm1FZRMiZHBbY9aoL6k
paq3335btmHbbbeNv0odYP/4xz/ONVsnKg1rJ510kpybFlF7/T9nPGPGjL7+
e6PkI+LAW/wpomt8Puog4YILLsh8Uzn8viAziP1sc7W2mMy1XbJeq/EVo3db
qEWQv4y2xx57yEcs10zhIzSxY6vfYvt//+//xX8I4KyzzpLPXnzxxfE2yI+z
iN7RB5955pnNN99cvmrWrFn3339/2qqwaQCaZe5qSiKsJZJfdEyePDl+4f1H
PvKRvv7L8uODC0m/+MUvErsvjegNtBeqE1UXXXSRJ8vS6786+rLLLjv55JNX
rlwZf1ZeOC2/9Js3b57Ngl9++eUNLg4ASLUVlEyJkcFtj1qgvqSlKnEkIB+X
w+ilveq0007LNVsnRMH6XoxhYIdcYe3Tn/60bPkDDzyQNqtRo0bJP+VPb48f
Pz5+UK0OEmTQfuqpp2644YYrrrgi/mNkvVV5Z+zYsXlnm6u1xWSu7ZL1+i9/
+YtchHPOOUd76pFHHpFPqZu2LNdMsSM0dW5OxCXtB74VFV2/853vxJ+VH+ct
tthCPfLYY4/J09CC2MpPP/102nqwbACaJTdQRTMnrCVSvwCiDRj72muvybFe
5WXSie6///5jkuy3335ynnvssYf4M17I1Klw872ldS6LcOaZZ8qXxw8JXn75
Zfk9z/bbb9/r/0mXxAWfPn16X/+IxPLPkr/eWHJxAECqraBkSowMbnvUAvXF
kKrk0CKJl2JefPHF8lVp9yKFO8CIOnWSeKWcPPBWBUj9kMF9992nTSlvxRow
YIAcNvPb3/62nDL6a2jSiy++KC+fUyen7Gebq7UVKVmvV65cKQfAjw/+r758
ULuZ5ZopcIQmwpd8avTo0YYfGhChWE4W/xLjlVdekWNUHn300fKR5557bs6c
OXL6xYsXaz91obFsAJpFWFNqq61PPPGEvAN36dKl0cdVGTr++OPzzjPziujJ
kyf39V+0XLDRKUouy7333isn23zzzbULpEW3I58SHbJhDm7vWati0wDoIM/D
mnnivD1qgfpiSFU77bSTfOqqq66KPv7666+rE4LaGAs2s61frjX/pz/9SbZ8
m2220Y6u1c8rH3bYYfKRO++8Uz6yyy67REvnCy+8IKOuyiniMExOuemmm6qh
ICU1lvvpp5+ed7a5WluR8vX6yCOP7OvPWdEIJg41N9xww77+oTzUaCr2ayZR
2hHagw8+KG/3EKk58da5KHlb6ODBg7VLT0844QQ5cxUtDz30UPmIWDNvvfWW
YZ65GoAGVVpQCGtpDjnkEPl2Rx111HPPPffaa69dcskl8kJ98ZERj6gp99pr
r6n9nnnmGcMMzWHtqaeeks9ut912vi3LjjvuKF++ZMkS+a2seImYlRwNbPr0
6eZRoN2GtVyLAwBp6iwoZk7C2ooVK2Tvfcwxx2hPFasvhlR18803yzvgRMf7
/e9//9lnnxUPisNp+dtVwkc+8pECs62fYc3Hq+E777yjRsIXcfWOO+4Qh9mv
vvrqOeecI4d9GDFiRPS2o912201OvGzZMjlmsvhX3Yqoxo15++23t9pqK/ng
4sWLH3/88V7/eP5HHHGEfHD27NmizOWdbd7WVqTk4cdDDz0k9zTx+B//+Eex
rh555BF1TPKlL30p+l6WayZR2hGaWoci652QQg3If+utt8qJx48fL3bvl156
ScTkb33rW/IaJBEw5TWff/7zn+XhU1//3WeJ87zssssKNAANqrSgENbSPPjg
g2ussYZ8R/GxUj9QIvoN7eqOLbbYQj4l+9g05rCmvlsT/bPjJSm9LKLnlDcj
S+PGjVP/Hzt2rDhCML+787BmvzgAkKbOgmLmJKypn6j+2Mc+pj1VrL6YU5Ua
IEKSV+tJ8+bNM9yIFEpYS6yG4qhYVZ++/rwjo0Rf/81EWhwQQUOeAJKGDx+u
/r98+fLolOItJk2aFC2s6v9rrbWW+nGcvLPN1dqKlD+U+vKXv6wWQZ5jkkTC
FdkzOqX9molLPEJTVzaa3XzzzeolJ554olrJgwcPVkOCrL766mq55E9ymMkf
ayjQADRFbouKZk5YM/j3v/+9++67R38Der311rv66qu1ydR3YuZ7AdQ1CT//
+c/jz6pRduM30jpRclmef/75T37yk6oL6uvv6tWJNjN5wczcuXPrXxwASFNz
QTGQZwosbyBK61Gvv/56uUQf//jHtaeK1RdxBChflfYl2E033RQ9Nu7rv6dG
HKy+/vrrZWZbJ8OaT6uGIod+9rOfjaaGvv7gcNddd8VnIg6ZDj300DFjxsjJ
RFqZP3/+KaecEp/ymWeeOeyww9SxfV//NX777befKL5lZpurtRUpfyh1ySWX
yOt4JTGrI444ouSa0SQeoanhKM20g17xcVt//fXVubMJEyaIg6XoZZxy0Biz
XXbZpXAD0Ai5LSqaOWEtk1io2267TVSlhx56KD6iUVhKLsurr77617/+9aqr
rvrb3/4WvSqjKW3aNABq1khBaZ8XXnhBFH3RDz/yyCPdGU78rbfeevDBB2+4
4YY77rgj/sNeGlGeHnjggRtvvDHzKn1R1O65557f/va3YvrMlWk/21ytrUj5
ev3YY4+JRbj99tvlCCoG9mumOi+++KIIgOIYm4OTjiCsKdRWAIATFBQAgBOE
NYXaCgBwgoICAHCCsKZQWwEATlBQAABOENYUaisAwAkKCgDACcKaQm0FADhB
QQEAOEFYU6itAAAnKCgAACcIawq1FQDgBAUFAOAEYU2htgIAnKCgAACcIKwp
1FYAgBMUFACAE4Q1hdoKAHCCggIAcIKwplBbAQBOUFAAAE4Q1hRqKwDACQoK
AMAJwppCbQUAOEFBAQA4QVhTHK4K2dR77rnHydzgv3/9619iiz/11FNNNwSA
FygoANqKY56aEdYUh6vimGOOEbP6yEc+Ypjm7bffvvjii7fddttJkyZNmDBh
9913P/nkk1966SX7d3nkkUc+9rGPrb/++sOHD587d+4nPvGJG264IXHKV199
9etf//rChQsn9Ntyyy3POuusV155JddCGRRelt/97nf7ZRHLmPbyG2+8cdCg
QRtvvLGrBZEKLM7PfvYzscVFS9544w23jQEQopoLSqLDDz88s4O9/vrrM+dj
X2s0RxxxxOTJk9///vcnPnvfffctW7ZMzFDMdtasWYsWLbryyisz52nf7b/z
zjui6g0cOPAXv/iFTWsLK1xhS1bAXtYavvnmm5csWSLW8IgRI6ZNm7bDDjuI
WiYOpUouQrEN17iVK1d+9atf3WKLLcaOHbv66qsfcMAB55xzzuuvv15gVpm7
1mGHHbY0xRlnnBGdUnwA06YUHn/88ejENgcn5XcqGxzz1IywprhaFXfccYco
JSNHjnziiSfSpnnzzTf33HPPvpjNNtvsueees3mX3//+96Kf1F4uuo4f/vCH
2pR33333euutF38v8aAowWWWtPyyiK4y/kKN6JESX/voo4+K/lZMsMEGG5Rf
ivKLs/XWW4vJTjrpJIeNARCoOgtKmokTJ2Z2sOKY3DwT+1qjEQfwcmKR8uLP
nnvuuUOGDIm3Z9999xVHpGnzzNXtH3/88XKeP/3pTzMnLqxMhS1TAXtZa/jQ
Qw9NnOFaa6117733Fl6EYhuucffff79ItfFm77jjjrm+JJfMu9a///1vwwZd
vHhxdOKjjjrKMPFdd92lprQ8OCm5U9njmKdOcsNVNPMOhrU33nhj3rx5Yj5f
+9rXDJN98YtflG+3ySab/OhHP7riiis+8IEPyEfmz5//zjvvmN9FVO1x48b1
9VdMMaurrrrqlFNOEZ8+OYdf/vKXasrXXntt3XXXVe/1gx/8QEz8yU9+Uj4y
e/bs8ufXyizLz372s41SiEWTM1mwYEH8hffcc8+cOXPkBG7DWuHFueWWW8Q0
Q4cOve+++xy2B0CI6iwoaRYuXJjYu0aPzK+55hrDHOxrjebJJ59cbbXV5GTx
KHHnnXfKA/5hw4Ydd9xxv/vd70T0mzVrlpz+5JNPTpynfbcvDmu/+tWvqmWs
LqyVrLCFK2Avaw2LDC6fes973vOtb33ruuuuu+yyy7bbbjv5oJi/Or+WaxGK
bbjGvfzyy2oZDzjggN/85je//vWv9957b/mICB32s7LZtcRqkc+uueaa8S17
9NFHRyeWkWfUqFGJu8E//vEPNaXlwUmZnSoXjnnq5KSgpOlgWBMdl5jJ2LFj
X3jhhbRpnnnmGflFpajCK1eulA+KD9rhhx8u2yA+6eZ3+fznPy+nvPDCC9WD
opCNHz9e63lOPPFEOeWiRYv+L3Lxg2xnX9FjAIfLkujRRx8VJUa8XBQj7Zu9
119/ffny5dFv9hyGtZKLs+uuu4pp9tlnH1ftARCo2gpKAV/4whdk88R/zFPa
15oo0WfKzjAtShxxxBHyqehVZM8+++ykSZP6kr72z9Xt33XXXe9973v7IqoL
axVVWEMFlMxr+K233hozZox4XGymf/3rX9FXLV26VL5EHO0XWIS8G84TF1xw
gWz2Zz7zmejjIrjJx//5z3/azMdy1/r2t78tn3344YfNM3z77bdHjx4tpjzk
kEPMU5Y/1srcqQrgmKc2TgpKmq6FNfHBERVEzOTQQw81THb66afL9zrvvPOi
j4sP46BBg8Tje++9t+Hl4tMtv+qcPn26dtWBOp/+17/+VT6y1VZbiT/FZ1x8
TrX5vO997xNPzZw5M8cSul6WRG+88cYWW2whXjtgwADtzgjRo2600UbyHQcP
HiwmMFftvEouzs9//vO+/q+gH3zwQVdNAhCi2gpKXr/61a9k2xYuXCiO6g1T
5qo1Ud/97ndlB54YJYRNN91UHjRqj4tj6fhRbq5u/5vf/KaYRk48dOhQwxG1
E1VUWEMFVMxr+I477pCPxy9RE+2UTx155JEFFiHXhvPH7rvvLtomivh//vOf
6ON/+MMfZLPPPffczJnY71oHHnhgX/85zcx5ikMFOZ/Mq5FLHpzY7FQFcMxT
G8KaUn5V/O///q+cybXXXmuYbMmSJfLDHv+ydJdddpH1yHDT67333ivf5dhj
j9WeEitHPnX88cfLR2Sp3XbbbePzOe644+TEDz30kNXiVbAsiU477TTZsMMP
P1x76pe//KV8avbs2bfeeqs42DBU7QJKLs4rr7wycuRIMdmnPvUpV00CEKLa
CkouL7300rRp0+TBeWbPn6vWRF8lTwF84QtfkF10PKztvPPOicf8n/3sZ+Vs
ozfo5er2N954YzmxmNX1119vOKJ2oooKa6iAUuYavuaaa8SR+YwZM377299q
rxXHUXLmH/zgBwssQq4N5w+xxi666CKRcLXHr7vuusQElMh+19pwww3FU2Jd
Zc5TDtMh/PnPfzZPWfLgJHOnKoZjntqULygGXQtr++yzT1//lQDm4XHkBd7i
4xx/SvWN2v2/URdeeKGcRnzMtafefPNN+ZT4XPf667L888ADD4zP59RTT5XP
/vrXv7ZavAqWJe7JJ5+U129MmjTp+eef154VVXvq1KlnnHGGvIreeVgrvzj7
7bdfX//15wyRBHRZbQUlF3UBpM2wAPa1RnnttdfkMe3cuXPF/9PCmjwx1Be5
GE946qmn5E1Y8+fPj06cq9vfZJNNFi9efOedd/Yi500qCmtVVFhzBexZr+E0
N954o2zV8uXLCyxCrg3nObEPyzNuwmOPPZY5veWu9eqrr8pTXV/+8pdvvvnm
k08++dBDD/36178uduP4DYxf+cpX+vpP+YmQ+/3vf/9zn/vcEUcc8b3vfS/+
Ox1lDk4yd6oyOOapB2FNKbkq3n77bXkZf2KnFyX2ajFZ4li7oh7JZlx33XVp
L1ffkPz+97+PPys/kltuuaX8U3ah22yzTXxK0S3I+Vx88cXmBhuUXJa4ww47
TL7q/PPPjz8r+rr/i1xU7zyslV+cSy+9VE72pz/9yVWrAASntoJi7+GHH5bX
cc2ePdvmgodctUaSYyAMHTpUXh6ZFiXE0aMc5GTgwIHi6PSKK644/fTT5Sk/
QRysRifO1e1Hj0WrDmu9CiqsuQL2rNdwIrFTLViwQM5f3eKUaxFybTg/iTB1
yy23iPSkzpQtXbrU5oWWu9btt9/el2LttdfWzqCptCjPbyoDBgw4+uijRVPV
lGUOTjJ3qjI45qlHyYJi1qmwJhZWzkF0AobJ1BeSibdkqm8yDb8L87WvfU1O
c/fdd8eflV+/zJs3T/657bbb9vWfH9fuLHjppZemTp0q5xO/NsBS+WXRvPji
iyNGjOjrv9j7/5J+C0bjNqw5WZzbbrtNTvaNb3zDSasAhKiegpKLGsXu1FNP
tZk+V60RbrrpJnkX1SmnnCIfMUQJEcFE0Isf0F599dXmVtl3+zWENbcVNrMC
5lrDcerOsj333LPwIhTecJ5QpVxatmxZ5vjbcYZdSwSi6PzXXXfdzTffXF4r
2Nd/Ek2em5NUzu3rPzm19dZbq6E1+yK3oZU5OMl7WJUXxzz1kCu5opl3Kqxd
dNFFcg4/+MEPDJOJZZSd7cEHHxx/Vt36femll6bN4dhjj5XTJN7Ju8kmm4in
5syZI/8877zz5MTrrbeeOrH+n//8Z/HixapDOO2003Isp9Nl0Zx77rnyJccc
c4zN9G7DmpPFeeqpp+RkH/rQh5y0CkCI6iko9sTxnrpbTVRbm5fkqjUvvPCC
/AU0cfCvRiNJixKiAdHBDNVwDX39Z/3uuOMOQ6u8CmtuK6y5AuZaw3HLly+X
Mx8/fvyTTz5ZbBHKbDhPnHDCCX39oUm1fN999837G0aGXetTn/qUfEokLzUU
5/PPP7///vvLx9UPST/77LPyEZGUL7jgAnUZ4VVXXaV+IfEnP/lJr9zBSd7D
qrw45qmHXMkVzbxTYU1dMRK/pTfqrbfekj91kXhxy+WXXy5ncuWVV6bNQXW5
icPvrLPOOn39v6Ii/xRduvoSbMiQIeL/O+20k7y6Rv1Ey/e///2cy+psWTRy
UFwxT8txdN2GNSeLI1a4HF9atM1JqwCEqJ6C8vLLL/8tJvHWFXEEKGf40Y9+
1LINuWqNHBN+9OjR0WSXFiW22WYbOec999zz73//+zvvvPPcc8+Jo2jZeY4d
O9YwqKBXYc1thTVXwFxrOEqUNpUgxMu1y9VyLUKZDVcd+09Br/9M08qVK197
7TWxe8gfMeyzvhJSMexa999/vzhaOPPMM7UAKLaC/H5DuPnmm3v9F2Ree+21
55xzzk033aTNRI6y2Nf/m929cgcneQ+r8uKYpx4lC4pZp8Ka+hJSfFTNU8qv
NxctWhR/6uyzz5YzMfxkhjrJftttt8Wflb1r9Odvnn322b322qvv3USHrGp3
mUJWclmi7rzzTlUFLN/d+T1rThZnzTXX7Eu5ERhAR9RTUMThWV+S+JSiX5VP
Ra/CMrOvNZdccomc8oc//GF0msQooX4yePvtt9euQFNnAT7xiU+ktcqrsNZz
V2HNFTDXGo4Sh1Xqp5MnTJiQOOqg5SKU3HDVsf8UaF544YXp06f39d8jlmvw
+WK7lvq5N5tfCpg5c2Zf/5Ag8s9iBycFDqsK4JinBpa7dDGdCmvqx+UzhxXa
bLPN+lJ+Qf4b3/iGnMntt9+e9vKrr75aThMfz1n0n/Lk/h577KE9JSb++te/
vv/++5944om33HLLm2++qTr/xJvHLZVclijRyactVxrnYc3J4sifBLIfngtA
+9RTUCwPUx9//HH5zXxi55bGvtaoUwbrvJu8TE5MKf+85pprxMQnnXSSnPjG
G2+Mz3bGjBl9/ZfkpbXKt7Amla+w5gqYaw0rzzzzzOabby5fOGvWLHPwz1yE
khuuOoXDWi/ym+DxIU8Niu1aIinLV4lPd+bE8lcShJdffrlX9OCkwGFVARzz
1KBkQTHrVFhTV63cdddd5inl11yTJ0/WfmZU+MhHPtLXf8L6pZdeSnv5X/7y
F/lG55xzjvbUI488Ip+K/yxO3Kc//Wn5XitXrsycOE3JZVFEXZBji6211lr2
d/s6D2tOFkd+A8YlAUCX1VNQHn300e/FxMd8U2OwX3TRRfZtsK816nIys8sv
v7y3qvQIDzzwQPxNZa8+atSotFb5GdbiclXYzAqYaw1LIubLUx6CONR/+umn
Sy5CyQ1XncxPwXXXXXf22Wf/6le/ir9Wjc4R38kNDLvWrbfeetVVVyUmdPXt
x5lnntnrv9vrhhtuuOKKK+I/ndZblc7Gjh0r/yxwcFLssKoAjnlqIPecimbe
qbCmxi/NvExO/SiG9nF+7bXX5IXi6i6ARKLblCMLxQdxVRVZXbp81lln7bbb
bvETbWJlTpgwQUz53ve+12rxqlkWRR0VfPzjH7d/d+dhzcniyK86ly1b5qpV
AIJTW0GxoS6Ei44skcm+1nz3u989Jom8xmzcuHHyTzmqpKhK8rVy8ASNzBeG
ntarsOaqwmZWwFxrWHjuuefmzJkj57l48WLDABr2i1BywzVFpBu5IOuss078
2S996UtyoVasWGE/z7Rd66233pL5aObMmfFXqQMMeZ7r29/+tvwz+qN10osv
vijH6len0gocnBQ7rCqAY54aENaUkqtCfXjPPvts85RPPPGEvB9Tu6f14osv
lnM4/vjjzXM48sgj+/qvsr7vvvvUg2L9bLjhhuJx0VeIT7p8UN0hrp0f/6//
+i/5uOh+cyxkBcsife973yvQHudhrfziPPzww3JKm5ObANqqtoJiY/LkyX39
tyzlfaF9rUmUeEfVn/70J7lo22yzjRYifvzjH8unDjvsMPM8PQlrripssQrY
S79n7dBDD5UzFLVMJAgni1BywzVoyZIlsnnaybXHH3987Nixff0jq+QaENKw
a6m7/7ThPsR7yfw1depUcazbi/w8x6abbqr9orT6kYXTTz9dPlLg4KTwTpUL
xzz1KFlQzDoV1kTz5CfxgAMOyJz4kEMOkW931FFHPffc/9fe/QdXUZ0NHL8K
iig1gPJLNPKjglWxQw3oMFirNINUS+lQi9JWi9aiaFvFgrQVeEuZUqrSqnTA
jmKNQUcrNMqEEH5ICEwN+FoqDNJJxgYw8vNNIPCaJpJw32fyjGf2vXvvZu/d
c+/dJN/PHww5e+7unr33nuc8e3fPHmtsbCwoKNCzE7ISKTE15Yvfv9Xhw4dN
YVVVld6AIOVbtmxpaWmprq6+5ZZbdJ2zZ882Nf/xj3/ojK9XXHHFX//614aG
ho8//th0zrm5ubLplJtspS3KXFntnhbJg/VkLZpMc+Iy58PXrVtnca8AtC+Z
DCjezNzaN954o0e1gLEmrripxJkzZ8z07+PGjduxY4dkExKbli5d2qNHDyns
3r27x91VoUrWkoqw1iNgNMER3rZtm+6VePzxx/8rnsLCwmSbEPCNy6LNmzfr
x7h3795vvPGGfIxlz9evX28uE5XM1FT2eJsMj49WcXGxHs+cnJyVK1fKhk6f
Pl1aWqqPXRDLly/XmrIbN9xwgxZOnDhRsrlo62QvDzzwgBYOGjTI+flJdnCS
8ocqKYx5MiNgQPHWqZI1MWnSJFmDfCXbrFlZWXnZZZfpFuV7bR5WIv1JzNmY
UaNG6SL9Ihtz5syJfK5bt27m//Lddz71XvziF78wS/XMjLr44osTzW2blOBt
iTpORnl0j27pSNb8Nyeu6dOnR1pPODc1NVncKwDtSyYDijdzAl8GgR7Vgsca
t0S/+9TU1JhuNtI6yNexdKR1royYCQ/jrjMkyVo0mQhrPQJGExxhneTfm84J
n2wTgrxx2WVmR4m0PmrQ+UmWL5rzRjCPt8nw/mhJgmxW3q2V+XP27NnObckm
+vTpY5bqz3xqyJAh5rF3KtnBScofqqQw5skMfSvTtPLOlqy9+OKLupKdO3e2
Wfno0aMTJkzo2rWr+W4OHz58zZo1MdXMiRf3vQYFBQV6cYuSVUksrq2tjanW
3Nz8zDPP6DXb5qstnXlVVVWQxtpty5gxYzQ0JLVdPcFr/SJ5n81xk05Y+9Lv
fOc7dncJQPuS4YDiwcy47j2FQvBY4zZu3Dipf/XVV7sXnTx58qc//alzHBtp
TQDbnKHLf7dfXl6uq/X/rM8U+I+w1iNgNMER1rkpvOXn56fQhGiANy7rJIib
+/jUgAED5LMdU83jbTLa/GitWrVKsi2zIcmthg0bFjezk0zqvvvucz6kWxIf
GULE/X4lNThJ+UPlH2OejNG3O00r72zJ2qlTp/TRMw8//LDPl0ijKioqNm3a
JL2ie5IfP/bv379hw4bt27cfP37co1pTU9OePXskasvm4k49FFzwtoRKCs0p
KSnRT1GQpyEA6ACyElDSymesSYqkCZWVlbLaHTt26BTl7VQGImy6JdWE9vvG
1dTUrG918ODBdG9LNlFWVrZ161bvWzujreONXbt2lZaW7t27t82ZG8Mz1mLM
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
efJknQ5XXiKr0t2WTkY+GKby+PHjtfJdd92lkybJv2ZayxdeeCFgW9xI1gCk
oDMka9HA/T+SwtH2z/9owX2stm3bpiMQ8fjjj/9XPIWFhVq5vLxcx2PyRvz5
z38+cuSIFO7Zs+fmm2/WNdxzzz1mW0kNeGJ4jEYmTZqkq/3Zz362d+9eyRNl
ZDh8+HAtXLZsWfDjiewiWTMyGVsrKysvu+wy3aJ8SbWzjbRecx7zE9ioUaN0
0YEDB5zlc+bMiXxO70tVN9xwQ8wpFOlqnDWdlSWti/sEkEy2RbrHgQMHml2S
pNL8/8ILL9y8ebNzDZKl6q+H6rzzzjP/nz9/fsCGxEWyBiAFmQwoWRQ8lsE/
jrZ//kcL7mM1ZcqUSFsk7TJrMBO8KL1sSY0YMcJ5I2FSA54YHqORmpqaPn36
mFWZB72JBx54wH3jHtqdtAYUkjUPR48enTBhgvORiMOHD1+zZk1MNUm+dGnM
QxhFQUFB3759zctlVfKtrK2tdW9r1apVOiOQkk5+2LBhr7/+ekjaIvs8ffp0
PTelunTpYs47xZAPybRp0/RePG3LyJEjFy1aZKstMfQ8GPcCAEhKhgNKFgWP
ZfCPo+2fz9GC+1jpxJve8vPznSvZtGmTMzeMtD6RbcGCBU1NTTGbS2rA4+Q9
GvnXv/516623OncgNzd3+fLlZGodQ1oDCslam6RRFRUV8jWvqqpK7Ueu/fv3
b9iwYfv27W3OrXHw4MGysrKtW7daf3K0CtiWhoaGnTt3FhUV/fOf/2xsbPSu
LOvfu3fvxo0bnRd+AEBIdJ5kTQWPZfCPo+1fJkcLdXV1MkaV96W6uto7S0pq
wOPfkSNHysvLZQcqKyu9b7VD+0KyZnS22AoASBMCCgDACpI1g9gKALCCgAIA
sIJkzSC2AgCsIKAAAKwgWTOIrQAAKwgoAAArSNYMYisAwAoCCgDACpI1g9gK
ALCCgAIAsIJkzSC2AgCsIKAAAKwgWTOIrQAAKwgoAAArSNYMYisAwAoCCgDA
CpI1g9gKALCCgAIAsIJkzSC2AgCsIKAAAKwgWTOIrQAAKwgoAAArSNYMYisA
wAoCCgDACpI1g9gKALCCgAIAsIJkzSC2AgCsIKAAAKwgWTOIrQAAKwgoAAAr
SNYMYisAwAoCCgDACpI1g9gKALCCgAIAsIJkzSC2AgCsIKAAAKwgWTOIrQAA
KwgoAAArSNYMYisAwAoCCgDACpI1g9gKALCCgAIAsIJkzSC2AgCsIKAAAKwg
WTMiAAAAABAyaUp/SNYAAAAAIIg0pT/tK1kDAAAAgE6CZA0AAAAAQohkDQAA
AABCiGQNAAAAAEKIZA0AAAAAQohkDQAAAABCiGQNAAAAAEKIZA0AAAAAQohk
DQAAAABCiGQNAAAAAEKIZA0AAAAAQohkDQAAAABCiGQNAAAAAEKIZA0AAAAA
QohkDQAAAABCiGQNAAAAAEKIZA0AAAAAQohkDQAAAABCiGQNAAAAAEKIZA0A
AAAAQohkDQAAAABCiGQNAAAAAEKIZA0AAAAAQohkDQAAAABCiGQNAAAAAEIo
TcnafwMAAAAAgklHsgYAAAAACM5isgYAAAAAyBiSNQAAAAAIIZI1AAAAAAgh
TdZOnjxZX1/f0NCQ7d0BAAAAAPxHsjPJ0SRTa2xsPH78+KeffprtPQIAAAAA
/EeyM8nRJFOLRqN1dXWStZGvAQAAAEB2SV4m2ZnkaGfOnJFkrampSRI37lwD
AAAAgOySvEyyM8nRzHO09Yc2KefmNQAAAADIPEnKNFOT/0T/Py3X6yFJ2QAA
AAAgMyT/0qsf9Re0aDx6PaSor6//XwAAAABA+kn+pYmY8+rHuBobGyWn+x8A
AAAAQPrpLP3eaRoAAAAAAAAAAACARP4PXWAhxQ==
     "], {{0, 499.5}, {583.5, 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{144, 144}],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSizeRaw->{583.5, 499.5},
   PlotRange->{{0, 583.5}, {0, 499.5}}]]], "Output",
 TaggingRules->{
  "Settings" :> {$CellContext`real11 = 0.47, $CellContext`real12 = 
     0.3400000000000001, $CellContext`real13 = 0, $CellContext`real21 = 
     0.09000000000000008, $CellContext`real22 = 0.71, $CellContext`real23 = 
     0, $CellContext`real31 = 0.050000000000000044`, $CellContext`real32 = 
     0.3600000000000001, $CellContext`real33 = 1, $CellContext`state1 = 
     False, $CellContext`state2 = True}},
 CellTags->"Snapshot",
 CellID->246263503,ExpressionUUID->"b14ff660-defe-4697-a15d-c0e475ed98aa"]
}, Closed]],

Cell[CellGroupData[{

Cell["Source & Additional Information", "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Source & Additional Information"},
 CellTags->"SourceInformationGroup",
 CellID->62407265,ExpressionUUID->"f56ffbe8-f4bb-434c-8362-eee556d8264d"],

Cell[CellGroupData[{

Cell[TextData[{
 "Contributed By",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"AuthorNames", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "'John Smith' for single authors; 'John Smith, Robert Ford, and \
Jane Doe' for multiple authors. To credit people other than Demonstrations \
authors, please see the 'Details & Citations' section."}], "MoreInfoText"], 
        Background -> GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> 
        GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoAuthorNames"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "2c39834e-9b47-469b-b486-03fb095f9743"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "AuthorNames"},
 DefaultNewCellStyle->"Item",
 CellTags->{"AuthorNames", "Contributed By", "TemplateCellGroup"},
 CellID->255368948,ExpressionUUID->"23c49b67-d802-4be5-aed0-6bc3c6066e72"],

Cell["Bianca Eifert", "Text",
 TaggingRules->{},
 CellID->943678134,ExpressionUUID->"6aefe4d7-90a7-4db4-a274-c5021475d2f0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Details & Citations",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"DetailCells", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "This optional section is for a more detailed description of the \
Demonstration than the caption, but it should still be as concise as \
possible. This section may also include numbered snapshot captions (e.g., \
Snapshot 1: phrase or sentence without an initial capital and without a \
period, unless more than one sentence is used) and explanations of the ", 
           StyleBox["Manipulate", "MRbig"], 
           " control labels. Define any symbols undefined so far. Include \
only text in this section \[LongDash] no code, graphics, etc. Do not change \
the cell style or copy cells from other sections. \n\nA book reference uses \
this format: \n   L. D. Schmidt, ", 
           StyleBox[
           "The Engineering of Chemical Reactions", FontSlant -> "Italic"], 
           ", New York: Oxford University Press, 1998. \n\nAn article \
reference uses this format: \n   D. Pearson, \"A Polynomial-Time Algorithm \
for the Change-Making Problem,\" ", 
           StyleBox["Operations Research Letters", FontSlant -> "Italic"], 
           ", ", 
           StyleBox["33", FontWeight -> "Bold"], 
           "(3), 2005 pp. 231\[Dash]234."}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoDetailCells"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "21e914c4-f825-48e5-a636-231cb0dae7e2"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "DetailCells"},
 DefaultNewCellStyle->"Text",
 CellTags->{
  "AuthorNotes", "DetailCells", "Details & Citations", "TemplateCellGroup"},
 CellID->441931514,ExpressionUUID->"a1cb5610-fcc6-4828-ac24-3c636db28c7f"],

Cell["Details, references or citation information", "Text",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->111711384,ExpressionUUID->"d467a24f-541f-4029-800d-1cc131109903"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "References",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"ReferenceCells", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "This optional section is for a more detailed description of the \
Demonstration than the caption, but it should still be as concise as \
possible. This section may also include numbered snapshot captions (e.g., \
Snapshot 1: phrase or sentence without an initial capital and without a \
period, unless more than one sentence is used) and explanations of the ", 
           StyleBox["Manipulate", "MRbig"], 
           " control labels. Define any symbols undefined so far. Include \
only text in this section \[LongDash] no code, graphics, etc. Do not change \
the cell style or copy cells from other sections. \n\nA book reference uses \
this format: \n   L. D. Schmidt, ", 
           StyleBox[
           "The Engineering of Chemical Reactions", FontSlant -> "Italic"], 
           ", New York: Oxford University Press, 1998. \n\nAn article \
reference uses this format: \n   D. Pearson, \"A Polynomial-Time Algorithm \
for the Change-Making Problem,\" ", 
           StyleBox["Operations Research Letters", FontSlant -> "Italic"], 
           ", ", 
           StyleBox["33", FontWeight -> "Bold"], 
           "(3), 2005 pp. 231\[Dash]234."}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoReferenceCells"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "0a24780e-418b-4c26-998f-ac29f7df7803"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "ReferenceCells"},
 DefaultNewCellStyle->"Text",
 CellTags->{"ReferenceCells", "References", "TemplateCellGroup"},
 CellID->592881655,ExpressionUUID->"491297dc-888b-444c-9224-4c2a6c8bfb2f"],

Cell["References for demonstration.", "Text",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->423796343,ExpressionUUID->"80a3996a-c4ca-47cc-b075-b35b051a719f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Submission Notes",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"SubmissionNotes", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Enter any additional information that you would like to \
communicate to the reviewer here. This section will not be included in the \
published resource.", 
           StyleBox["\n", FontSize -> 4]}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoSubmissionNotes"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "c5229636-f21f-44fd-8250-44ec3d35806b"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "SubmissionNotes"},
 DefaultNewCellStyle->"Text",
 CellTags->{"Submission Notes", "SubmissionNotes", "TemplateCellGroup"},
 CellID->797097429,ExpressionUUID->"bfe26209-7226-4b2c-b9e3-0d13389f839c"],

Cell["Additional information for the reviewer.", "Text",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->820829112,ExpressionUUID->"89a32167-0ebd-49f9-bcdb-a6212bd55da7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Keywords",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Keywords", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "List relevant terms (e.g. functional areas, algorithm names, related \
concepts) that should be used to include the demonstration in search \
results.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20,
         FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoKeywords"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "082a2886-9bb9-4b36-8d18-d030b5d7aac0"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Keywords"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Keywords", "TemplateCellGroup"},
 CellID->938146184,ExpressionUUID->"876e9fae-914a-45d0-b446-77538eac7ea6"],

Cell["k-space", "Item",
 TaggingRules->{},
 CellID->435020502,ExpressionUUID->"ebe304c7-4bce-4370-9a4e-774ac69ea56d"],

Cell["reciprocal space", "Item",
 TaggingRules->{},
 CellID->622029586,ExpressionUUID->"9ce147d9-f005-40ff-af20-78888f211055"],

Cell["reciprocal lattice", "Item",
 TaggingRules->{},
 CellID->20386726,ExpressionUUID->"30513fef-85c1-498a-aeb2-f5d6eecfc78d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Categories",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Categories", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Choose categories that best represent your demonstration. These \
choices determine which pages your demonstration will appear on when \
published to the repository.", "MoreInfoText"], Background -> GrayLevel[0.95],
         FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 
        5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCategories"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "8ae6d83b-bfd5-4db3-9e10-97f254cfca98"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Categories"},
 CellTags->{"Categories", "DemoCategories", "TemplateCellGroup"},
 CellID->845692503,ExpressionUUID->"78d6e1cc-debb-4db8-b279-eb8ec360b82d"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Mathematics"}], "\" \"", 
           StyleBox[
            DynamicModuleBox[{Typeset`var$$ = False}, 
             StyleBox[
              PaneSelectorBox[{False -> TagBox[
                  GridBox[{{"\"Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                  GridBox[{{"\"Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "School Mathematics"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"School Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"School Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "Elementary School K-2 Mathematics"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Elementary School K-2 Mathematics\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "Elementary School 3-5 Mathematics"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Elementary School 3-5 Mathematics\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Middle School Mathematics"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Middle School Mathematics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Mathematics"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"High School Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"High School Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Algebra I"}], 
                    "\" \"", 
                    StyleBox["\"High School Algebra I\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Geometry"}], 
                    "\" \"", 
                    StyleBox["\"High School Geometry\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, 
                    "High School Algebra II and Trigonometry"}], "\" \"", 
                    StyleBox[
                    "\"High School Algebra II and Trigonometry\"", FontSize -> 
                    12, Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Precalculus"}], 
                    "\" \"", 
                    StyleBox["\"High School Precalculus\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, 
                    "High School Calculus and Analytic Geometry"}], "\" \"", 
                    StyleBox[
                    "\"High School Calculus and Analytic Geometry\"", 
                    FontSize -> 12, Editable -> False, StripOnInput -> 
                    False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, 
                    "High School Advanced Calculus and Linear Algebra"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Advanced Calculus and Linear Algebra\"", 
                    FontSize -> 12, Editable -> False, StripOnInput -> 
                    False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "High School Finite Mathematics"}], 
                    "\" \"", 
                    StyleBox["\"High School Finite Mathematics\"", FontSize -> 
                    12, Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Statistics"}], 
                    "\" \"", 
                    StyleBox["\"High School Statistics\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{
                    Left}}}, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Area"}], "\" \"", 
                    StyleBox[
                    "\"Area\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Equations"}], "\" \"", 
                    StyleBox[
                    "\"Equations\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Exponential Functions"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Exponential Functions\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Exponents and Logarithms"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Exponents and Logarithms\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Hyperbolic Functions"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Hyperbolic Functions\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Identities"}], "\" \"", 
                    StyleBox[
                    "\"Identities\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Inequalities"}], "\" \"", 
                    StyleBox[
                    "\"Inequalities\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Integers"}], "\" \"", 
                    StyleBox[
                    "\"Integers\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Irrational Numbers"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Irrational Numbers\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Number Bases"}], "\" \"", 
                    StyleBox[
                    "\"Number Bases\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Parametric Equations"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Parametric Equations\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Perimeter"}], "\" \"", 
                    StyleBox[
                    "\"Perimeter\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Pi"}], "\" \"", 
                    StyleBox[
                    "\"Pi\"", FontSize -> 12, Editable -> False, StripOnInput -> 
                    False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Polynomials"}], "\" \"", 
                    StyleBox[
                    "\"Polynomials\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Pre-Algebra"}], "\" \"", 
                    StyleBox[
                    "\"Pre-Algebra\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Prime Numbers"}], "\" \"", 
                    StyleBox[
                    "\"Prime Numbers\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Rational Numbers"}], "\" \"", 
                    
                    StyleBox[
                    "\"Rational Numbers\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Real Numbers"}], "\" \"", 
                    StyleBox[
                    "\"Real Numbers\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Trigonometric Functions"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Trigonometric Functions\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Volume"}], "\" \"", 
                    StyleBox[
                    "\"Volume\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Algebra"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Algebra\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Algebra\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Algebra I"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Algebra I\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, 
                    "High School Algebra II and Trigonometry"}], "\" \"", 
                    StyleBox[
                    "\"High School Algebra II and Trigonometry\"", FontSize -> 
                    12, Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Precalculus"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Precalculus\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Complex Numbers"}], "\" \"", 
                    StyleBox[
                    "\"Complex Numbers\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Linear Algebra"}], "\" \"", 
                    StyleBox[
                    "\"Linear Algebra\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Polynomials"}], "\" \"", 
                    StyleBox[
                    "\"Polynomials\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Quadratic Forms"}], "\" \"", 
                    StyleBox[
                    "\"Quadratic Forms\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Rational Functions"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Rational Functions\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Vector Algebra"}], "\" \"", 
                    StyleBox[
                    "\"Vector Algebra\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Applied Mathematics"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Applied Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Applied Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Approximation Methods"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Approximation Methods\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Linear Algebra"}], "\" \"", 
                    StyleBox[
                    "\"Linear Algebra\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Numerical Analysis"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Numerical Analysis\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Operations Research"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Operations Research\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Optimization"}], "\" \"", 
                    StyleBox[
                    "\"Optimization\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Special Functions"}], "\" \"", 
                    StyleBox[
                    "\"Special Functions\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Wavelets"}], "\" \"", 
                    StyleBox[
                    "\"Wavelets\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Calculus & Analysis"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Calculus & Analysis\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Calculus & Analysis\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, 
                    "High School Calculus and Analytic Geometry"}], "\" \"", 
                    StyleBox[
                    "\"High School Calculus and Analytic Geometry\"", 
                    FontSize -> 12, Editable -> False, StripOnInput -> 
                    False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, 
                    "High School Advanced Calculus and Linear Algebra"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Advanced Calculus and Linear Algebra\"", 
                    FontSize -> 12, Editable -> False, StripOnInput -> 
                    False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Calculus"}], "\" \"", 
                    StyleBox[
                    "\"Calculus\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Complex Analysis"}], "\" \"", 
                    
                    StyleBox[
                    "\"Complex Analysis\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Derivatives"}], "\" \"", 
                    StyleBox[
                    "\"Derivatives\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Differential Equations"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Differential Equations\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Harmonic Analysis"}], "\" \"", 
                    StyleBox[
                    "\"Harmonic Analysis\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Integrals"}], "\" \"", 
                    StyleBox[
                    "\"Integrals\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Multivariable Calculus"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Multivariable Calculus\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Real Analysis"}], "\" \"", 
                    StyleBox[
                    "\"Real Analysis\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Related Rates"}], "\" \"", 
                    StyleBox[
                    "\"Related Rates\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Riemann Surfaces"}], "\" \"", 
                    
                    StyleBox[
                    "\"Riemann Surfaces\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Series"}], "\" \"", 
                    StyleBox[
                    "\"Series\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Special Functions"}], "\" \"", 
                    StyleBox[
                    "\"Special Functions\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Vector Fields"}], "\" \"", 
                    StyleBox[
                    "\"Vector Fields\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Discrete Mathematics"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Discrete Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Discrete Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "High School Finite Mathematics"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Finite Mathematics\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Coding Theory"}], "\" \"", 
                    StyleBox[
                    "\"Coding Theory\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Combinatorics"}], "\" \"", 
                    StyleBox[
                    "\"Combinatorics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Graph Theory"}], "\" \"", 
                    StyleBox[
                    "\"Graph Theory\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Networks"}], "\" \"", 
                    StyleBox[
                    "\"Networks\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Sequences"}], "\" \"", 
                    StyleBox[
                    "\"Sequences\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Tiling"}], "\" \"", 
                    StyleBox[
                    "\"Tiling\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Trees"}], "\" \"", 
                    StyleBox[
                    "\"Trees\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Experimental Mathematics"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Experimental Mathematics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Geometry"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Geometry\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Geometry\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Geometry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Geometry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Algebraic Curves"}], "\" \"", 
                    
                    StyleBox[
                    "\"Algebraic Curves\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Algebraic Geometry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Algebraic Geometry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Algebraic Surfaces"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Algebraic Surfaces\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Analytic Geometry"}], "\" \"", 
                    StyleBox[
                    "\"Analytic Geometry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Conic Sections"}], "\" \"", 
                    StyleBox[
                    "\"Conic Sections\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Curves"}], "\" \"", 
                    StyleBox[
                    "\"Curves\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Differential Geometry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Differential Geometry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Ellipses"}], "\" \"", 
                    StyleBox[
                    "\"Ellipses\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Geometric Transformations"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Geometric Transformations\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "Higher-Dimensional Geometry"}], "\" \"", 
                    StyleBox[
                    "\"Higher-Dimensional Geometry\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Hyperbolic Geometry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Hyperbolic Geometry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Nested Patterns"}], "\" \"", 
                    StyleBox[
                    "\"Nested Patterns\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Plane Geometry"}], "\" \"", 
                    StyleBox[
                    "\"Plane Geometry\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Polygons"}], "\" \"", 
                    StyleBox[
                    "\"Polygons\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Polyhedra"}], "\" \"", 
                    StyleBox[
                    "\"Polyhedra\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Projective Geometry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Projective Geometry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Reflections"}], "\" \"", 
                    StyleBox[
                    "\"Reflections\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Solid Geometry"}], "\" \"", 
                    StyleBox[
                    "\"Solid Geometry\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Surfaces"}], "\" \"", 
                    StyleBox[
                    "\"Surfaces\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Triangles"}], "\" \"", 
                    StyleBox[
                    "\"Triangles\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Historical Mathematics"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Historical Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Historical Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Euclid's Elements"}], "\" \"", 
                    StyleBox[
                    "\"Euclid's Elements\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Foundations of Mathematics"}],
                     "\" \"", 
                    StyleBox[
                    "\"Foundations of Mathematics\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Greek Mathematics"}], "\" \"", 
                    StyleBox[
                    "\"Greek Mathematics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Unsolved Problems"}], "\" \"", 
                    StyleBox[
                    "\"Unsolved Problems\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Number Theory"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Number Theory\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Number Theory\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Number Bases"}], "\" \"", 
                    StyleBox[
                    "\"Number Bases\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Prime Numbers"}], "\" \"", 
                    StyleBox[
                    "\"Prime Numbers\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Representations of Numbers"}],
                     "\" \"", 
                    StyleBox[
                    "\"Representations of Numbers\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Pure Mathematics"}], "\" \"", 
                    
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Pure Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Pure Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Algebraic Geometry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Algebraic Geometry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Complex Analysis"}], "\" \"", 
                    
                    StyleBox[
                    "\"Complex Analysis\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Differential Geometry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Differential Geometry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Dynamical Systems Theory"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Dynamical Systems Theory\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Group Theory"}], "\" \"", 
                    StyleBox[
                    "\"Group Theory\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Knot Theory"}], "\" \"", 
                    StyleBox[
                    "\"Knot Theory\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Mathematical Logic"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Mathematical Logic\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Theorem Proving"}], "\" \"", 
                    StyleBox[
                    "\"Theorem Proving\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Topology"}], "\" \"", 
                    StyleBox[
                    "\"Topology\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Recreational Mathematics"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Recreational Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Recreational Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Golden Ratio"}], "\" \"", 
                    StyleBox[
                    "\"Golden Ratio\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Mathematics Problems"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Mathematics Problems\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Unsolved Problems"}], "\" \"", 
                    StyleBox[
                    "\"Unsolved Problems\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Statistics"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Statistics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Statistics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Statistics"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Statistics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Data Analysis"}], "\" \"", 
                    StyleBox[
                    "\"Data Analysis\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Probability"}], "\" \"", 
                    StyleBox[
                    "\"Probability\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Random Processes"}], "\" \"", 
                    
                    StyleBox[
                    "\"Random Processes\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"]}, 
               Dynamic[Typeset`var$$], Alignment -> Automatic, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, ImageSize -> 
               Automatic], Deployed -> False, StripOnInput -> False], 
             DynamicModuleValues :> {}], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Life Sciences"}], "\" \"", 
           StyleBox[
            DynamicModuleBox[{Typeset`var$$ = False}, 
             StyleBox[
              PaneSelectorBox[{False -> TagBox[
                  GridBox[{{"\"Life Sciences\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                  GridBox[{{"\"Life Sciences\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Biology"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Biology\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Biology\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Biology"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Biology\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Developmental Biology"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Developmental Biology\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Growth Processes"}], "\" \"", 
                    
                    StyleBox[
                    "\"Growth Processes\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Molecular Biology"}], "\" \"", 
                    StyleBox[
                    "\"Molecular Biology\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Natural Forms"}], "\" \"", 
                    StyleBox[
                    "\"Natural Forms\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Plant Biology"}], "\" \"", 
                    StyleBox[
                    "\"Plant Biology\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Zoology"}], "\" \"", 
                    StyleBox[
                    "\"Zoology\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Cognitive Science"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Cognitive Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Cognitive Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Perception"}], "\" \"", 
                    StyleBox[
                    "\"Perception\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Psychology"}], "\" \"", 
                    StyleBox[
                    "\"Psychology\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Psychophysics"}], "\" \"", 
                    StyleBox[
                    "\"Psychophysics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Ecology"}], "\" \"", 
                    StyleBox["\"Ecology\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Medicine"}], "\" \"", 
                    StyleBox[
                    "\"Medicine\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"]}, 
               Dynamic[Typeset`var$$], Alignment -> Automatic, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, ImageSize -> 
               Automatic], Deployed -> False, StripOnInput -> False], 
             DynamicModuleValues :> {}], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Engineering & Technology"}], "\" \"", 
           StyleBox[
            DynamicModuleBox[{Typeset`var$$ = False}, 
             StyleBox[
              PaneSelectorBox[{False -> TagBox[
                  GridBox[{{"\"Engineering & Technology\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                  GridBox[{{"\"Engineering & Technology\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "School Applied Sciences"}], 
                    "\" \"", 
                    StyleBox[
                    "\"School Applied Sciences\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Chemical Engineering"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Chemical Engineering\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Civil Engineering"}], "\" \"", 
                    StyleBox[
                    "\"Civil Engineering\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Control Theory"}], "\" \"", 
                    StyleBox[
                    "\"Control Theory\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Electrical Engineering"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Electrical Engineering\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Electrical Engineering\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Circuit Design"}], "\" \"", 
                    StyleBox[
                    "\"Circuit Design\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Signal Processing"}], "\" \"", 
                    StyleBox[
                    "\"Signal Processing\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Fluid Mechanics"}], "\" \"", 
                    StyleBox[
                    "\"Fluid Mechanics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Image Processing"}], "\" \"", 
                    
                    StyleBox[
                    "\"Image Processing\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Machines"}], "\" \"", 
                    StyleBox[
                    "\"Machines\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Mechanical Engineering"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Mechanical Engineering\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Nanotechnology"}], "\" \"", 
                    StyleBox[
                    "\"Nanotechnology\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Robotics"}], "\" \"", 
                    StyleBox[
                    "\"Robotics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Signal Processing"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Signal Processing\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Signal Processing\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Audio"}], "\" \"", 
                    StyleBox[
                    "\"Audio\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Wavelets"}], "\" \"", 
                    StyleBox[
                    "\"Wavelets\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"]}, 
               Dynamic[Typeset`var$$], Alignment -> Automatic, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, ImageSize -> 
               Automatic], Deployed -> False, StripOnInput -> False], 
             DynamicModuleValues :> {}], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Kids & Fun"}], "\" \"", 
           StyleBox[
            DynamicModuleBox[{Typeset`var$$ = False}, 
             StyleBox[
              PaneSelectorBox[{False -> TagBox[
                  GridBox[{{"\"Kids & Fun\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                  GridBox[{{"\"Kids & Fun\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "School Puzzles and Recreations"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"School Puzzles and Recreations\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"School Puzzles and Recreations\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "Puzzles and Recreations: Elementary"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Puzzles and Recreations: Elementary\"", FontSize -> 12,
                     Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "Puzzles and Recreations: Intermediate"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Puzzles and Recreations: Intermediate\"", FontSize -> 
                    12, Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "Puzzles and Recreations: Advanced"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Puzzles and Recreations: Advanced\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Everyday Life"}], "\" \"", 
                    StyleBox[
                    "\"Everyday Life\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "For Kids"}], "\" \"", 
                    StyleBox[
                    "\"For Kids\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Optical Illusions"}], "\" \"", 
                    StyleBox[
                    "\"Optical Illusions\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Puzzles"}], "\" \"", 
                    StyleBox[
                    "\"Puzzles\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Recreation"}], "\" \"", 
                    StyleBox[
                    "\"Recreation\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"]}, 
               Dynamic[Typeset`var$$], Alignment -> Automatic, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, ImageSize -> 
               Automatic], Deployed -> False, StripOnInput -> False], 
             DynamicModuleValues :> {}], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Computation"}], "\" \"", 
           StyleBox[
            DynamicModuleBox[{Typeset`var$$ = False}, 
             StyleBox[
              PaneSelectorBox[{False -> TagBox[
                  GridBox[{{"\"Computation\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                  GridBox[{{"\"Computation\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Algorithms"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Algorithms\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Algorithms\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Automatic Reasoning"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Automatic Reasoning\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Coding Theory"}], "\" \"", 
                    StyleBox[
                    "\"Coding Theory\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Computational Geometry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Computational Geometry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Computer Algebra"}], "\" \"", 
                    
                    StyleBox[
                    "\"Computer Algebra\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Computer Graphics"}], "\" \"", 
                    StyleBox[
                    "\"Computer Graphics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Cryptography"}], "\" \"", 
                    StyleBox[
                    "\"Cryptography\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Data Compression"}], "\" \"", 
                    
                    StyleBox[
                    "\"Data Compression\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Image Processing"}], "\" \"", 
                    
                    StyleBox[
                    "\"Image Processing\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Numerical Analysis"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Numerical Analysis\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Computer Science"}], "\" \"", 
                    
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Computer Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Computer Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "High School Computer Science"}], "\" \"", 
                    
                    StyleBox[
                    "\"High School Computer Science\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Computational Geometry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Computational Geometry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Computer Graphics"}], "\" \"", 
                    StyleBox[
                    "\"Computer Graphics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Data Structures"}], "\" \"", 
                    StyleBox[
                    "\"Data Structures\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Finite State Machines"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Finite State Machines\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Recursion"}], "\" \"", 
                    StyleBox[
                    "\"Recursion\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Theory of Computation"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Theory of Computation\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Computer Systems"}], "\" \"", 
                    
                    StyleBox[
                    "\"Computer Systems\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "NKS / Wolfram Science"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"NKS / Wolfram Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"NKS / Wolfram Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Cellular Automata"}], "\" \"", 
                    StyleBox[
                    "\"Cellular Automata\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Fractals"}], "\" \"", 
                    StyleBox[
                    "\"Fractals\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Nested Patterns"}], "\" \"", 
                    StyleBox[
                    "\"Nested Patterns\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "Simple Computational Systems"}], "\" \"", 
                    
                    StyleBox[
                    "\"Simple Computational Systems\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Substitution Systems"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Substitution Systems\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"]}, 
               Dynamic[Typeset`var$$], Alignment -> Automatic, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, ImageSize -> 
               Automatic], Deployed -> False, StripOnInput -> False], 
             DynamicModuleValues :> {}], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Business & Social Systems"}], "\" \"", 
           
           StyleBox[
            DynamicModuleBox[{Typeset`var$$ = False}, 
             StyleBox[
              PaneSelectorBox[{False -> TagBox[
                  GridBox[{{"\"Business & Social Systems\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                  GridBox[{{"\"Business & Social Systems\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Actuarial Science"}], "\" \"", 
                    StyleBox[
                    "\"Actuarial Science\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Business"}], "\" \"", 
                    StyleBox[
                    "\"Business\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Economics"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Economics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Economics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "High School Economics and Finance"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Economics and Finance\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Macroeconomics"}], "\" \"", 
                    StyleBox[
                    "\"Macroeconomics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Microeconomics"}], "\" \"", 
                    StyleBox["\"Microeconomics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Finance"}], "\" \"", 
                    StyleBox[
                    "\"Finance\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Law"}], "\" \"", 
                    StyleBox[
                    "\"Law\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Political Science"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Political Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Political Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "International Relations"}], 
                    "\" \"", 
                    StyleBox[
                    "\"International Relations\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Social Sciences"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Social Sciences\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Social Sciences\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "School Social Studies"}], 
                    "\" \"", 
                    StyleBox[
                    "\"School Social Studies\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Linguistics"}], "\" \"", 
                    StyleBox[
                    "\"Linguistics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"]}, 
               Dynamic[Typeset`var$$], Alignment -> Automatic, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, ImageSize -> 
               Automatic], Deployed -> False, StripOnInput -> False], 
             DynamicModuleValues :> {}], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Our World"}], "\" \"", 
           StyleBox[
            DynamicModuleBox[{Typeset`var$$ = False}, 
             StyleBox[
              PaneSelectorBox[{False -> TagBox[
                  GridBox[{{"\"Our World\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                  GridBox[{{"\"Our World\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "Elementary School K-2 Science"}], "\" \"", 
                    StyleBox[
                    "\"Elementary School K-2 Science\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "Elementary School 3-5 Science"}], "\" \"", 
                    StyleBox["\"Elementary School 3-5 Science\"", FontSize -> 
                    12, Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Middle School Science"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Middle School Science\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Everyday Life"}], "\" \"", 
                    StyleBox[
                    "\"Everyday Life\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Geography"}], "\" \"", 
                    StyleBox[
                    "\"Geography\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Geometric Models"}], "\" \"", 
                    
                    StyleBox[
                    "\"Geometric Models\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "History"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"History\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"History\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "Classic Science Experiments"}], "\" \"", 
                    StyleBox[
                    "\"Classic Science Experiments\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Euclid's Elements"}], "\" \"", 
                    StyleBox[
                    "\"Euclid's Elements\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Greek Mathematics"}], "\" \"", 
                    StyleBox[
                    "\"Greek Mathematics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "International Relations"}], 
                    "\" \"", 
                    StyleBox[
                    "\"International Relations\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Linguistics"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Linguistics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Linguistics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "School Language Arts"}], 
                    "\" \"", 
                    StyleBox[
                    "\"School Language Arts\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Textual Analysis"}], "\" \"", 
                    
                    StyleBox[
                    "\"Textual Analysis\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Machines"}], "\" \"", 
                    StyleBox[
                    "\"Machines\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Natural Forms"}], "\" \"", 
                    StyleBox[
                    "\"Natural Forms\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Navigation"}], "\" \"", 
                    StyleBox[
                    "\"Navigation\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Solar System"}], "\" \"", 
                    StyleBox[
                    "\"Solar System\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"]}, 
               Dynamic[Typeset`var$$], Alignment -> Automatic, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, ImageSize -> 
               Automatic], Deployed -> False, StripOnInput -> False], 
             DynamicModuleValues :> {}], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Programming Functionality"}], "\" \"", 
           
           StyleBox[
            DynamicModuleBox[{Typeset`var$$ = False}, 
             StyleBox[
              PaneSelectorBox[{False -> TagBox[
                  GridBox[{{"\"Programming Functionality\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                  GridBox[{{"\"Programming Functionality\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox["3D Graphics", {False, "3D Graphics"}], 
                    "\" \"", 
                    StyleBox[
                    "\"3D Graphics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Version 7 Features"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Version 7 Features\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Short Programs"}], "\" \"", 
                    StyleBox[
                    "\"Short Programs\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"]}, 
               Dynamic[Typeset`var$$], Alignment -> Automatic, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, ImageSize -> 
               Automatic], Deployed -> False, StripOnInput -> False], 
             DynamicModuleValues :> {}], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Physical Sciences"}], "\" \"", 
           StyleBox[
            DynamicModuleBox[{Typeset`var$$ = False}, 
             StyleBox[
              PaneSelectorBox[{False -> TagBox[
                  GridBox[{{"\"Physical Sciences\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                  GridBox[{{"\"Physical Sciences\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Astronomy"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Astronomy\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Astronomy\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Astronomy"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Astronomy\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Solar System"}], "\" \"", 
                    StyleBox[
                    "\"Solar System\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Chemistry"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Chemistry\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Chemistry\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Chemistry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Chemistry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Chemical Kinetics"}], "\" \"", 
                    StyleBox[
                    "\"Chemical Kinetics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "General Chemistry"}], "\" \"", 
                    StyleBox[
                    "\"General Chemistry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Inorganic Chemistry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Inorganic Chemistry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Organic Chemistry"}], "\" \"", 
                    StyleBox[
                    "\"Organic Chemistry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Physical Chemistry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Physical Chemistry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Earth Science"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Earth Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Earth Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, 
                    "High School Earth and Environmental Sciences"}], "\" \"", 
                    StyleBox[
                    "\"High School Earth and Environmental Sciences\"", 
                    FontSize -> 12, Editable -> False, StripOnInput -> 
                    False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Meteorology"}], "\" \"", 
                    StyleBox[
                    "\"Meteorology\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "History of Science"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"History of Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"History of Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "Classic Science Experiments"}], "\" \"", 
                    StyleBox[
                    "\"Classic Science Experiments\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Classic Scientific Images"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Classic Scientific Images\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Materials Science"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Materials Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Materials Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    "Crystallography", {False, "Crystallography"}], "\" \"", 
                    StyleBox[
                    "\"Crystallography\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox["Physics", {False, "Physics"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Physics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Physics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Physics"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Physics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Acoustics"}], "\" \"", 
                    StyleBox[
                    "\"Acoustics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Astrophysics"}], "\" \"", 
                    StyleBox[
                    "\"Astrophysics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "College Physics"}], "\" \"", 
                    StyleBox[
                    "\"College Physics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Electromagnetism"}], "\" \"", 
                    
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Electromagnetism\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Electromagnetism\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Electrostatics"}], "\" \"", 
                    StyleBox[
                    "\"Electrostatics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Fluid Mechanics"}], "\" \"", 
                    StyleBox[
                    "\"Fluid Mechanics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Gravitation Theory"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Gravitation Theory\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Mechanics"}], "\" \"", 
                    StyleBox[
                    "\"Mechanics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Optics"}], "\" \"", 
                    StyleBox[
                    "\"Optics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Particle Physics"}], "\" \"", 
                    
                    StyleBox[
                    "\"Particle Physics\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Quantum Physics"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Quantum Physics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Quantum Physics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Quantum Mechanics"}], "\" \"", 
                    StyleBox[
                    "\"Quantum Mechanics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Statistical Mechanics"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Statistical Mechanics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Statistical Mechanics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Chemical Kinetics"}], "\" \"", 
                    StyleBox[
                    "\"Chemical Kinetics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Thermodynamics"}], "\" \"", 
                    StyleBox[
                    "\"Thermodynamics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Waves"}], "\" \"", 
                    StyleBox[
                    "\"Waves\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"]}, 
               Dynamic[Typeset`var$$], Alignment -> Automatic, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, ImageSize -> 
               Automatic], Deployed -> False, StripOnInput -> False], 
             DynamicModuleValues :> {}], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Systems, Models & Methods"}], "\" \"", 
           
           StyleBox[
            DynamicModuleBox[{Typeset`var$$ = False}, 
             StyleBox[
              PaneSelectorBox[{False -> TagBox[
                  GridBox[{{"\"Systems, Models & Methods\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                  GridBox[{{"\"Systems, Models & Methods\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Cellular Automata"}], "\" \"", 
                    StyleBox[
                    "\"Cellular Automata\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Chaos Theory"}], "\" \"", 
                    StyleBox[
                    "\"Chaos Theory\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Discrete Models"}], "\" \"", 
                    StyleBox[
                    "\"Discrete Models\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Experimental Methods"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Experimental Methods\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Fractals"}], "\" \"", 
                    StyleBox[
                    "\"Fractals\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Game Theory"}], "\" \"", 
                    StyleBox[
                    "\"Game Theory\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Generation of Form"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Generation of Form\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Multi-agent Modeling"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Multi-agent Modeling\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Networks"}], "\" \"", 
                    StyleBox[
                    "\"Networks\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Random Processes"}], "\" \"", 
                    
                    StyleBox[
                    "\"Random Processes\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Substitution Systems"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Substitution Systems\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Trees"}], "\" \"", 
                    StyleBox[
                    "\"Trees\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"]}, 
               Dynamic[Typeset`var$$], Alignment -> Automatic, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, ImageSize -> 
               Automatic], Deployed -> False, StripOnInput -> False], 
             DynamicModuleValues :> {}], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Creative Arts"}], "\" \"", 
           StyleBox[
            DynamicModuleBox[{Typeset`var$$ = False}, 
             StyleBox[
              PaneSelectorBox[{False -> TagBox[
                  GridBox[{{"\"Creative Arts\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                  GridBox[{{"\"Creative Arts\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "School Art and Design"}], 
                    "\" \"", 
                    StyleBox[
                    "\"School Art and Design\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Visual Patterns"}], "\" \"", 
                    StyleBox[
                    "\"Visual Patterns\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Architecture"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Architecture\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Architecture\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Geometric Models"}], "\" \"", 
                    
                    StyleBox[
                    "\"Geometric Models\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Art"}], "\" \"", 
                    StyleBox[
                    "\"Art\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Color"}], "\" \"", 
                    StyleBox[
                    "\"Color\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Generation of Form"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Generation of Form\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Graphic Design"}], "\" \"", 
                    StyleBox[
                    "\"Graphic Design\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Iconography & Typography"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Iconography & Typography\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Music"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Music\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Music\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "School Music"}], "\" \"", 
                    StyleBox[
                    "\"School Music\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Audio"}], "\" \"", 
                    StyleBox[
                    "\"Audio\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Music Theory"}], "\" \"", 
                    StyleBox[
                    "\"Music Theory\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Patterns"}], "\" \"", 
                    StyleBox["\"Patterns\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"]}, 
               Dynamic[Typeset`var$$], Alignment -> Automatic, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, ImageSize -> 
               Automatic], Deployed -> False, StripOnInput -> False], 
             DynamicModuleValues :> {}], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {"\<\"\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJy9Wetv47gRb283sfOw89hkH3fXgxZF74DijBY9FAX6Teske8bm4Ua5PaDfGImx2aVEla\
K86/3rO0NJ1kiUne2H9lNiDjkcDmd+8xvK3xsFW4FZSh5s3+\
Qmzc0o6I3nPPzAo4cn2dNLkZlg76cz761m6VyEWXAw1svMMCnVDIeWQW86X2YgAUUTw+\
PMB5V7V8zMecwMjPv7o+A4COdKSY8OvxwFr88lj3limF565Yx3o7/QWQ+/KWzonPvT6K/\
dc19diSiS3HN3ree8+FnM5h0z/P4oOKUyX874vWbepF57QuVvuYq50cta/\
EPn8onHksi702KmkvaKhjFTzUMmw1zmxNw/0hnjUmw1+gmTS7C8w5A/\
NwyJFiwJedRcfSkSznRlZb30O7r0QiTC8G4/PqcTAwPSrDnhqa85Ubxz/u8cJqmETDk9/\
5SqBC5XMNgsT8KW/\
GUlL21WM6aFmccZvZJlyvW9kuCIDg27kwjVG8HJ4P4k4WCMbA33J4nhM67J0PFEa2s02Hedx/\
cN4X4x4r1hGVVzMmWa4YWARR1n3plyLUDMdT321VTUP/amSi4hUsAnGR3VfOTc1mCKulzTDm/\
XW33Lu4ZfkADtduX2eyXzmNcDvdIcf+fxzPlfpMbBWMWp5J/cwwzXRXe3bw/+\
kbMI7xnOrTSNruOVHzscMnzPQ6M6dnnmp6kUkHEUXnrgJBjX6pOIrVLvipu5ir7E7GM4IUQNuKDI+\
kyQVc9uIAGKKPNueQYKwjm57pvUiFh8thPq4aMg5eGarOv/yhZcckP3WGHH9ysL/IP/\
Pzr1x04UHFZR4Hpm7wyctoCTL2h+\
Pj8TDw9cl6jTkaFHPzMdqwRsd1XuWIzQjfB5fpVL2AOgid1D8XFNHNiUc5XBuGQGzg5RxhvZKyBqks\
QLcv3AQiraDuBIdGDTRQ7KAL0QXNI4OzkTWah5E9mx/n0x+A/GKhLJzLubc0WvFsbje5Ew2LUxf9/\
SCGd6/5qbj0p/oA4OAJp50jz0nZCwWz2wdac5nYB1wqIq0IQ1Zb9fxaF/+\
mgdPyzjDiJgnOtG8BzXIncdEbo3d7QhI4ZjG24BdzC3vf9pI3hdTf1zKUXaqEevylmwwZ1moB0grh3\
y36BDuB6doQ+zAvFc5c9IrXWlB9c8w2CeMgPFrQGUU8kS3mUtwvGsVR5haM6jBp5OtfoX+\
mbRpWTvlj9Ix3PDAMyMuvZ0r2YHKhBLZrKBEj/DH1VgLs2Sp3CT53kIun/IvJKakmVfX6g8iUo0Vg/\
dsXj0FsL3wxrZL0mm5AL9qBXACa1Gg5JwFGnkP1lLQdbRgq9veaqhRCSmttDlDtNcN5Fh55G43wDBj\
8Xry7NlwmLr5QDaCziuAxKAHSpPneG9d4kyzuhxbTeoBMIoQhKhdjaP0bWLBqD071SqoLOhlt1ywMi\
q/FN3oN/fKgnE0rP0gAArmdZxf5vudrem0Bhjj7LrwRkzrKvmoWp2D4Bp6A3dQlVV9uAQ+\
Y1Y2cPLy4uAwJ134aZVwbLx4p/5uVH2REAuWAY4Rf22rg48J0o77/\
2wmMA7avzRSlT1niQWoAlNTdmBEm3WGbgOojtrEJ3DScxmvDp4w/\
iNrKo2MAgF1iMkcN826E5rwn9x+k1HPLBnCYzOQwOJSHOprMgYDpig4RxYEoUxiNhcN49/\
WtwMJjoxqvOYRfqRpdfvAu9P3q9KPkA/s3LDFprPpcwlErQiOChDu9AsNE16vbYwfBsIBA6v6S/\
HkpMgv4fwN7mlzY74qHiIwJWFjZm/Dd7wM6OxrVj6X7X7k0pCAgvKBaucQFw6hnSG/\
wBtt1tKVhJ6rTiGhryDm2ljPk+ApneuezZJlJ4xpABdWm/Wy45XR+8QDs6ZNvPVxYEXfqQHKKTIts+\
ThQCHlPSpciKBCOhUIIpaAHlcVEgbW2SPb8aSQaKF1ZhXczNKShqzjHiAf22mUpcBmsJKiKWV/t+\
OnHco0o+WD1L+AKkK7R6LcXKtfqjyFqDu26hI21OhyZSSI4K0JYfnyDo0xP8MLzuL0bphOZiZVl0/\
uJA58JErHs7xMimlBAxYiCL6HSDd6ViwjS1dw5IpXKUIZYeR2NomJo8rCdp4VI116D5d1RosepUc73\
VTcA/BbGiZoqKWE8EWtpK0al2KB16nKZSb3hth4wrhtXFp5TilEhzaUpWWYerID4EnfISI7qhxR1cK\
rsUilrNscM0AZ7GBarb+AyStxp3f+\
6dqjQCazwCYkZ1WcQoUYXfKdcjTJtzuTrMlHK9lQTHohF7vPGzN7F/xSITgfpJIb/\
IMywB25oGynWAJkOjRIx+KCDam0q1S/\
WoliTbYEV9HCpLzuoEWlcQiBlQi1lA2hHKkFa8mUYHoFvQcHU8u2UeK6gof6AisY+y+\
wP5bJ1WpsA10k/gfVF6oggzRvyJSpcjkUaOJ3rsEYpC3Kdar0pE/\
elcq4hI9XD7Z4NP2piK4P54z5TLZg7rvtgpJhWs2sO2HoY6iuveWAcN36G9RZSyUACxjSFN2iu8UIw\
BZiGtrQZMDu834Btr4SE12O/RkBsEGZwS2+\
L13B8iSFHkPrnxR1eXy2cytQCcr8CF6aAaKhVgjw94aAFm6HLWA6rZWjJfhWOgwF8Y745mYNZ7N4Ce\
TnXRyPcJv4KB9l8Y9rzSsO+3wmkHrs/IgUXar7lWLdjgG4/m2fEgA0rd0vPjt3OQauJ+WEd7Q77o/\
2DiY0jEPP9Y4806bH2oc+eB8wfUyYksPCwaxCri0Q/7r9412WvVKioKF5st4yabeflPb/\
jguUYzBOzgpz37JYBjDw9d0s8M7/gmgu6s16YiZdUVs9xqoxazF+ddw3cHYtruLwhJ/t4ZN+\
G1Rv50NB+9Fhia6xH7f12AixCi2MIjbGy7pCagnwAF8S5FPIxsRbVi2T45lLydYcIpIQbhZpk7YbF1\
B+QttM199DMQBMqGVJPtW7r5huqfffScirBYXeYJtw3cVDc0/f5a8KKD144Ittb9fI/\
u7VydUrf8Pa2fbKIyBJABzrue/Xju/en1/\
PPP64HkPz0Ubk7SozxMohFkz2nvllsQp9cakxAIuwcXEMZaF6gUbP8zZ1y36/\
ZlExHtum1zvb94FZ60eeRjMFURrqZYmDQxBvptlsH2nUvvZundj2VmW7azeOPAjOH7lag0OrV9TKN3\
WfugfkiXWP455PYZOQsWTBDrYbOsCijSvB7EoZk+vVcLth7dM5cAJIRp5MDjjMextitAuP2ZBIx6V+\
4+f/Ae45cVA"},
 CellTags->{"CheckboxCell", "Topics", "Topics-Checkboxes"},
 CellID->87639950,ExpressionUUID->"a24757e7-0fa7-4579-adb4-731b27420112"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Related Demonstrations",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"RelatedDemonstrations", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Enter any additional information that you would like to \
communicate to the reviewer here.", 
           StyleBox["\n", FontSize -> 4]}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoRelatedDemonstrations"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "0e6b235d-a170-49b1-89ff-40d4aac0a284"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "RelatedDemonstrations"},
 DefaultNewCellStyle->"Text",
 CellTags->{
  "Related Demonstrations", "RelatedDemonstrations", "TemplateCellGroup"},
 CellID->1132753,ExpressionUUID->"56fc461d-af89-42d0-ad8f-fe57c0319ca9"],

Cell["Link to a related demonstration", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->450624928,ExpressionUUID->"58a64f65-43db-4a43-9ca9-9035b1cfe149"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "External Links",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"ExternalLinks", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Provide hyperlinks (not just bare URLs) to any relevant \
resources.wolfram.com pages, with the page title as the linked text. Links to \
", 
           ButtonBox[
           "NKS | Online", 
            BaseStyle -> {"Hyperlink", FontColor -> RGBColor[0.4, 0.45, 0.5]},
             ButtonData -> {
              URL["http://www.wolframscience.com/nks"], None}], 
           " should use the section title, not a page number. Links to \
non-Wolfram sites go in the Details section.", 
           StyleBox["\n", FontSize -> 4]}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoExternalLinks"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "29a786ce-d6e9-442b-89e5-bced7b609b55"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "ExternalLinks"},
 DefaultNewCellStyle->"Item",
 CellTags->{"External Links", "ExternalLinks", "TemplateCellGroup"},
 CellID->843468725,ExpressionUUID->"3f14a5bc-45a6-4fd4-a3ee-974cbc711780"],

Cell["Link to external information", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->21681708,ExpressionUUID->"6138c95b-1b75-43a7-b8da-a8cd98051218"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Related Symbols",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"RelatedSymbols", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "List the names of published resource objects from any Wolfram \
repository that are related to this function.", 
           StyleBox["\n", FontSize -> 4]}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoRelatedSymbols"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "7a9f0bbc-d04b-493c-944c-597f53a774d6"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "RelatedSymbols"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Related Symbols", "RelatedSymbols", "TemplateCellGroup"},
 CellID->899564547,ExpressionUUID->"ade08b8f-3c84-4712-840b-805c21a959c3"],

Cell["SymbolName (documented Wolfram Language symbol)", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->232771109,ExpressionUUID->"6e2d7da2-8a3b-47d2-8015-248153bebe2f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Published Date",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"PublishedDate", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{"If known, the date Demonstration was published."}], 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoPublishedDate"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "3364e475-eee2-441f-a60d-179c8feaac6f"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "PublishedDate"},
 DefaultNewCellStyle->"Text",
 CellTags->{"Published Date", "PublishedDate", "TemplateCellGroup"},
 CellID->364555554,ExpressionUUID->"1e86cdf8-38f6-4e0f-906f-409254360c6f"],

Cell["2011-05-02", "Text",
 TaggingRules->{},
 CellID->612364796,ExpressionUUID->"7f90ab6d-8168-43ce-bbfe-0050c44718a2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Compatibility",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Compatibility", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Specify any known compatibilities for your demonstration to ensure \
it is discoverable on the correct platforms.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibility"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "f3d5586b-f283-48d4-8bb0-dd033793574f"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Compatibility"},
 CellTags->{"Compatibility", "TemplateCellGroup"},
 CellID->618273920,ExpressionUUID->"217d591c-9a2c-481a-b82b-8727a4905f4b"],

Cell[CellGroupData[{

Cell[TextData[{
 "AR Support",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityARSupport", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Specify whether your demonstration is expected to be supported \
through AR (Augmented Reality).", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityARSupport"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "81b67040-8003-4482-8cf4-71b89dd1be50"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityARSupport"},
 DefaultNewCellStyle->"Text",
 FontSize->16,
 CellID->375137771,ExpressionUUID->"8368e5da-33bb-4d3f-a313-6ada7d6f9ed7"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, False}], "\" \"", 
           StyleBox[
           "\"Supported in ARPublish (Augmented Reality)\"", FontSize -> 12, 
            Editable -> False, StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJw9j8tOwzAQRSlKKOW1ZJ0lVPJHmCCkSIhWGX7ATSfUwvZYnvEif4/\
NazlH9zFXXyloQRaHcLHLErMoWPcnnD7xOJ9x82q5kHYQ9Dyvfu75nJsxF8cWcoyUBI+dDZ0e9/\
ngLJ+6B50/PIbKRzTOyvLI7YtxjAou94kiJlngvicfjdiDrQo9/oaV/l0US4F5o7OQL5KpPkUu+\
8D9SsHdULJTTCimCmH9ROTQBAXXfeZiGUIZ8l/5B+\
sGbt4oFHYzIlNOE74vEeH2GX0plPSd9wX8smDe"},
 CellTags->{
  "CheckboxCell", "CompatibilityARSupport", 
   "CompatibilityARSupport-Checkboxes"},
 CellID->203048737,ExpressionUUID->"cbf54979-de6f-4ec4-93e9-bb56899db3c0"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Wolfram Language Version",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityWolframLanguageVersionRequired", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Enter required Wolfram Language Version (e.g. 12.1+).", 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {
       "SectionMoreInfoCompatibilityWolframLanguageVersionRequired"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "bc9f68fb-2561-49b5-b3a1-fcd6fe5a95f7"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{
  "TemplateGroupName" -> "CompatibilityWolframLanguageVersionRequired"},
 DefaultNewCellStyle->"Text",
 FontSize->16,
 CellID->904163252,ExpressionUUID->"cb793d50-510d-4050-b7e3-9c8b2e7dc7f0"],

Cell["6", "Text",
 TaggingRules->{},
 CellTags->"ScrapeDefault",
 CellID->639559915,ExpressionUUID->"b799f96f-ef70-4f98-a74e-1c2a3716dff6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Cloud Support",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityCloudSupport", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Specify whether your demonstration is expected to work in the public \
cloud.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityCloudSupport"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "16d0fd43-0a64-4fe4-bdca-9f78503e1c8b"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityCloudSupport"},
 DefaultNewCellStyle->"Text",
 FontSize->16,
 CellID->180966586,ExpressionUUID->"6d153275-abeb-41d5-b00c-dd6e668dca64"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[True, {False, True}], "\" \"", 
           StyleBox[
           "\"Supported in cloud\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxFjkuOwjAQRAUKf4bF7NhxgRwCjJAioQHRXCAkjbCw3Za7e5Hb4yDQbEvvVdV2XsIIpH\
MI45NKVClhYh7YPLG9D7g4WhYurkkxc5Wg5296H3Jx0ez9gsZISbDd2LBpHGn7NabnRBGTdLA25GMt\
9madlc700EfLe6colgLzbKtCPlNNf4Kc+sBmUMKqCoIpJpS6B2GyI3JYhxIWRjkrVcjHeXSoHeN/\
2L/l4o9CzpYXZNLU4LWLCD979HlQ0rvvBXKCW6E="},
 CellTags->{
  "CheckboxCell", "CompatibilityCloudSupport", 
   "CompatibilityCloudSupport-Checkboxes"},
 CellID->19443273,ExpressionUUID->"ac66556f-0951-469a-8794-656bdd1fc466"]
}, Closed]]
}, Open  ]]
}, Closed]]
}, Open  ]]
},
TaggingRules->{
 "ResourceType" -> "Demonstration", "ResourceCreateNotebook" -> True, 
  "TemplateVersion" -> "2024.05.27", "CreationTimestamp" -> 
  3.926279855542939`16.346556240966578*^9, "UpdatedTimestamp" -> 
  3.926279855542999`16.34655624096659*^9, "CompatibilityTest" -> 
  HoldComplete[
    BinaryDeserialize[
     BaseDecode[
     "OEM6eJzVWFtv2zYUri+\
5IPEyNECB9a0PeciCbR2GAduaXerJSeohSZPQ6XNo6UgRTJMqSaXxv98hJTm2I7mS7WCdHxJapL7z8\
dz40X5N7TpiGImYe0f3kQSlQsH9mlq7jEPQfj13uq7qXR//\
Ntrcw39rRx9jytTO3geQZv48HvZBSt9+9t+aFYQO4RIHLSeWErj+QFkM/\
jO1e3SHI6rNW0JDX4gBrmqehkqrVo8GQciDq5iBIq0rUCKWLvRGEZBmh2qKNJvvuQuFLNf+\
ZsIdmGUJ4J4juIZ7fUH1rd8o2vk5gKfIfmaPjJSGocNCpH3TAT/\
k4STdm4dXXhlS2Wt5S1XzPGYMif3weDI1cAUBUgWJTP0wiKV1zXi7f5UldQWRUKEWcpQAJjgqBWrY+\
NXU5jENWSwxMjX11QV1GeguV5oyRr4pYuivL+Lshdza6ompyGwRLTEf/hGhsdc4o5HdQ8xd86a/\
llgmLwuda8lRZdJ6O8EiEQu1eUyY0E6N1G5I/c0fEw/qh1uWPOavIt+WJX/\
gNwu81CBg7G11xCdui0Cp38qiZoP3scYwgmcKagsjzagLbcyrFcJum6LrAKMj8BB3+\
51gHgYSE5OrP8sCX8jwDgFv7pK2cCIBv0m1cc1V2g5yvNGpik6jCLh3zW8p9xh4DjCm5jpmVRbm+\
Ai/VvaSi7DY8VIE8rwHQ9yABmPuRIo4Wh4Ua7fVZmaE7eAOE/\
qFg4sCIUNQ3zu34A764h4f7zw8NtZJK5uz33bQHo2ZtvXNdQ5T8nX2iEBSm7mhLt3NxoFQg564jjwc\
p32/OMorAJ8KcAMfbGQlsHnCRJ+\
ym1tzpE16VP1S1uwJ6Heh5wFPGlH5cj2m3B05tyJ0oRNSJoJJYq2UmNR4SuL5ik2Z8kEedYqzz+\
2sOZMIfIwBd012Uw8wLzN4icfFeL/\
TBibAsiNlrSdjW9pLdokqh102yJIulSHqp6oUeL9KjaVSZtbqlIcyf57Dp7E/\
c32cFIg6q0p5L1ZwCgF1R92AC5l0pyzWqmmikV98h2Ut5eDOFN68MlzSzLweW1frp/\
imbYzHVf0WgM7a2LTFlZUSlsQ2Mgfsi1SBegq6hdWIEtqq5nWzutsxdWn5qY0u9uwAM3Wzy62x0Wec\
3BizLth4Cly672U7UuOT4RFs/8HbY/MTNmvqqPIxSLngoUvZhRQRoLesnluU8wTR/\
EtEPW2GrbZSwg2t9r5U7cq1HaVsyQjpj4YmhzbbVoz0xGrgbJqQHWKBzkBTz9wP0hsY2XRCnVxAXiY\
rXl+BD9Jk96ts6qG7rCYqE0ZnaCW3p/EdKrmCNk/R54+uns/s5+\
At3gmWuazMuUlU0PcHhSjVBH01nHkK/udCJLwEDmgAxMWAVNPt14WYyWmXlweJsYWF/JOZnK/\
sS3qvjJ5fCOoLU/EXy0ehgqx/CmuL6Pz9Qh6zwr64bP8nSn6hboEAP362X81KZ2fp4FoF/\
7oQ5ikkezHpKfcsLNS/K8RfTplXxS0rxX8v54//VoAvRfILkt2/\
Fu6DuJJG2H9mK2QZ3X1Y8rjKVdsLU11Qbnfn/Mae/TiO1RZHs2bny+6Vwq5Sfi8TnHKi+1+K4NOh"]\
]], "DefinitionNotebookFramework" -> "DefinitionNotebookClient", 
  "RuntimeConfiguration" -> {
   "Contexts" -> {
     "DemonstrationResource`", "DemonstrationResource`DefinitionNotebook`"}, 
    "DefaultContentMethod" -> "Tagged", "HintPods" -> True, "LoadingMethod" -> 
    "Paclet", "PacletName" -> "DemonstrationResource"}, "ToolsOpen" -> True, 
  "SubmissionReviewData" -> {"Review" -> False}},
CreateCellID->True,
FrontEndVersion->"14.1 for Mac OS X x86 (64-bit) (May 28, 2024)",
StyleDefinitions->Notebook[{
   Cell[
    CellGroupData[{
      Cell[
       StyleData[StyleDefinitions -> "Default.nb"]], 
      Cell[
       StyleData[All, "Working"], WindowToolbars -> {}, DockedCells -> {
         Cell[
          BoxData[
           TemplateBox[{}, "MainGridTemplate"]], "DockedCell", 
          CellMargins -> {{-10, -10}, {-8, -8}}, CellFrame -> 0, Background -> 
          RGBColor[0.7508, 0.17868, 0.085283], CellTags -> {"MainDockedCell"},
           CacheGraphics -> False], 
         Cell[
          BoxData[
           TemplateBox[{}, "ToolsGridTemplate"]], "DockedCell", 
          TaggingRules -> {"Tools" -> True}, 
          CellTags -> {"ToolbarDockedCell"}, 
          CellFrameMargins -> {{0, 0}, {2, 2}}, CellFrame -> {{0, 0}, {1, 0}},
           CacheGraphics -> False, CellOpen -> Dynamic[
            CurrentValue[
             EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]]]}, 
       PrivateNotebookOptions -> {
        "FileOutlineCache" -> False, "SafeFileOpen" -> "IgnoreCache"}, 
       CellLabelAutoDelete -> False, 
       CodeAssistOptions -> {"AutoDetectHyperlinks" -> False}, 
       AutoQuoteCharacters -> {}, PasteAutoQuoteCharacters -> {}]}, Open]], 
   Cell["Hint Styles", "Section"], 
   Cell[
    StyleData["MoreInfoText", StyleDefinitions -> StyleData["Text"]], 
    FontColor -> GrayLevel[0.25]], 
   Cell[
    StyleData["ErrorText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, Inherited}, {10, 10}}, 
    CellElementSpacings -> {"CellMinHeight" -> 0, "ClosedCellHeight" -> 0}, 
    FontWeight -> Bold, FontColor -> RGBColor[1, 0, 0]], 
   Cell[
    StyleData["WarningText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, 35}, {0, 0}}, FontSize -> 
    14, GridBoxOptions -> {BaseStyle -> {}}], 
   Cell["Template Boxes", "Section"], 
   Cell[
    StyleData["MoreInfoOpenerIconTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> GraphicsBox[{
            Thickness[0.090909], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dp8u+SYJzFB0kGQJ49MtUnBYIKV/V4UNRis5GHKskYl6AlOnDNUHM0cFaq4I
nD/niMKGogx+OB+oO8X6Phtcf/+hrxox/Qxw80HKftZ9sYfZ/7BKZJ37w1f2
MPfB+DD3w/h+SQIRlluE4foh9vDBzYfQHHD7izMmvq2xZ4K7r9CW6/rigr/2
MPfD+DD/wfgw/8P0w8IHZj4s/GD2w8IX5j708AcA2Xetpg==
               "], CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 3.25}], 
              Thickness[0.045818], 
              RGBColor[0.62744, 0.62744, 0.62744, 1.]}, StripOnInput -> 
             False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQ3b48/JRRi4jD3qBpin2m8g5n6j32194VhvNZnvdo
vPUVdoh2sntxM0feQfiT4/m0q0IOQNnSwtvyDmxCIvbHYoQcMhnyG1lUFRyk
eR/oTlAAym/iKVyTjeAf2aiXt/gggt+odqhtubgiXP+k00CLYxXh5mdrf5t+
d7Ii3P5LDPeYOE8pwt33vfTBHMGnig4w98P4j5fOPqJgIArn539oPRlyUBSu
/9OGgOxZ5mJw88sKgS5aKwa3XzOm/9DXF2Jw98H4MPfD+DD/wfTD/A8zHxY+
MPth4QdzHyx80cMfAIsMpwk=
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQXTFnkfJOGwmHsNp125Lq+R1g/G8aMf2HvvI4KP39
VvrgjgAGH6b+c19wicp0IQeBKrPVduICcL6EWjDr4ksCqPLTBeH8211/U7+n
CMH5S+7v45tjLAznX773gHvySwS/qdhtyrc2ETj/04aA7FnfReH8RxHi2y8e
EIPzNUHOzRCH8x8vnX1E4QOCP+/98mPe5RJw/o9goAoWSTj/6vMs7W/TJR0O
X9ZOlVwk4PB2no3OlVsI/jKgcRs+STlonhY4vstCzCFoh1zr64syDkBXssXP
EHO4WvFSzbADwa9JNAo1yJKA82H+gfFh/oXxA29JA7Ug+GY2e4OmJQrB+f83
VX/aMEEQzrerjFhhelYAzofFB3r8AgApYdcE
                "]}]}, {
              FaceForm[
               RGBColor[0.62744, 0.62744, 0.62744, 1.]]}, StripOnInput -> 
             False]}, ImageSize -> {11., 11.}, 
           PlotRange -> {{0., 11.}, {0., 11.}}, AspectRatio -> Automatic], 
         True -> GraphicsBox[{
            Thickness[0.090909], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dp8u+SYJzFB0kGQJ49MtUnBYIKV/V4UNRis5GHKskYl6AlOnDNUHM0cFaq4I
nD/niMKGogx+OB+oO8X6Phtcf/+hrxox/Qxw80HKftZ9sYfZ/7BKZJ37w1f2
MPfB+DD3w/h+SQIRlluE4foh9vDBzYfQHHD7izMmvq2xZ4K7r9CW6/rigr/2
MPfD+DD/wfgw/8P0w8IHZj4s/GD2w8IX5j708AcA2Xetpg==
               "], CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 3.25}], 
              Thickness[0.045818], 
              RGBColor[0.5, 0.5, 0.5, 1.]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dp8u+SYJzFB0kGQJ49MtUnBYIKV/V4UNRis5GHKskYl6AlOnDNUHM0cFaq4I
nD/niMKGogx+OB+oO8X6Phtcf/+hrxox/Qxw80HKftZ9sYfZ/7BKZJ37w1f2
MPfB+DD3w/h+SQIRlluE4foh9vDBzYfQHHD7izMmvq2xZ4K7r9CW6/rigr/2
MPfD+DD/wfgw/8P0w8IHZj4s/GD2w8IX5j708AcA2Xetpg==
               "]]}, {
              FaceForm[
               RGBColor[0.5, 0.5, 0.5, 1.]]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQ3b48/JRRi4jD3qBpin2m8g5n6j32194VhvNZnvdo
vPUVdoh2sntxM0feQfiT4/m0q0IOQNnSwtvyDmxCIvbHYoQcMhnyG1lUFRyk
eR/oTlAAym/iKVyTjeAf2aiXt/gggt+odqhtubgiXP+k00CLYxXh5mdrf5t+
d7Ii3P5LDPeYOE8pwt33vfTBHMGnig4w98P4j5fOPqJgIArn539oPRlyUBSu
/9OGgOxZ5mJw88sKgS5aKwa3XzOm/9DXF2Jw98H4MPfD+DD/wfTD/A8zHxY+
MPth4QdzHyx80cMfAIsMpwk=
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQXTFnkfJOGwmHsNp125Lq+R1g/G8aMf2HvvI4KP39
VvrgjgAGH6b+c19wicp0IQeBKrPVduICcL6EWjDr4ksCqPLTBeH8211/U7+n
CMH5S+7v45tjLAznX773gHvySwS/qdhtyrc2ETj/04aA7FnfReH8RxHi2y8e
EIPzNUHOzRCH8x8vnX1E4QOCP+/98mPe5RJw/o9goAoWSTj/6vMs7W/TJR0O
X9ZOlVwk4PB2no3OlVsI/jKgcRs+STlonhY4vstCzCFoh1zr64syDkBXssXP
EHO4WvFSzbADwa9JNAo1yJKA82H+gfFh/oXxA29JA7Ug+GY2e4OmJQrB+f83
VX/aMEEQzrerjFhhelYAzofFB3r8AgApYdcE
                "]}]}, {
              FaceForm[
               RGBColor[0.99998, 0.99998, 0.99998, 1.]]}, StripOnInput -> 
             False]}, ImageSize -> {11., 11.}, 
           PlotRange -> {{0., 11.}, {0., 11.}}, AspectRatio -> Automatic]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["MoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        DynamicModuleBox[{
         RSNB`mPosRegion$$, RSNB`attachPos$$, RSNB`offsetPos$$, 
          RSNB`horizontalRegion$$, RSNB`verticalRegion$$, 
          RSNB`chooseAttachLocation$$}, 
         TagBox[
          TemplateBox[{
            TemplateBox[{}, "MoreInfoOpenerIconTemplate"], 
            "\"Click for more information\""}, "PrettyTooltipTemplate"], 
          EventHandlerTag[{"MouseDown" :> AttachCell[
              ParentBox[
               EvaluationBox[]], #2, 
              RSNB`chooseAttachLocation$$[], 
              RemovalConditions -> {"EvaluatorQuit", "MouseClickOutside"}], 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         DynamicModuleValues :> {{DownValues[RSNB`mPosRegion$$] = {HoldPattern[
                RSNB`mPosRegion$$[]] :> RSNB`mPosRegion$$[
                Ceiling[MousePosition["WindowScaled"] 3]], HoldPattern[
                RSNB`mPosRegion$$[
                 Pattern[RSNB`reg, {
                   Blank[Integer], 
                   Blank[Integer]}]]] :> RSNB`reg, HoldPattern[
                RSNB`mPosRegion$$[
                 BlankNullSequence[]]] :> None}}, {
           DownValues[RSNB`attachPos$$] = {HoldPattern[
                RSNB`attachPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[RSNB`h$], 
                RSNB`verticalRegion$$[RSNB`v$]}}}, {
           DownValues[RSNB`offsetPos$$] = {HoldPattern[
                RSNB`offsetPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[4 - RSNB`h$], 
                RSNB`verticalRegion$$[4 - RSNB`v$]}}}, {
           DownValues[RSNB`horizontalRegion$$] = {HoldPattern[
                RSNB`horizontalRegion$$[1]] :> Left, HoldPattern[
                RSNB`horizontalRegion$$[2]] :> Center, HoldPattern[
                RSNB`horizontalRegion$$[3]] :> Right}}, {
           DownValues[RSNB`verticalRegion$$] = {HoldPattern[
                RSNB`verticalRegion$$[1]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[2]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[3]] :> Top}}, {
           DownValues[RSNB`chooseAttachLocation$$] = {HoldPattern[
                RSNB`chooseAttachLocation$$[]] :> 
              With[{RSNB`p$ = RSNB`mPosRegion$$[]}, 
                Apply[Sequence, {
                  RSNB`offsetPos$$[RSNB`p$], {-30, 30}, 
                  RSNB`attachPos$$[RSNB`p$]}]]}}}], BoxBaselineShift -> -0.5, 
        BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["InlineMoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        DynamicModuleBox[{
         RSNB`mPosRegion$$, RSNB`attachPos$$, RSNB`offsetPos$$, 
          RSNB`horizontalRegion$$, RSNB`verticalRegion$$, 
          RSNB`chooseAttachLocation$$}, 
         TagBox[
          TemplateBox[{
            TemplateBox[{}, "MoreInfoOpenerIconTemplate"], #4}, 
           "PrettyTooltipTemplate"], 
          EventHandlerTag[{"MouseDown" :> AttachCell[
              ParentBox[
               EvaluationBox[]], #2, 
              RSNB`chooseAttachLocation$$[], 
              RemovalConditions -> {"EvaluatorQuit", "MouseClickOutside"}], 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         DynamicModuleValues :> {{DownValues[RSNB`mPosRegion$$] = {HoldPattern[
                RSNB`mPosRegion$$[]] :> RSNB`mPosRegion$$[
                Ceiling[MousePosition["WindowScaled"] 3]], HoldPattern[
                RSNB`mPosRegion$$[
                 Pattern[RSNB`reg, {
                   Blank[Integer], 
                   Blank[Integer]}]]] :> RSNB`reg, HoldPattern[
                RSNB`mPosRegion$$[
                 BlankNullSequence[]]] :> None}}, {
           DownValues[RSNB`attachPos$$] = {HoldPattern[
                RSNB`attachPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[RSNB`h$], 
                RSNB`verticalRegion$$[RSNB`v$]}}}, {
           DownValues[RSNB`offsetPos$$] = {HoldPattern[
                RSNB`offsetPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[4 - RSNB`h$], 
                RSNB`verticalRegion$$[4 - RSNB`v$]}}}, {
           DownValues[RSNB`horizontalRegion$$] = {HoldPattern[
                RSNB`horizontalRegion$$[1]] :> Left, HoldPattern[
                RSNB`horizontalRegion$$[2]] :> Center, HoldPattern[
                RSNB`horizontalRegion$$[3]] :> Right}}, {
           DownValues[RSNB`verticalRegion$$] = {HoldPattern[
                RSNB`verticalRegion$$[1]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[2]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[3]] :> Top}}, {
           DownValues[RSNB`chooseAttachLocation$$] = {HoldPattern[
                RSNB`chooseAttachLocation$$[]] :> 
              With[{RSNB`p$ = RSNB`mPosRegion$$[]}, 
                Apply[Sequence, {
                  RSNB`offsetPos$$[RSNB`p$], {-30, 30}, 
                  RSNB`attachPos$$[RSNB`p$]}]]}}}], BoxBaselineShift -> -0.5, 
        BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["ClickToCopyTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> TagBox[
           GridBox[{{#, 
              ButtonBox[
               GraphicsBox[{
                 GrayLevel[0.85], 
                 Thickness[
                  NCache[2/45, 0.044444]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 18.}, {
                   9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 18.}, {12., 
                   18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {16.5, 4.5}, {
                   16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {15.75, 17.25}, {
                   15.75, 5.25}, {6.75, 5.25}, {6.75, 17.25}, {8.25, 17.25}, {
                   8.25, 18.}}, {{9.75, 17.25}, {12.75, 17.25}, {12.75, 
                   16.5}, {9.75, 16.5}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 14.25}, {
                  14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{8.25, 12.}, {
                  14.25, 12.}, {14.25, 11.25}, {8.25, 11.25}}, {{8.25, 
                  9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25, 9.}}, {{8.25, 
                  7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 6.75}}}]}, 
                ImageSize -> 12], ButtonFunction :> Null, 
               Appearance -> {
                "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
               Evaluator -> Automatic, Method -> "Preemptive"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}},
             AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], True -> 
         DynamicModuleBox[{RSNB`clickTime$$ = 0., RSNB`timeout$$ = 3.}, 
           TagBox[
            GridBox[{{#, 
               TagBox[
                ButtonBox[
                 DynamicBox[
                  ToBoxes[
                   Refresh[
                    If[AbsoluteTime[] - RSNB`clickTime$$ > RSNB`timeout$$, 
                    RawBoxes[
                    TemplateBox[{
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[0.65], 
                    Thickness[
                    NCache[2/45, 0.044444]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], True -> GraphicsBox[{
                    RGBColor[0.98824, 0.41961, 0.20392], 
                    Thickness[
                    NCache[2/45, 0.044444]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "\"Click to copy to the clipboard\""},
                     "PrettyTooltipTemplate"]], 
                    RawBoxes[
                    TemplateBox[{
                    GraphicsBox[{
                    RGBColor[0, 
                    NCache[2/3, 0.66667], 0], 
                    Thickness[
                    NCache[2/45, 0.044444]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], "\"Copied\""}, 
                    "PrettyTooltipTemplate"]]], UpdateInterval -> 1, 
                    TrackedSymbols :> {RSNB`clickTime$$}], StandardForm], 
                  Evaluator -> "System"], 
                 ButtonFunction :> (RSNB`clickTime$$ = AbsoluteTime[]; 
                  CopyToClipboard[
                    BinaryDeserialize[
                    BaseDecode[#2], Defer]]), 
                 Appearance -> {
                  "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
                 Method -> "Queued", Evaluator -> "System"], 
                MouseAppearanceTag["LinkHand"]]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
           DynamicModuleValues :> {}]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["PrettyTooltipTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        TooltipBox[#, 
         FrameBox[
          
          StyleBox[#2, "Text", FontColor -> 
           RGBColor[0.53725, 0.53725, 0.53725], FontSize -> 12, FontWeight -> 
           "Plain", FontTracking -> "Plain", StripOnInput -> False], 
          Background -> RGBColor[0.96078, 0.96078, 0.96078], FrameStyle -> 
          RGBColor[0.89804, 0.89804, 0.89804], FrameMargins -> 8, 
          StripOnInput -> False], TooltipDelay -> 0.1, 
         TooltipStyle -> {Background -> None, CellFrame -> 0}], 
        Annotation[#, 
         Framed[
          Style[
          RSNB`$$tooltip, "Text", FontColor -> 
           RGBColor[0.53725, 0.53725, 0.53725], FontSize -> 12, FontWeight -> 
           "Plain", FontTracking -> "Plain"], Background -> 
          RGBColor[0.96078, 0.96078, 0.96078], FrameStyle -> 
          RGBColor[0.89804, 0.89804, 0.89804], FrameMargins -> 8], 
         "Tooltip"]& ]& )}], 
   Cell[
    StyleData["ToolsGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            FrameBox[
             ButtonBox[
              StyleBox[
              "\"Add Snapshot\"", "Text", FontFamily -> "Source Sans Pro", 
               FontSize -> 11, StripOnInput -> False], ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1953907064413444837; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "AddSnapshot"; (
                    Needs["DemonstrationResource`DefinitionNotebook`" -> 
                    None]; DemonstrationResource`DefinitionNotebook`\
AddManipulateSnapshot[
                    ButtonNotebook[]])]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1953907064413444837]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> GrayLevel[1], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.5489, 0.092317, 0.067842], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.88722, 0.77308, 0.76696], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3Ixe3bNuZmzrI0hiAgGyhCvCF3L11cERnS
IyGIiYDiQFmChtw4dnSaoRZQ/URl2UOtjS8unIcgIBsoAhQHygLV4DHkwc0b
M0z0gCqX+Xp8efkCLfyBIkBxoCxQDVAlLkPWpSUB1Sz2cPr9/TvWeASKA2WB
aoAqsRpy48TxXinhPlmx9w/u40kPQFmgGqBKoHpMQ3bWVwOt2FGYSzBdAdUA
VQLVYxqywM0BKHVv726ChgDVAFUC1UM0QpI0hD1FWxUohRmemACoBqgSqB5u
CBBQbghVXELdMKFK7FAlnVAlxVIr7zyjRi6GAMrLEzigsGQjFVDREPyAmHoH
APEDg3E=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I9T2bD1Ykb/TUgiAgGyhCvCEPrlzYnea7
XJsNEwHFgbIEDblz8vA6R0Wg+tV6HOc9pV/HaUEQkA0UAYoDZYFq8Bjy6Nb1
9S4qQJW7LAW+pOj/yTZBRkARoDhQFqgGqBKXIfuKooFqdljw/8wwQjMBgoDi
QFmgGqBKrIbcOXV0uS7HCh32D0m6WE2AIKAsUA1QJVA9piHHOsqAVpxwFsdj
AgQB1QBVAtVjGrI1xAIo9SRCnaAhQDVAlUD1EI2QJA1hr7GRBkphhicmAqoB
qgSqhxsCBJQbQhWXUDdMqBI7VEknVEmx1Mo7z6iRiyGA8vIEDigs2UgFVDQE
PyCm3gEAQ+/Dcg==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I69evv3z58gsGgGygCPGGvHjx4vv371g9
DhQHyhI05OXLl79//wYK/vz8+cTEvsVuDhAEZANFgOJAWaAaPIY8f/4cYsKT
k8en6ar3SAgiI6AIUBxiDlAlLkO+fv0K5D4/d7ZfXgLNBAgCigNlgWqAKrEa
AnTkv3///vz8OdvMAKsJEASUBaoBqoR7CtmQT58+AdmXli7CYwIEAdUAVQLV
Yxry8+dPIHtNZAhBQ4BqQCH/8ydEIyRJQ9h//vwBsjHDExMB1QBVAtXDDQEC
yg2hikuoGyZUiR2qpBOqpFhq5Z1n1MjFEEB5eQIHFJZspAIqGoIfEFPvAACe
kBKf
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> GrayLevel[0.9], 
              Method -> "Queued", ImageSize -> {All, 20}, Evaluator -> 
              Automatic], FrameStyle -> Directive[
               GrayLevel[0.9], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Template Input\"", "Text", FontFamily -> "Source Sans Pro",
                  FontSize -> 11, StripOnInput -> False], 
                "\"Format selection automatically using appropriate \
documentation styles\""}, "PrettyTooltipTemplate"], ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    7071186616034202283; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "Template Input"; 
                    DefinitionNotebookClient`TemplateInput[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    7071186616034202283]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> GrayLevel[1], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.5489, 0.092317, 0.067842], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.88722, 0.77308, 0.76696], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3Ixe3bNuZmzrI0hiAgGyhCvCF3L11cERnS
IyGIiYDiQFmChtw4dnSaoRZQ/URl2UOtjS8unIcgIBsoAhQHygLV4DHkwc0b
M0z0gCqX+Xp8efkCLfyBIkBxoCxQDVAlLkPWpSUB1Sz2cPr9/TvWeASKA2WB
aoAqsRpy48TxXinhPlmx9w/u40kPQFmgGqBKoHpMQ3bWVwOt2FGYSzBdAdUA
VQLVYxqywM0BKHVv726ChgDVAFUC1UM0QpI0hD1FWxUohRmemACoBqgSqB5u
CBBQbghVXELdMKFK7FAlnVAlxVIr7zyjRi6GAMrLEzigsGQjFVDREPyAmHoH
APEDg3E=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I9T2bD1Ykb/TUgiAgGyhCvCEPrlzYnea7
XJsNEwHFgbIEDblz8vA6R0Wg+tV6HOc9pV/HaUEQkA0UAYoDZYFq8Bjy6Nb1
9S4qQJW7LAW+pOj/yTZBRkARoDhQFqgGqBKXIfuKooFqdljw/8wwQjMBgoDi
QFmgGqBKrIbcOXV0uS7HCh32D0m6WE2AIKAsUA1QJVA9piHHOsqAVpxwFsdj
AgQB1QBVAtVjGrI1xAIo9SRCnaAhQDVAlUD1EI2QJA1hr7GRBkphhicmAqoB
qgSqhxsCBJQbQhWXUDdMqBI7VEknVEmx1Mo7z6iRiyGA8vIEDigs2UgFVDQE
PyCm3gEAQ+/Dcg==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I69evv3z58gsGgGygCPGGvHjx4vv371g9
DhQHyhI05OXLl79//wYK/vz8+cTEvsVuDhAEZANFgOJAWaAaPIY8f/4cYsKT
k8en6ar3SAgiI6AIUBxiDlAlLkO+fv0K5D4/d7ZfXgLNBAgCigNlgWqAKrEa
AnTkv3///vz8OdvMAKsJEASUBaoBqoR7CtmQT58+AdmXli7CYwIEAdUAVQLV
Yxry8+dPIHtNZAhBQ4BqQCH/8ydEIyRJQ9h//vwBsjHDExMB1QBVAtXDDQEC
yg2hikuoGyZUiR2qpBOqpFhq5Z1n1MjFEEB5eQIHFJZspAIqGoIfEFPvAACe
kBKf
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> GrayLevel[0.9], 
              Method -> "Queued", ImageSize -> {All, 20}, Evaluator -> 
              Automatic], FrameStyle -> Directive[
               GrayLevel[0.9], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Literal Input\"", "Text", FontFamily -> "Source Sans Pro", 
                 FontSize -> 11, StripOnInput -> False], 
                "\"Format selection as literal Wolfram Language code\""}, 
               "PrettyTooltipTemplate"], ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    4937992391498864149; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Literal Input"; 
                    DefinitionNotebookClient`LiteralInput[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    4937992391498864149]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> GrayLevel[1], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.5489, 0.092317, 0.067842], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.88722, 0.77308, 0.76696], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3Ixe3bNuZmzrI0hiAgGyhCvCF3L11cERnS
IyGIiYDiQFmChtw4dnSaoRZQ/URl2UOtjS8unIcgIBsoAhQHygLV4DHkwc0b
M0z0gCqX+Xp8efkCLfyBIkBxoCxQDVAlLkPWpSUB1Sz2cPr9/TvWeASKA2WB
aoAqsRpy48TxXinhPlmx9w/u40kPQFmgGqBKoHpMQ3bWVwOt2FGYSzBdAdUA
VQLVYxqywM0BKHVv726ChgDVAFUC1UM0QpI0hD1FWxUohRmemACoBqgSqB5u
CBBQbghVXELdMKFK7FAlnVAlxVIr7zyjRi6GAMrLEzigsGQjFVDREPyAmHoH
APEDg3E=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I9T2bD1Ykb/TUgiAgGyhCvCEPrlzYnea7
XJsNEwHFgbIEDblz8vA6R0Wg+tV6HOc9pV/HaUEQkA0UAYoDZYFq8Bjy6Nb1
9S4qQJW7LAW+pOj/yTZBRkARoDhQFqgGqBKXIfuKooFqdljw/8wwQjMBgoDi
QFmgGqBKrIbcOXV0uS7HCh32D0m6WE2AIKAsUA1QJVA9piHHOsqAVpxwFsdj
AgQB1QBVAtVjGrI1xAIo9SRCnaAhQDVAlUD1EI2QJA1hr7GRBkphhicmAqoB
qgSqhxsCBJQbQhWXUDdMqBI7VEknVEmx1Mo7z6iRiyGA8vIEDigs2UgFVDQE
PyCm3gEAQ+/Dcg==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I69evv3z58gsGgGygCPGGvHjx4vv371g9
DhQHyhI05OXLl79//wYK/vz8+cTEvsVuDhAEZANFgOJAWaAaPIY8f/4cYsKT
k8en6ar3SAgiI6AIUBxiDlAlLkO+fv0K5D4/d7ZfXgLNBAgCigNlgWqAKrEa
AnTkv3///vz8OdvMAKsJEASUBaoBqoR7CtmQT58+AdmXli7CYwIEAdUAVQLV
Yxry8+dPIHtNZAhBQ4BqQCH/8ydEIyRJQ9h//vwBsjHDExMB1QBVAtXDDQEC
yg2hikuoGyZUiR2qpBOqpFhq5Z1n1MjFEEB5eQIHFJZspAIqGoIfEFPvAACe
kBKf
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> GrayLevel[0.9], 
              Method -> "Queued", ImageSize -> {All, 20}, Evaluator -> 
              Automatic], FrameStyle -> Directive[
               GrayLevel[0.9], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Subscripted Variable\"", "Text", FontFamily -> 
                 "Source Sans Pro", FontSize -> 11, StripOnInput -> False], 
                "\"Insert subscripted variable placeholder\""}, 
               "PrettyTooltipTemplate"], ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    168721804526114855; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "Subscripted Variable"; 
                    DefinitionNotebookClient`SubscriptInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    168721804526114855]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> GrayLevel[1], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.5489, 0.092317, 0.067842], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.88722, 0.77308, 0.76696], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3Ixe3bNuZmzrI0hiAgGyhCvCF3L11cERnS
IyGIiYDiQFmChtw4dnSaoRZQ/URl2UOtjS8unIcgIBsoAhQHygLV4DHkwc0b
M0z0gCqX+Xp8efkCLfyBIkBxoCxQDVAlLkPWpSUB1Sz2cPr9/TvWeASKA2WB
aoAqsRpy48TxXinhPlmx9w/u40kPQFmgGqBKoHpMQ3bWVwOt2FGYSzBdAdUA
VQLVYxqywM0BKHVv726ChgDVAFUC1UM0QpI0hD1FWxUohRmemACoBqgSqB5u
CBBQbghVXELdMKFK7FAlnVAlxVIr7zyjRi6GAMrLEzigsGQjFVDREPyAmHoH
APEDg3E=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I9T2bD1Ykb/TUgiAgGyhCvCEPrlzYnea7
XJsNEwHFgbIEDblz8vA6R0Wg+tV6HOc9pV/HaUEQkA0UAYoDZYFq8Bjy6Nb1
9S4qQJW7LAW+pOj/yTZBRkARoDhQFqgGqBKXIfuKooFqdljw/8wwQjMBgoDi
QFmgGqBKrIbcOXV0uS7HCh32D0m6WE2AIKAsUA1QJVA9piHHOsqAVpxwFsdj
AgQB1QBVAtVjGrI1xAIo9SRCnaAhQDVAlUD1EI2QJA1hr7GRBkphhicmAqoB
qgSqhxsCBJQbQhWXUDdMqBI7VEknVEmx1Mo7z6iRiyGA8vIEDigs2UgFVDQE
PyCm3gEAQ+/Dcg==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I69evv3z58gsGgGygCPGGvHjx4vv371g9
DhQHyhI05OXLl79//wYK/vz8+cTEvsVuDhAEZANFgOJAWaAaPIY8f/4cYsKT
k8en6ar3SAgiI6AIUBxiDlAlLkO+fv0K5D4/d7ZfXgLNBAgCigNlgWqAKrEa
AnTkv3///vz8OdvMAKsJEASUBaoBqoR7CtmQT58+AdmXli7CYwIEAdUAVQLV
Yxry8+dPIHtNZAhBQ4BqQCH/8ydEIyRJQ9h//vwBsjHDExMB1QBVAtXDDQEC
yg2hikuoGyZUiR2qpBOqpFhq5Z1n1MjFEEB5eQIHFJZspAIqGoIfEFPvAACe
kBKf
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> GrayLevel[0.9], 
              Method -> "Queued", ImageSize -> {All, 20}, Evaluator -> 
              Automatic], FrameStyle -> Directive[
               GrayLevel[0.9], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            ActionMenuBox[
             FrameBox[
              ButtonBox[
               StyleBox[
                
                TemplateBox[{
                 "\"Cells\"", 
                  "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\[FilledDownTriangle]\
\""}, "RowDefault"], "Text", FontFamily -> "Source Sans Pro", FontSize -> 11, 
                StripOnInput -> False], ButtonFunction :> 
               With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                 Quiet[
                  
                  Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                   Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    4246462567992284997; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[Null]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    4246462567992284997]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                   Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
               Dynamic[
                 FEPrivate`If[
                  CurrentValue[Enabled], 
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   FontColor -> GrayLevel[1], 
                    TaggingRules -> {"ButtonHovering" -> True}}, {
                   FontColor -> RGBColor[0.5489, 0.092317, 0.067842], 
                    TaggingRules -> {"ButtonHovering" -> False}}], {
                  FontColor -> RGBColor[0.88722, 0.77308, 0.76696], 
                   TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                 "System"], Appearance -> {"Default" -> Image[CompressedData["

1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3Ixe3bNuZmzrI0hiAgGyhCvCF3L11cERnS
IyGIiYDiQFmChtw4dnSaoRZQ/URl2UOtjS8unIcgIBsoAhQHygLV4DHkwc0b
M0z0gCqX+Xp8efkCLfyBIkBxoCxQDVAlLkPWpSUB1Sz2cPr9/TvWeASKA2WB
aoAqsRpy48TxXinhPlmx9w/u40kPQFmgGqBKoHpMQ3bWVwOt2FGYSzBdAdUA
VQLVYxqywM0BKHVv726ChgDVAFUC1UM0QpI0hD1FWxUohRmemACoBqgSqB5u
CBBQbghVXELdMKFK7FAlnVAlxVIr7zyjRi6GAMrLEzigsGQjFVDREPyAmHoH
APEDg3E=
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I9T2bD1Ykb/TUgiAgGyhCvCEPrlzYnea7
XJsNEwHFgbIEDblz8vA6R0Wg+tV6HOc9pV/HaUEQkA0UAYoDZYFq8Bjy6Nb1
9S4qQJW7LAW+pOj/yTZBRkARoDhQFqgGqBKXIfuKooFqdljw/8wwQjMBgoDi
QFmgGqBKrIbcOXV0uS7HCh32D0m6WE2AIKAsUA1QJVA9piHHOsqAVpxwFsdj
AgQB1QBVAtVjGrI1xAIo9SRCnaAhQDVAlUD1EI2QJA1hr7GRBkphhicmAqoB
qgSqhxsCBJQbQhWXUDdMqBI7VEknVEmx1Mo7z6iRiyGA8vIEDigs2UgFVDQE
PyCm3gEAQ+/Dcg==
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I69evv3z58gsGgGygCPGGvHjx4vv371g9
DhQHyhI05OXLl79//wYK/vz8+cTEvsVuDhAEZANFgOJAWaAaPIY8f/4cYsKT
k8en6ar3SAgiI6AIUBxiDlAlLkO+fv0K5D4/d7ZfXgLNBAgCigNlgWqAKrEa
AnTkv3///vz8OdvMAKsJEASUBaoBqoR7CtmQT58+AdmXli7CYwIEAdUAVQLV
Yxry8+dPIHtNZAhBQ4BqQCH/8ydEIyRJQ9h//vwBsjHDExMB1QBVAtXDDQEC
yg2hikuoGyZUiR2qpBOqpFhq5Z1n1MjFEEB5eQIHFJZspAIqGoIfEFPvAACe
kBKf
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True]}, Background -> GrayLevel[0.9], 
               Method -> "Queued", ImageSize -> {All, 20}, Evaluator -> 
               Automatic], FrameStyle -> Directive[
                GrayLevel[0.9], 
                AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
              False, StripOnInput -> False], {
             "\"Insert comment for reviewer\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    7544339529118446740; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Insert comment for reviewer"; 
                    DefinitionNotebookClient`CommentInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    7544339529118446740]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Mark/unmark selected cells as comments\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1923617830619908649; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Mark/unmark selected cells as comments"; 
                    DefinitionNotebookClient`CommentToggle[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1923617830619908649]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Mark/unmark selected cells as excluded\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1439263868824766472; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Mark/unmark selected cells as excluded"; 
                    DefinitionNotebookClient`ExclusionToggle[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1439263868824766472]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]]}, Appearance -> None, Method -> "Queued"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}}, 
          AutoDelete -> False, 
          GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
              GrayLevel[0.9]}}, 
          GridBoxFrame -> {
           "Columns" -> False, "RowsIndexed" -> {1 -> GrayLevel[0.9]}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {
           "Columns" -> {5, {0.5}, 5}, "Rows" -> {{Automatic}}}, FrameStyle -> 
          GrayLevel[0.75]], "Grid"], ButtonBoxOptions -> {Enabled -> Dynamic[
            Not[
             TrueQ[DefinitionNotebookClient`$ButtonsDisabled]], 
            TrackedSymbols :> {DefinitionNotebookClient`$ButtonsDisabled}]}, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["MainGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            TagBox[
             GridBox[{{
                GraphicsBox[
                 RasterBox[CompressedData["
1:eJztnXvQFlUdx0ktEbIsMsnKUWqaLkOYKWNNiHSbQUrtRdLUerm8L+AlbJBE
ur7gIFlmzeQ4iOIlanTGCyT4RzPZWDKKt1E0TSP6OcZomhI5mpFmnc/s7rTv
tufsue3zHHj44+Mg7HMu39095/wu5+xhs8/pm7vXiBEjzh2p/tM3a/GUhQtn
LZl+gPqfGQvOPWPegsGBqQsWDc4bXHj07L3VXw4oZir2Ucj7dmlOyel2O3qR
0YptOaMTaE+vsULxn5wLE2hPL/Fexc6S/jvzv+t2u3qFW0vaF2xIoF29wLQa
7QumJdC+3Zl9FVsM+m/Jr+l2O3dXlhi0Lzg/gXbujrxT8ZKF/i/l13a7vZ1m
kuKNLZZ/vYX2Bde12I79FZMT0LvKKsUOxQ8Vh0Yue7KD9gXHRG7DOMWPFC8o
Lk9A7yrLSn3/t+JmifOc7KPY7KH/5vy3ofVPUaxTvFYqeygBvavM1+jwgGKm
+K9LzvbQvuAszzpHKmYb7vu8BPSucnyDFs8qlirGOpR5oOJvAfpvV7zNob6D
FRco/tpQ7ucS0LvKREtN/qVYo/ioRZmrArQvsBmrafvP87bZlHlEAnpXeYeH
NhsVM6R+nD5Sho+5vrym0Ys6v6i406NMl3e4U+wt2bzro9GTivMUb83Lep3i
rgjaF9yVlzkirwMb7c+eZb2q2CsBvet4OlAnbKeVim9F1L6AMhmL/hFYzlMJ
6KzjvhZ0S417EtBZx4YE9GmbWxLQWcflCejTNisT0FnHUAL6tM13EtBZx9wu
acIak3nxMcWjir/I8PhkTAYS0FnHcR3S+znFz3Itxku9b4P15nsUp0tm7/09
Ut1TE9BZxxEtar4z1/yzktkarm0bpRhU/DGwHYcnoLOOsS3o/rxkfqO3R2oj
du85kvmRfdpzUAI668AufDWS7ujzbWkvpsPYdI9jm16R/9nRqfJUJP1/L1kc
63uKryg+rHh95La+QbIxzbZN2xLQt4m7I+lfx4uS5f4wfsSK8fI8f9+y/rsT
0LeJdS3qX4Y1568VJ4nffFzlEos61yWgb5U3KT6t+KZivcRb57nwJ8WXJcwv
yW9vaqiHvuFjwZfHOuzNHdaa52yCZPG31ZLZOjF89LHA/xeyPmSuf8yhPvrO
PHW1ZPHXj0icmHMB8bg+xUWK28Uu/6bbsEbBv++7TpmQl+FbPxrdofiBZGPj
uyzrxT4hh+frihslm+u7rWUIN+Z98rkHyyO3hTUh+SCLFcfK8DU1efTkKMRa
t8fiGcUmyfy9NyjWijn3sw7mZ5+9GfwmNJZkgjghuRWsrXnmX05Ab3xm+HbJ
oyjbuqzR50gWn/y84gDJ7GzyUh61KPdXeRmu9+CslvtLHO4TeV194h+7DeUh
yfZw1WlE+74rWWy/TiPWLP3SnC+y2kN/xq7nWuozWn+hUp8uf6otyFWcLfo1
I+vJGZZacX/uaKjvdI97cHFLfZ+rqW9ZS/VVuVfxbkO/eaY/6agV788thjrJ
43L1nR3eQt+HDPWxZlvdsvZotJ+hDeRbnuCoUwFxgI2Guq/yKPOJiH1fZVEf
Ntb6lrS/TcxzIbb0Ek/tC7BZdPMBazzXfXpXROr7WrH3kzD3+OSFmdgq2drF
VO+i/B6E6A/9hnZc5ljWnAh93yjutsgYyWzrGNoz3x/dUB+5tnV5xYwpX1Jc
I5lv4MW8THJreUbIl/1A5TeMow9o2vKCoxZHBfb9EcVbHLUvOETi2ME2ORus
t8u2EjngrPlt1oDMrdiRh5V+f5rh+j4HDcYE9BvtbP0POohvh/g0se1s1h2L
S3/mmXO1dZk3iO+enJcxSvR2pas94OMP4pn4UKD2Bezl+aen/jbjLXt7Tsr/
3G/oL/PnhlzrMyQ7d+B3+b8xLmE3f1yxIC9L509+3LH/Oxz7XLZtYzFd/Gxk
m1z5WZLNzfMM5RCrfX/pN325juVriv0uvLO8C18zlGdaA4foX2fbxuJMR+23
WpZb+HZ09xc/XHnO1I3t15auIT7yY0PbXMYGF//Y/Ja0L3CxkS+1LBNf+fOa
MtiTMq50LTEn3fNYjQ+eZ2jbpyzbNtqhv0tb1h5cbORTLcu831DGmsq1A4Zr
q/PqDMO1J1q2bbxlX6/sgPYFV1q2abxleQ8byqj64K4yXFvNzVwTQf9TLfvK
ve9EbtBSy/aAbezjQUMZiyvX6vIrGJPK8XDGLN1+OuaZKZZtu9Shv8ta1t7F
R/2yQ7mbDOUwh36mdO21mutOK10zylAmMXPWxOW1lImtDn2GM1vS3jVGs8Oh
7BsM5ZBrxVqyGMuqcanHZbg9i66mvELshq+KXS6dTz4xGk2PrL1PjNJF/xWG
cm7Kr+E+YFthYxU+IHwr2GC8l9hk2Ga6ODZjUX9e1iLLdl3moT9gq8Y6f4J1
ss8e9Fcc6phuKIf7XthK+BYGxe4coDL47SbmZeADrs4pdYyVsLg4Phvb9YcO
fEch/rcxlvVwRoApj6u8jsXHxvti80zguyMXaGTp98TVmnyxsDKg3wVod4in
9vhMHwms/yiH+kzxBnzJ1bUdPucL8t9tz68j94n54KeSvSsja+pZXlNWlY9J
vHwEfPi2z2EB6wdTHM+WOQ51mnw/0O/Yhzo+KMPXSXXgh3Jd8zRxp9jHHBgf
10aq9woHbYh7mfxcxBQPDtCeZ548SlOOLrHR2yJrX7Be7OKPMc4cKXjCUaOh
hvJ4J33PEWJdbvK5Mceb8idi0GQjN/XfB5d8ZOzlpnMx0Mg1nw3fqmlNTi7M
vS1rX6Czkdvau3uxo1ZN5zjBb8X+DBj2Lp2s+TfGIuYo1/hKKFUfNfGCtvIP
WQO6xDrgJxblMh/0i348Z38Sz1rdWpP3h5zHhzqsewFaFzY7cbLQM1macD2H
DX1+aVk2Objk4vI+sHZhrMHvPyjDxynsZvK6OKPimS7pXgbbDr8COdCbpd38
W3K5XfPAWQ/9xqOuP0i2fsOnxJpjUyJ6l8FHgk2zotRf9gQcK5ltzl6BWPtI
C5Y76g+smdtek3QC7GD2g7C3ZZLY2wL4H8hLID5IfnHI/iP8QRM87gHrNfZh
p7Y/RAca3S6ZrcEYH2KzVGFvGXvMmL+vlsy2dtl/hx/Mdz875/Hpctq6BX3H
R8O6Hvud5yvGXlgXiDmRa8CeTPy/Tbla+JN994nyu5mS7Tftht70jTnlG5Lt
uY2Rqxqbmy36cUlgHbyHvNv4Cjq5byfF/ddVbM8fYM9/jHg168r5+X1v2ocU
yq5w/oBLvICzL3z2xpkgv5/cBvz+rPV/If+fJ+dLymdPAs+za64qsdpxkeqv
wlzP2sn3rJ8qKZ+9Cgd59gt9yJmNtXefMYk8GV1OXQgpnj1cELpfjbPB8Bv4
7Ftn3cc6jDGtrbP3IMWztwumRuoj6zxy19gzSry3bp4mDkB8eyDXvK29ulWO
S0BnHabczBB4ntkfj68NG455sFvnruj27qZAG+dmp8ZQAjrriJGzkTopfnun
YHfwVTaR8ncmXc9z3BW5LwGddYTGDIjD8X639f0FxsfQM7yeTkDnOkLOXiXn
AX9B+fsjMfffV78/QnzySc+y8Pd12sdsg8/Zw2jMN3Dq7F7snFjf3zmypnzq
ZG+NT56f7jyibmKbK08eON96sskNjfE9B5szR/gW1hqx//7URIsyO03T2fP4
hsmXdYnHkRe9vaFcE+RIH+hQH+8wfqNnG8o9PgG9q+jyt8it4JyrulxkG0LO
YTvbs058GzNFH+9se4+vD0Ol9jHm4ne33eNmotvf35wsWWynHGdre5+dD4zV
+JH5Rmtsf/4xHvpPjtyGQyX7ti65ijZzSqehv/u3WP51Dtpf32I7iOlMSkDv
TkM+Z7HvzkSvfn+8E5xvoX/o+XF70MO6xHQu0xbx35+xBzumGfSflkD7eoG6
70zemkC7egVyfMox9p3ifq7nHsK4sKT/ii7U3+uwn2Nbjs8Z/3sI55ScbrfD
m/8Cm+a3ew==
                  "], {{0, 0}, {96, 100}}, {0, 255}, ColorFunction -> 
                  RGBColor], {
                 ImageSize -> {Automatic, 32}, 
                  ImagePadding -> {{5, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.25], PlotRange -> {{0, 96}, {0, 100}}, 
                  ImageSizeRaw -> {96., 100.}}], 
                StyleBox[
                 TagBox[
                  GridBox[{{
                    StyleBox[
                    "\"Demonstration Resource\"", FontFamily -> 
                    "Source Sans Pro", FontWeight -> "SemiBold", StripOnInput -> 
                    False], 
                    StyleBox[
                    "\"DEFINITION NOTEBOOK\"", FontFamily -> 
                    "Source Sans Pro", FontTracking -> "SemiCondensed", 
                    FontVariations -> {"CapsType" -> "AllSmallCaps"}, 
                    StripOnInput -> False]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "ColumnsIndexed" -> {2 -> GrayLevel[1]}, 
                    "Rows" -> {{None}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Grid"], FontSize -> 24, FontColor -> GrayLevel[1], 
                 StripOnInput -> False]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],
             "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
            "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
            TemplateBox[{
              StyleBox[
               
               TemplateBox[{
                "\"Demonstration Repository\"", "\" \[RightGuillemet]  \""}, 
                "RowDefault"], "Text", FontColor -> GrayLevel[1], 
               StripOnInput -> False], 
              "https://resources.wolframcloud.com/DemonstrationRepository"}, 
             "HyperlinkURL"]}, {
            TemplateBox[{
              
              TemplateBox[{
               "\"Open Sample\"", 
                "\"View a completed sample definition notebook\""}, 
               "PrettyTooltipTemplate"], Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 1953775238739395670; (
                DefinitionNotebookClient`$ClickedButton = "Open Sample"; 
                DefinitionNotebookClient`ViewExampleNotebook[
                  ButtonNotebook[]]), 
               DefinitionNotebookClient`ButtonCodeID[1953775238739395670]]& , 
              "\"View a completed sample definition notebook\"", False}, 
             "OrangeButtonTemplate"], 
            TemplateBox[{
              
              TemplateBox[{
               "\"Style Guidelines\"", 
                "\"View general guidelines for authoring resources\""}, 
               "PrettyTooltipTemplate"], Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 6116318327813659236; (
                DefinitionNotebookClient`$ClickedButton = "Style Guidelines"; 
                SystemOpen[
                 "https://demonstrations.wolfram.com/guidelines.php"]), 
               DefinitionNotebookClient`ButtonCodeID[6116318327813659236]]& , 
              "\"View general guidelines for authoring resources\"", False}, 
             "OrangeButtonTemplate"], 
            TemplateBox[{
              TemplateBox[{
                TagBox[
                 GridBox[{{"\"Tools\"", 
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[1], 
                    AbsoluteThickness[1.], 
                    LineBox[{{0, 0}, {0, 10}, {10, 10}, {10, 0}, {0, 0}}], 
                    LineBox[{{5, 2.5}, {5, 7.5}}], 
                    LineBox[{{2.5, 5}, {7.5, 5}}]}, ImageSize -> 12, 
                    PlotRangePadding -> 1.5], True -> GraphicsBox[{
                    GrayLevel[1], 
                    AbsoluteThickness[1.], 
                    LineBox[{{0, 0}, {0, 10}, {10, 10}, {10, 0}, {0, 0}}], 
                    LineBox[{{2.5, 5}, {7.5, 5}}]}, ImageSize -> 12, 
                    PlotRangePadding -> 1.5]}, 
                    Dynamic[
                    CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]],
                     BaselinePosition -> Scaled[0.05]]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.35}}}], "Grid"], 
                "\"Toggle documentation toolbar\""}, "PrettyTooltipTemplate"],
               Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 1908941340027841465; (
                DefinitionNotebookClient`$ClickedButton = "Tools"; 
                DefinitionNotebookClient`ToggleToolbar[
                  ButtonNotebook[]]), 
               DefinitionNotebookClient`ButtonCodeID[1908941340027841465]]& , 
              "\"Toggle documentation toolbar\"", False}, 
             "OrangeButtonTemplate"], 
            TagBox[
             
             GridBox[{{"\"\"", "\"\""}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
              False, GridBoxDividers -> {
               "ColumnsIndexed" -> {2 -> True}, "Rows" -> {{False}}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{2}}}, 
              GridBoxSpacings -> {"Columns" -> {{0.5}}}, FrameStyle -> 
              RGBColor[0.57555, 0.57556, 0.57554]], "Grid"], 
            TemplateBox[{
              
              TemplateBox[{
               "\"Check\"", "\"Check notebook for potential errors\""}, 
               "PrettyTooltipTemplate"], Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 3941141659801008137; (
                DefinitionNotebookClient`$ClickedButton = "Check"; 
                DefinitionNotebookClient`CheckDefinitionNotebook[
                  ButtonNotebook[]]), 
               DefinitionNotebookClient`ButtonCodeID[3941141659801008137]]& , 
              "\"Check notebook for potential errors\"", False}, 
             "OrangeButtonTemplate"], 
            ActionMenuBox[
             TemplateBox[{
               TemplateBox[{"\"Deploy\"", 
                 TemplateBox[{5}, "Spacer1"], "\"\[FilledDownTriangle]\""}, 
                "RowDefault"], Annotation[
               DefinitionNotebookClient`$ButtonCodeID = 6058522267645278627; 
                Null, 
                DefinitionNotebookClient`ButtonCodeID[6058522267645278627]]& ,
                "\"\"", True}, "OrangeButtonTemplate"], {
             "\"To my cloud account\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    8267267753343341396; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "DeployCustom"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "To my cloud account"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource["Demonstration", 
                    ButtonNotebook[], "CloudPrivate"], "ShowProgress" -> 
                    True]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    8267267753343341396]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"Publicly in the cloud\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1628664177886538591; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "DeployCustom"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Publicly in the cloud"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource["Demonstration", 
                    ButtonNotebook[], "CloudPublic"], "ShowProgress" -> 
                    True]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1628664177886538591]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]]}, Appearance -> None, Method -> "Queued"], 
            
            ItemBox[
             StyleBox[
              DynamicBox[
               ToBoxes[
                CurrentValue[
                 EvaluationNotebook[], {TaggingRules, "StatusMessage"}, ""], 
                StandardForm], Initialization :> (CurrentValue[
                  EvaluationNotebook[], {TaggingRules, "StatusMessage"}] = 
                "")], "Text", 
              GrayLevel[1], StripOnInput -> False], ItemSize -> Fit, 
             Alignment -> Right, StripOnInput -> False], 
            DynamicBox[
             ToBoxes[
              If[
               CurrentValue[
                EvaluationNotebook[], {
                TaggingRules, "SubmissionReviewData", "Review"}, False], 
               RawBoxes[
                TemplateBox[{
                  TemplateBox[{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.06349], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBWIWIGZigIEX9mCqQd8Bwv+Bnc/A54CiHs5HV6/ngJUP
p2HmwdTp4FCHTvOhqYfZrw2lhdDk0fno6tHcD1PPwOSAnY+uns8BAE8cGz4=

                    "]]}, {
                    FaceForm[
                    GrayLevel[1]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgB2IWIGZigAEJBwjNB6EblHHwX9ijqofxoeoYhKC0Bg4+
Hw4apk4Uap8aDr4QDhqqDu4uVRx8URw0TJ001D5lHHwJHDRUHYMclFbCwZfG
QUPVNSjgp+HmIWgAG/wcEg==
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10EEKgCAQhWGpFtEyEAYGggQj6RKeoSMErbuCR0/IWfTgCcPwy7fR9XrO
u3fOTXWGOp2zM+ZvH2170nv+e2sFH0ijt45/XxJp9NgRPHYAb63kHhu9tf2H
eU8aPfbS9kxawAvxnrSCx3c3XzbS6JX4RFrAS34B53ckaw==
                    "]]}, {
                    FaceForm[
                    GrayLevel[1]]}, StripOnInput -> False]}, ImageSize -> 15, 
                    PlotRange -> {{0., 15.75}, {0., 16.5}}, AspectRatio -> 
                    1.15], "\"Submit Update\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "ColumnsIndexed" -> {2 -> 0.5}, 
                    "Rows" -> {{0}}}], "Grid"], 
                    "\"Submit changes to update your demonstration submission\
\""}, "PrettyTooltipTemplate"], Annotation[
                  DefinitionNotebookClient`$ButtonCodeID = 
                    2169377100431483360; (
                    DefinitionNotebookClient`$ClickedButton = "SubmitUpdate"; 
                    With[{RSNB`nb = ButtonNotebook[]}, 
                    DefinitionNotebookClient`DisplayStripe[RSNB`nb, 
                    DefinitionNotebookClient`SubmitRepositoryUpdate[RSNB`nb], 
                    "ShowProgress" -> True]]), 
                   DefinitionNotebookClient`ButtonCodeID[
                   2169377100431483360]]& , 
                  "\"Submit changes to update your demonstration \
submission\"", True}, "OrangeButtonTemplate"]], 
               RawBoxes[
                TemplateBox[{
                  TemplateBox[{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.06349], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBWIWIGZigIEX9mCqQd8Bwv+Bnc/A54CiHs5HV6/ngJUP
p2HmwdTp4FCHTvOhqYfZrw2lhdDk0fno6tHcD1PPwOSAnY+uns8BAE8cGz4=

                    "]]}, {
                    FaceForm[
                    GrayLevel[1]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgB2IWIGZigAEJBwjNB6EblHHwX9ijqofxoeoYhKC0Bg4+
Hw4apk4Uap8aDr4QDhqqDu4uVRx8URw0TJ001D5lHHwJHDRUHYMclFbCwZfG
QUPVNSjgp+HmIWgAG/wcEg==
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10EEKgCAQhWGpFtEyEAYGggQj6RKeoSMErbuCR0/IWfTgCcPwy7fR9XrO
u3fOTXWGOp2zM+ZvH2170nv+e2sFH0ijt45/XxJp9NgRPHYAb63kHhu9tf2H
eU8aPfbS9kxawAvxnrSCx3c3XzbS6JX4RFrAS34B53ckaw==
                    "]]}, {
                    FaceForm[
                    GrayLevel[1]]}, StripOnInput -> False]}, ImageSize -> 15, 
                    PlotRange -> {{0., 15.75}, {0., 16.5}}, AspectRatio -> 
                    1.15], "\"Submit to Repository\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "ColumnsIndexed" -> {2 -> 0.5}, 
                    "Rows" -> {{0}}}], "Grid"], 
                    "\"Submit your demonstration to the Wolfram Demonstration \
Repository\""}, "PrettyTooltipTemplate"], Annotation[
                  DefinitionNotebookClient`$ButtonCodeID = 
                    850153740503147579; (
                    DefinitionNotebookClient`$ClickedButton = "Submit"; 
                    With[{RSNB`nb = ButtonNotebook[]}, 
                    DefinitionNotebookClient`DisplayStripe[RSNB`nb, 
                    DefinitionNotebookClient`SubmitRepository[RSNB`nb], 
                    "ShowProgress" -> True]]), 
                   DefinitionNotebookClient`ButtonCodeID[
                   850153740503147579]]& , 
                  "\"Submit your demonstration to the Wolfram Demonstration \
Repository\"", True}, "OrangeButtonTemplate"]]], StandardForm], Evaluator -> 
             "System", SingleEvaluation -> True]}}, 
          GridBoxAlignment -> {
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {-1 -> Right}, 
            "Rows" -> {{Center}}}, AutoDelete -> False, 
          GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
              RGBColor[0.1511, 0.15112, 0.15108], 
              RGBColor[0.7508, 0.17868, 0.085283]}}, 
          GridBoxFrame -> {
           "Columns" -> False, 
            "RowsIndexed" -> {
             1 -> RGBColor[0.1511, 0.15112, 0.15108], 2 -> 
              RGBColor[0.7508, 0.17868, 0.085283]}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {
           "Columns" -> {5, {0.9}, 5}, 
            "RowsIndexed" -> {1 -> 1.1, 2 -> 1.3, 3 -> 0.25}}, FrameStyle -> 
          RGBColor[0.1511, 0.15112, 0.15108]], "Grid"], 
        ButtonBoxOptions -> {Enabled -> Dynamic[
            Not[
             TrueQ[DefinitionNotebookClient`$ButtonsDisabled]], 
            TrackedSymbols :> {DefinitionNotebookClient`$ButtonsDisabled}]}, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["ReviewerCommentLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        GridBox[{{#, 
           TemplateBox[{
             GraphicsBox[
              RasterBox[CompressedData["
1:eJztnXvQFlUdx0ktEbIsMsnKUWqaLkOYKWNNiHSbQUrtRdLUerm8L+AlbJBE
ur7gIFlmzeQ4iOIlanTGCyT4RzPZWDKKt1E0TSP6OcZomhI5mpFmnc/s7rTv
tufsue3zHHj44+Mg7HMu39095/wu5+xhs8/pm7vXiBEjzh2p/tM3a/GUhQtn
LZl+gPqfGQvOPWPegsGBqQsWDc4bXHj07L3VXw4oZir2Ucj7dmlOyel2O3qR
0YptOaMTaE+vsULxn5wLE2hPL/Fexc6S/jvzv+t2u3qFW0vaF2xIoF29wLQa
7QumJdC+3Zl9FVsM+m/Jr+l2O3dXlhi0Lzg/gXbujrxT8ZKF/i/l13a7vZ1m
kuKNLZZ/vYX2Bde12I79FZMT0LvKKsUOxQ8Vh0Yue7KD9gXHRG7DOMWPFC8o
Lk9A7yrLSn3/t+JmifOc7KPY7KH/5vy3ofVPUaxTvFYqeygBvavM1+jwgGKm
+K9LzvbQvuAszzpHKmYb7vu8BPSucnyDFs8qlirGOpR5oOJvAfpvV7zNob6D
FRco/tpQ7ucS0LvKREtN/qVYo/ioRZmrArQvsBmrafvP87bZlHlEAnpXeYeH
NhsVM6R+nD5Sho+5vrym0Ys6v6i406NMl3e4U+wt2bzro9GTivMUb83Lep3i
rgjaF9yVlzkirwMb7c+eZb2q2CsBvet4OlAnbKeVim9F1L6AMhmL/hFYzlMJ
6KzjvhZ0S417EtBZx4YE9GmbWxLQWcflCejTNisT0FnHUAL6tM13EtBZx9wu
acIak3nxMcWjir/I8PhkTAYS0FnHcR3S+znFz3Itxku9b4P15nsUp0tm7/09
Ut1TE9BZxxEtar4z1/yzktkarm0bpRhU/DGwHYcnoLOOsS3o/rxkfqO3R2oj
du85kvmRfdpzUAI668AufDWS7ujzbWkvpsPYdI9jm16R/9nRqfJUJP1/L1kc
63uKryg+rHh95La+QbIxzbZN2xLQt4m7I+lfx4uS5f4wfsSK8fI8f9+y/rsT
0LeJdS3qX4Y1568VJ4nffFzlEos61yWgb5U3KT6t+KZivcRb57nwJ8WXJcwv
yW9vaqiHvuFjwZfHOuzNHdaa52yCZPG31ZLZOjF89LHA/xeyPmSuf8yhPvrO
PHW1ZPHXj0icmHMB8bg+xUWK28Uu/6bbsEbBv++7TpmQl+FbPxrdofiBZGPj
uyzrxT4hh+frihslm+u7rWUIN+Z98rkHyyO3hTUh+SCLFcfK8DU1efTkKMRa
t8fiGcUmyfy9NyjWijn3sw7mZ5+9GfwmNJZkgjghuRWsrXnmX05Ab3xm+HbJ
oyjbuqzR50gWn/y84gDJ7GzyUh61KPdXeRmu9+CslvtLHO4TeV194h+7DeUh
yfZw1WlE+74rWWy/TiPWLP3SnC+y2kN/xq7nWuozWn+hUp8uf6otyFWcLfo1
I+vJGZZacX/uaKjvdI97cHFLfZ+rqW9ZS/VVuVfxbkO/eaY/6agV788thjrJ
43L1nR3eQt+HDPWxZlvdsvZotJ+hDeRbnuCoUwFxgI2Guq/yKPOJiH1fZVEf
Ntb6lrS/TcxzIbb0Ek/tC7BZdPMBazzXfXpXROr7WrH3kzD3+OSFmdgq2drF
VO+i/B6E6A/9hnZc5ljWnAh93yjutsgYyWzrGNoz3x/dUB+5tnV5xYwpX1Jc
I5lv4MW8THJreUbIl/1A5TeMow9o2vKCoxZHBfb9EcVbHLUvOETi2ME2ORus
t8u2EjngrPlt1oDMrdiRh5V+f5rh+j4HDcYE9BvtbP0POohvh/g0se1s1h2L
S3/mmXO1dZk3iO+enJcxSvR2pas94OMP4pn4UKD2Bezl+aen/jbjLXt7Tsr/
3G/oL/PnhlzrMyQ7d+B3+b8xLmE3f1yxIC9L509+3LH/Oxz7XLZtYzFd/Gxk
m1z5WZLNzfMM5RCrfX/pN325juVriv0uvLO8C18zlGdaA4foX2fbxuJMR+23
WpZb+HZ09xc/XHnO1I3t15auIT7yY0PbXMYGF//Y/Ja0L3CxkS+1LBNf+fOa
MtiTMq50LTEn3fNYjQ+eZ2jbpyzbNtqhv0tb1h5cbORTLcu831DGmsq1A4Zr
q/PqDMO1J1q2bbxlX6/sgPYFV1q2abxleQ8byqj64K4yXFvNzVwTQf9TLfvK
ve9EbtBSy/aAbezjQUMZiyvX6vIrGJPK8XDGLN1+OuaZKZZtu9Shv8ta1t7F
R/2yQ7mbDOUwh36mdO21mutOK10zylAmMXPWxOW1lImtDn2GM1vS3jVGs8Oh
7BsM5ZBrxVqyGMuqcanHZbg9i66mvELshq+KXS6dTz4xGk2PrL1PjNJF/xWG
cm7Kr+E+YFthYxU+IHwr2GC8l9hk2Ga6ODZjUX9e1iLLdl3moT9gq8Y6f4J1
ss8e9Fcc6phuKIf7XthK+BYGxe4coDL47SbmZeADrs4pdYyVsLg4Phvb9YcO
fEch/rcxlvVwRoApj6u8jsXHxvti80zguyMXaGTp98TVmnyxsDKg3wVod4in
9vhMHwms/yiH+kzxBnzJ1bUdPucL8t9tz68j94n54KeSvSsja+pZXlNWlY9J
vHwEfPi2z2EB6wdTHM+WOQ51mnw/0O/Yhzo+KMPXSXXgh3Jd8zRxp9jHHBgf
10aq9woHbYh7mfxcxBQPDtCeZ548SlOOLrHR2yJrX7Be7OKPMc4cKXjCUaOh
hvJ4J33PEWJdbvK5Mceb8idi0GQjN/XfB5d8ZOzlpnMx0Mg1nw3fqmlNTi7M
vS1rX6Czkdvau3uxo1ZN5zjBb8X+DBj2Lp2s+TfGIuYo1/hKKFUfNfGCtvIP
WQO6xDrgJxblMh/0i348Z38Sz1rdWpP3h5zHhzqsewFaFzY7cbLQM1macD2H
DX1+aVk2Objk4vI+sHZhrMHvPyjDxynsZvK6OKPimS7pXgbbDr8COdCbpd38
W3K5XfPAWQ/9xqOuP0i2fsOnxJpjUyJ6l8FHgk2zotRf9gQcK5ltzl6BWPtI
C5Y76g+smdtek3QC7GD2g7C3ZZLY2wL4H8hLID5IfnHI/iP8QRM87gHrNfZh
p7Y/RAca3S6ZrcEYH2KzVGFvGXvMmL+vlsy2dtl/hx/Mdz875/Hpctq6BX3H
R8O6Hvud5yvGXlgXiDmRa8CeTPy/Tbla+JN994nyu5mS7Tftht70jTnlG5Lt
uY2Rqxqbmy36cUlgHbyHvNv4Cjq5byfF/ddVbM8fYM9/jHg168r5+X1v2ocU
yq5w/oBLvICzL3z2xpkgv5/cBvz+rPV/If+fJ+dLymdPAs+za64qsdpxkeqv
wlzP2sn3rJ8qKZ+9Cgd59gt9yJmNtXefMYk8GV1OXQgpnj1cELpfjbPB8Bv4
7Ftn3cc6jDGtrbP3IMWztwumRuoj6zxy19gzSry3bp4mDkB8eyDXvK29ulWO
S0BnHabczBB4ntkfj68NG455sFvnruj27qZAG+dmp8ZQAjrriJGzkTopfnun
YHfwVTaR8ncmXc9z3BW5LwGddYTGDIjD8X639f0FxsfQM7yeTkDnOkLOXiXn
AX9B+fsjMfffV78/QnzySc+y8Pd12sdsg8/Zw2jMN3Dq7F7snFjf3zmypnzq
ZG+NT56f7jyibmKbK08eON96sskNjfE9B5szR/gW1hqx//7URIsyO03T2fP4
hsmXdYnHkRe9vaFcE+RIH+hQH+8wfqNnG8o9PgG9q+jyt8it4JyrulxkG0LO
YTvbs058GzNFH+9se4+vD0Ol9jHm4ne33eNmotvf35wsWWynHGdre5+dD4zV
+JH5Rmtsf/4xHvpPjtyGQyX7ti65ijZzSqehv/u3WP51Dtpf32I7iOlMSkDv
TkM+Z7HvzkSvfn+8E5xvoX/o+XF70MO6xHQu0xbx35+xBzumGfSflkD7eoG6
70zemkC7egVyfMox9p3ifq7nHsK4sKT/ii7U3+uwn2Nbjs8Z/3sI55ScbrfD
m/8Cm+a3ew==
               "], {{0, 0}, {96, 100}}, {0, 255}, ColorFunction -> 
               RGBColor], {
              ImageSize -> {Automatic, 12}, ImagePadding -> {{5, 0}, {0, 0}}, 
               BaselinePosition -> Scaled[0.25], 
               PlotRange -> {{0, 96}, {0, 100}}, 
               ImageSizeRaw -> {96., 100.}}], 
             "Wolfram Demonstration Repository Reviewer"}, 
            "PrettyTooltipTemplate"]}}, 
         GridBoxAlignment -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, AutoDelete -> 
         False, GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"]& )}], 
   Cell[
    StyleData["CommentReplyIcon"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.076923], 
         FaceForm[{#, 
           Opacity[1.]}], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{1.5, 7.5}, {6.5, 11.5}, {
          6.5, 3.5}}}], 
         FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJw9U2tIVEEUvq5iVkttZmdfuo/ZbQukJGKVqPBLUTGJ0h9hVLIJRYhUVJj2
AjGRWCKiF0llZWRCSEnZExEJ06CotaiQyH7EIrthT3u6NXPn3jswnDlzzzlz
vu8711u9vWJzsqIoSXwv5tuk6IsgrQvOnLf+1CRC5ZKbg3WJAIJV90rNJoJF
XOR6sebI6W3pyXq8DxccIoGwa+uxj/v/McxNbTxZOJ3w4Rkb+ZVgWGk2ZbcQ
Yfm0V+07Jhm6St7vzVhI2JfBT78ZCkI8cj2hqe/xxaIJJm0PoWEssCgtzvCc
lzlYYwXP5iUYHpXlHV4xasXLeh4wyKCWX2fDqcJwbfQ+w4F83vGQDT1fJ1/U
dzJ842bsih1XB3hiI0NzrPyOq9mBPb1tjpyNDBXci5U7MVQnLhji4nMsE+9W
c6ARL3i3XSWbXNiiLi8EzPxbbqydsaD73LgHJ2wp/OiFoKVJ8Ui+Chha6M3T
H8NZUMPm+XB9p8h0QtATjvtxqUh0SBgV76QHZN+lszReA5pNQ66o1+8HV6O3
rdWCBIcTuKHxHJ4NQdO1sx4Nxxy4VYBug2dVt4lMnB/vGCi7TSgWz/504Etk
VbXlNSGkCmWHqFYbJXziYXlT7VKXEdLq2DDMwyvvksTZZ5W4OgiCjmCVFTUP
dh+3HSKJ8y9hqUogIfqn83PkCUndQoTLQsZ2gpperL3fQJLXIMEn5F5GaD3D
l50g2O3OIkhiCUf7v8/fMJOMuRPTmT2FjLlU+0ghY471+dV93epzr/sPPaJz
u3Ev65sNX/8//gP5Ei2u
          "]]}, AspectRatio -> Automatic, ImageSize -> {13., 13.}, 
        PlotRange -> {{0., 13.}, {0., 13.}}]& )}], 
   Cell[
    StyleData["CommentCellLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            StyleBox[#, FontSize -> 11], "\[SpanFromLeft]"}, {
            StyleBox[
             DynamicBox[
              ToBoxes[
               DateString[
                TimeZoneConvert[
                 DateObject[#2, TimeZone -> 0]], {
                "Month", "/", "Day", "/", "Year", " ", "Hour24", ":", 
                 "Minute"}], StandardForm], SingleEvaluation -> True], 
             FontSize -> 9], 
            ItemBox[
             ButtonBox[
              TagBox[
               StyleBox[
                TemplateBox[{"\"Reply \[RightGuillemet]\"", 
                  StyleBox["\"Reply \[RightGuillemet]\"", "HyperlinkActive"], 
                  BaseStyle -> "Hyperlink"}, "MouseoverTemplate"], FontSize -> 
                9], 
               MouseAppearanceTag["LinkHand"]], BaseStyle -> "Hyperlink", 
              ButtonFunction :> (SelectionMove[
                 ParentCell[
                  EvaluationCell[]], After, Cell]; 
               DefinitionNotebookClient`CommentInsert[]), Evaluator -> 
              Automatic, Method -> "Queued"], Alignment -> Right]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{0}}}], 
         "Grid"], "CommentLabel", ShowStringCharacters -> False]& )}], 
   Cell[
    StyleData["OrangeButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (FrameBox[
        ButtonBox[
         StyleBox[#, "Text", FontFamily -> "Source Sans Pro", FontWeight -> 
          "SemiBold", FontTracking -> "Condensed", FontSize -> 13, FontColor -> 
          Dynamic[
            FEPrivate`If[
             CurrentValue[Enabled], 
             GrayLevel[1], 
             RGBColor[0.88722, 0.77308, 0.76696]], Evaluator -> "System"], 
          StripOnInput -> False], ButtonFunction :> 
         With[{RSNB`nb$ = ButtonNotebook[]}, 
           If[#4, CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
             ProgressIndicator[Appearance -> "Necklace"]]; 
           With[{RSNB`$cp$ = $ContextPath}, 
             Quiet[
              
              Block[{$ContextPath = RSNB`$cp$, 
                ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                False, DefinitionNotebookClient`$ButtonCodeID = None}, 
               Internal`WithLocalSettings[
                DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                   ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                   "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                 Annotation[
                 DefinitionNotebookClient`$ButtonCodeID = 2045406886999866622; 
                  DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    #2[]]]], 
                  DefinitionNotebookClient`ButtonCodeID[2045406886999866622]],
                  DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
               Null]]]; 
           CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = ""; 
           Null], FrameMargins -> {{5, 5}, {0, 0}}, 
         Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYI9uuJUYJobchmTZGFisJTpAUhCMgGihBvyC5t0Tly
Qj0SgpgIKA6UJWjIdi3RSVJYtMMRUBaoBo8hu3VEJ0vjMwGCgGqAKnEZMl8B
uy8wEVAlVkOAjiTSBAiCewrZkKXKwiQZAlSPach0GWL9AkFA9RCNkCQNYU/A
GymYCKgebggQUG4IVVxC3TChSuxQJZ1QJcVSK+9QJRdTqzyhVslGKqKiIfgB
MfUOAGAkpIY=
             "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
             Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYI9uuJUYJobchOXaENOjyrtDkgCMgGihBvyB5dkXXa
3Mu12TARUBwoS9CQ3brCK7XZsZoAQUBZoBo8huzVFQW6HI8JEARUA1SJyxCg
xwmaAEFAlVgNATqSSBMgCO4pZEM26/CRZAhQPaYha7Q5STIEqB6iEZKkIWz8
kYI1muCGAAHlhlDFJdQNE6rEDlXSCVVSLLXyDlVyMbXKE2qVbKQiKhqCHxBT
7wAAuk3GZQ==
             "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
             Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYI9uuJUYJobcjZGK8nK+Z9uXsTgoBsoAjxhhx11H61
ZwtWjwPFgbIEDTnha/n96SOg4K8vn67O6tgRag5BQDZQBCgOlAWqwWPIYWuV
b4/ug2w8e3S9nexybTZkBBQBigNlgWqAKnEZ8mz9MiD3zaXTKw150UyAIKA4
UBaoBqgSqyEnfMz//fnz59fPTe7qWE2AIKAsUA1QJVA9piH3pnUB2XfWzMNj
AgQB1QBVAtVjGvLhwikQO82HoCFANUCVQPUQjZAkDWH/eP0SyMYMT0wEVANU
CVQPNwQIKDeEKi6hbphQJXaokk6okmKplXeokoupVZ5Qq2QjFVHREPyAmHoH
AG0Lmsg=
             "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
             Interleaving -> True]}, Background -> 
         RGBColor[0.7508, 0.17868, 0.085283], Method -> "Queued", 
         ImageSize -> {All, 23}, Evaluator -> Automatic], FrameStyle -> 
        Directive[
          RGBColor[0.7508, 0.17868, 0.085283], 
          AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> False, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["SuggestionGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        FrameBox[
         AdjustmentBox[
          TagBox[
           GridBox[{{
              
              TemplateBox[{#2, #3, {16., 16.}, {{1., 17.}, {1., 17.}}}, 
               "SuggestionIconTemplate"], 
              
              PaneBox[#, ImageSizeAction -> "ShrinkToFit", BaselinePosition -> 
               Baseline, ImageSize -> Full], 
              RowBox[{
                AdjustmentBox[
                 TemplateBox[{
                   ActionMenuBox[
                    TagBox[
                    PaneSelectorBox[{False -> GraphicsBox[{
                    EdgeForm[
                    Directive[
                    GrayLevel[1, 0], 
                    Thickness[0.025]]], 
                    FaceForm[#4], 
                    
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], #5, 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0], True -> 
                    GraphicsBox[{
                    EdgeForm[
                    Directive[#5, 
                    Thickness[0.025]]], 
                    FaceForm[#2], 
                    
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], 
                    GrayLevel[1], 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], #6, Appearance -> None, 
                    Method -> "Queued"], "\"View suggestions\""}, 
                  "PrettyTooltipTemplate"], BoxBaselineShift -> -0.5], 
                " "}]}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
            False, GridBoxItemSize -> {
             "Columns" -> {Automatic, Automatic, Fit}, 
              "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
          BoxMargins -> {{0.25, -0.5}, {0.15, -0.15}}], 
         RoundingRadius -> {13, 75}, Background -> #4, FrameStyle -> None, 
         FrameMargins -> {{0, 8}, {0, 0}}, ImageMargins -> {{0, 0}, {5, 5}}, 
         StripOnInput -> False], "Text", FontColor -> #5, FontSize -> 14, 
        FontFamily -> "Source Sans Pro", FontWeight -> "SemiBold", 
        FontTracking -> "Plain", 
        PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
        LineBreakWithin -> False]& )}], 
   Cell[
    StyleData["SuggestionIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.055556], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO
m+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD
jI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh
MRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d
            "]]}, 
          FaceForm[#]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{8.1753, 7.4169}, {
             7.7969, 11.308}, {7.7969, 13.38}, {10.12, 13.38}, {10.12, 
             11.308}, {9.7415, 7.4169}, {8.1753, 7.4169}}, CompressedData["
1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA
qBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed
HTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2
qB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa
m8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5
N5G6
             "]}]}, 
          FaceForm[#2]]}, ImageSize -> #3, PlotRange -> #4, AspectRatio -> 
        Automatic, BaselinePosition -> Scaled[0.1]]& )}], 
   Cell[
    StyleData["FormEditValuesButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TemplateBox[{
         TagBox[
          PaneBox[
           PaneSelectorBox[{False -> GraphicsBox[{
                Thickness[0.066667], 
                FaceForm[{
                  GrayLevel[0.75], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
                   3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
                   3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
                   0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
                   3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
                   0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
                   3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, {{{7.5, 
                  5.6426}, {6.475, 5.6426}, {5.643, 6.4746}, {5.643, 
                  7.4996}, {5.643, 8.5256}, {6.475, 9.3576}, {7.5, 9.3576}, {
                  8.525, 9.3576}, {9.357, 8.5256}, {9.357, 7.4996}, {9.357, 
                  6.4746}, {8.525, 5.6426}, {7.5, 5.6426}}, {{7.5, 10.287}, {
                  5.962, 10.287}, {4.714, 9.0386}, {4.714, 7.4996}, {4.714, 
                  5.9616}, {5.962, 4.7136}, {7.5, 4.7136}, {9.038, 4.7136}, {
                  10.286, 5.9616}, {10.286, 7.4996}, {10.284, 9.0386}, {9.038,
                   10.285}, {7.5, 10.287}}, CompressedData["
1:eJxTTMoPSmViYGAwBGIQHdN/6KvGHQ2Hu1tbai4YCzn4mHc6JqSqOZhLHYhW
cBR2sNxyomxfvIrD+5OHndZm8jncPPc9+PFTFYfHx2fsnjaBxSENBNSUHRKN
Qg20VjI62JvG7fLsUXZYuveguFowk8PZMyCg6LCZp3BN9+1/9tb3/Xun5yk4
mDRsd2h6xO4AtO3pBSVpOB9sXpoEXH3jVOfunOcicPOMQWCzKNw+vySBCEsT
Ibh7gIYLNTsIw917Uen2z7osPrh/QN6N6WeB+9cFaPpvoDmH2paHn9ok6tAu
BvIhk4PAy+3rmYH2lu+bL6V/95/91523uv6mSjg8rBJZ5/6Q3cH4yEa9PGVp
OJ+Zs0s+GegvmHqlvtJC6bOKcPOmfGOLnwEMF5h9u9X5ubcCww3mHrC3n6nA
3QsLd5h/wOEOjBeYf2HxBgsP/bsqbI1TNR1g4QWMBR6mbE14eIKdpaIFD28P
kMPZNRxg8QHjw+ILph4WnyjmAd0Nsw+WHmDugbkb5l5YeoKJw9TB/AszBxYe
MHtg4WXIsUYmCugOWHjC3AkLbxgfFh8w9bD4gpkHi0+YfbD4Rk//AAQ8Rd0=

                  "], CompressedData["
1:eJxdVA1IU1EYHStG2VxrxByaa073dFtRkiYheW9/EmhkGaWW/WjaEs1ICxEJ
zX6sCCuzX7USSiLRKHEWESWSaVFWhpkWlaiZWk5Lnab19p7nCj0Yb/fx3e/n
nPMdj5jk9XFSiUSyg/853r/GGtO6ODO1z+yylme70ePLtrc3fDXSwkyu+qi3
Oztn8ceSJi1FvC72R9TyIB3Nyl9xMrHTTJcHfWsufaCjT+qvr6pcNI+evjbs
21HmQbfkVv/2aTVTF+tryadDevp2TYwy4r6ZDsm2XQx9p6fH1M0vh96aqER4
DDSpc/SW7axJvFdgoNNK50TtDDTRthtXanR7OSqXmo+pI40TdTlapT3SvS7N
hxb9LHkaYuVoe4O+xT7OiX3Gc9SzxX4w4Q9HjY6EFo7GC89knDJiScWzSo4G
Vw7wN3zEex2TdVD3vKNc4GRfIwcTHqbmmeiroXA+xIs+58ceGDPRsFMX9qiy
9eL3FjOtO/Doqmu5B8PlRwbx38rjpJh/t/Anj5twb+kEjt5m2v+GB+i9lrrw
sIS3GcU4ngecHVU1h91YvEHm+OfK8iWrsh/XX9ewetuFQdWsnxhhYBXrd/WX
9NlltUo2T4rlTG8GUbB5fQUC5AwPfpoFH72cGV4ingqG5/48zdSNCjnDW+h3
qpzxMZenq0orY3yJ+EkZn2L+cQLcC2p0d/ZZRglwrw0J4CVpJ9CL0K5/P4Ge
xPw2Ar0NO9LX9BDoUTz3EehVxGOQQM8OuTxMlTC944x9QDz2BfkqIn/f/3DC
ldXT5DdOtxRrWD9OFn1i2oia9et7yaTJ36Bm8+SGp3pd+DuLzWuLfREd8kzJ
8Hia5JdppQqG19ryc3E5sXKGZ2vwlLQZPC/A+7CzI0LB+EhffDto02YF4ysn
Npq/Imd8Lp3XeLnDXcb41o8N7v9cIGV6GOntfrzEc5xAL02q/mWv4kcJ9BT2
R5PSpBom0NvC0JtOwQYbgR5X7k7uO1LXQ6BXv+KKgOHqPgI9F201PlfWDhLo
3X5t173vKRK2DzhjXxCPfUI+7BvqYR/RD/YV/UJXmAe6w7zwA+ABvwBe8BPg
Cb8B3tgL8AG/Al/YK/AJvwPf8EPoAX4JvcBPoSf4LfQGH4Ae4dfQ6//+/w8B
rcVF
                  "]}]}, AspectRatio -> Automatic, ImageSize -> {15., 15.}, 
               PlotRange -> {{0., 15.}, {0., 15.}}], True -> GraphicsBox[{
                Thickness[0.066667], 
                FaceForm[{
                  GrayLevel[0.25], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
                   3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
                   3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
                   0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
                   3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
                   0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
                   3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, {{{7.5, 
                  5.6426}, {6.475, 5.6426}, {5.643, 6.4746}, {5.643, 
                  7.4996}, {5.643, 8.5256}, {6.475, 9.3576}, {7.5, 9.3576}, {
                  8.525, 9.3576}, {9.357, 8.5256}, {9.357, 7.4996}, {9.357, 
                  6.4746}, {8.525, 5.6426}, {7.5, 5.6426}}, {{7.5, 10.287}, {
                  5.962, 10.287}, {4.714, 9.0386}, {4.714, 7.4996}, {4.714, 
                  5.9616}, {5.962, 4.7136}, {7.5, 4.7136}, {9.038, 4.7136}, {
                  10.286, 5.9616}, {10.286, 7.4996}, {10.284, 9.0386}, {9.038,
                   10.285}, {7.5, 10.287}}, CompressedData["
1:eJxTTMoPSmViYGAwBGIQHdN/6KvGHQ2Hu1tbai4YCzn4mHc6JqSqOZhLHYhW
cBR2sNxyomxfvIrD+5OHndZm8jncPPc9+PFTFYfHx2fsnjaBxSENBNSUHRKN
Qg20VjI62JvG7fLsUXZYuveguFowk8PZMyCg6LCZp3BN9+1/9tb3/Xun5yk4
mDRsd2h6xO4AtO3pBSVpOB9sXpoEXH3jVOfunOcicPOMQWCzKNw+vySBCEsT
Ibh7gIYLNTsIw917Uen2z7osPrh/QN6N6WeB+9cFaPpvoDmH2paHn9ok6tAu
BvIhk4PAy+3rmYH2lu+bL6V/95/91523uv6mSjg8rBJZ5/6Q3cH4yEa9PGVp
OJ+Zs0s+GegvmHqlvtJC6bOKcPOmfGOLnwEMF5h9u9X5ubcCww3mHrC3n6nA
3QsLd5h/wOEOjBeYf2HxBgsP/bsqbI1TNR1g4QWMBR6mbE14eIKdpaIFD28P
kMPZNRxg8QHjw+ILph4WnyjmAd0Nsw+WHmDugbkb5l5YeoKJw9TB/AszBxYe
MHtg4WXIsUYmCugOWHjC3AkLbxgfFh8w9bD4gpkHi0+YfbD4Rk//AAQ8Rd0=

                  "], CompressedData["
1:eJxdVA1IU1EYHStG2VxrxByaa073dFtRkiYheW9/EmhkGaWW/WjaEs1ICxEJ
zX6sCCuzX7USSiLRKHEWESWSaVFWhpkWlaiZWk5Lnab19p7nCj0Yb/fx3e/n
nPMdj5jk9XFSiUSyg/853r/GGtO6ODO1z+yylme70ePLtrc3fDXSwkyu+qi3
Oztn8ceSJi1FvC72R9TyIB3Nyl9xMrHTTJcHfWsufaCjT+qvr6pcNI+evjbs
21HmQbfkVv/2aTVTF+tryadDevp2TYwy4r6ZDsm2XQx9p6fH1M0vh96aqER4
DDSpc/SW7axJvFdgoNNK50TtDDTRthtXanR7OSqXmo+pI40TdTlapT3SvS7N
hxb9LHkaYuVoe4O+xT7OiX3Gc9SzxX4w4Q9HjY6EFo7GC89knDJiScWzSo4G
Vw7wN3zEex2TdVD3vKNc4GRfIwcTHqbmmeiroXA+xIs+58ceGDPRsFMX9qiy
9eL3FjOtO/Doqmu5B8PlRwbx38rjpJh/t/Anj5twb+kEjt5m2v+GB+i9lrrw
sIS3GcU4ngecHVU1h91YvEHm+OfK8iWrsh/XX9ewetuFQdWsnxhhYBXrd/WX
9NlltUo2T4rlTG8GUbB5fQUC5AwPfpoFH72cGV4ingqG5/48zdSNCjnDW+h3
qpzxMZenq0orY3yJ+EkZn2L+cQLcC2p0d/ZZRglwrw0J4CVpJ9CL0K5/P4Ge
xPw2Ar0NO9LX9BDoUTz3EehVxGOQQM8OuTxMlTC944x9QDz2BfkqIn/f/3DC
ldXT5DdOtxRrWD9OFn1i2oia9et7yaTJ36Bm8+SGp3pd+DuLzWuLfREd8kzJ
8Hia5JdppQqG19ryc3E5sXKGZ2vwlLQZPC/A+7CzI0LB+EhffDto02YF4ysn
Npq/Imd8Lp3XeLnDXcb41o8N7v9cIGV6GOntfrzEc5xAL02q/mWv4kcJ9BT2
R5PSpBom0NvC0JtOwQYbgR5X7k7uO1LXQ6BXv+KKgOHqPgI9F201PlfWDhLo
3X5t173vKRK2DzhjXxCPfUI+7BvqYR/RD/YV/UJXmAe6w7zwA+ABvwBe8BPg
Cb8B3tgL8AG/Al/YK/AJvwPf8EPoAX4JvcBPoSf4LfQGH4Ae4dfQ6//+/w8B
rcVF
                  "]}]}, AspectRatio -> Automatic, ImageSize -> {15., 15.}, 
               PlotRange -> {{0., 15.}, {0., 15.}}]}, 
            Dynamic[
             CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
            0], ImageSize -> {Automatic, 15}, ImageSizeAction -> 
           "ResizeToFit"], 
          MouseAppearanceTag["LinkHand"]], "\"Edit values\""}, 
        "PrettyTooltipTemplate"]& )}], 
   Cell[
    StyleData["HintPodTitleBar"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         GrayLevel[0.97], 
         FilledCurveBox[
          BezierCurve[{
            Offset[{0, -3}, {1, 1}], 
            Offset[{0, -1.3443}, {1, 1}], 
            Offset[{-1.3443, 0}, {1, 1}], 
            Offset[{-3, 0}, {1, 1}], 
            Offset[{-3, 0}, {1, 1}], 
            Offset[{3, 0}, {-1, 1}], 
            Offset[{3, 0}, {-1, 1}], 
            Offset[{1.3443, 0}, {-1, 1}], 
            Offset[{0, -1.3443}, {-1, 1}], 
            Offset[{0, -3}, {-1, 1}], 
            Offset[{0, -3}, {-1, 1}], {-1, -1}, {-1, -1}, {-1, -1}, {1, -1}, {
            1, -1}}]], 
         InsetBox[
          FormBox[
           StyleBox[
           "\"Notebook Analysis\"", FontColor -> GrayLevel[0.4], FontColor -> 
            GrayLevel[0.4], FontFamily -> "Source Sans Pro", FontWeight -> 
            Plain, FontSize -> 13, StripOnInput -> False], TraditionalForm], 
          Offset[{8, 0}, {-1, 0}], 
          NCache[
           ImageScaled[{0, 1/2}], 
           ImageScaled[{0, 0.5}]]], 
         TagBox[
          TagBox[
           TooltipBox[{
             GrayLevel[0.6], 
             DiskBox[
              Offset[{-13, -10}, {1, 1}], 
              Offset[6]], 
             GrayLevel[0.97], 
             AbsoluteThickness[1.5], 
             CapForm["Round"], 
             LineBox[{{
                Offset[{-15, -8}, {1, 1}], 
                Offset[{-11, -12}, {1, 1}]}, {
                Offset[{-15, -12}, {1, 1}], 
                Offset[{-11, -8}, {1, 1}]}}]}, 
            FrameBox[
             StyleBox[
             "\"Close analysis pod\"", "Text", FontColor -> 
              RGBColor[0.53725, 0.53725, 0.53725], FontSize -> 12, FontWeight -> 
              "Plain", FontTracking -> "Plain", StripOnInput -> False], 
             Background -> RGBColor[0.96078, 0.96078, 0.96078], FrameStyle -> 
             RGBColor[0.89804, 0.89804, 0.89804], FrameMargins -> 8, 
             StripOnInput -> False], TooltipDelay -> 0.1, 
            TooltipStyle -> {Background -> None, CellFrame -> 0}], 
           Annotation[#, "Close analysis pod", "Tooltip"]& ], 
          EventHandlerTag[{"MouseClicked" :> NotebookDelete[
              EvaluationCell[]], Method -> "Preemptive", PassEventsDown -> 
            Automatic, PassEventsUp -> True}]]}, AspectRatio -> Full, 
        ImageSize -> {Full, 20}, PlotRange -> {{-1, 1}, {-1, 1}}, 
        ImageMargins -> {{0, 0}, {0, 0}}, 
        ImagePadding -> {{0, 0}, {0, 0}}]& )}], 
   Cell[
    StyleData["HintPodDelimiterTop"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         AbsoluteThickness[1], 
         GrayLevel[0.85], 
         CapForm["Round"], 
         LineBox[{{-1, 0}, {1, 0}}]}, AspectRatio -> Full, 
        PlotRange -> {{-1, 1}, {-1, 1}}, ImagePadding -> {{0, 0}, {0, 0}}, 
        ImageSize -> {Full, 2}, BaselinePosition -> Scaled[0.1], 
        ImageMargins -> {{0, 0}, {4, 0}}]& )}], 
   Cell[
    StyleData["HintPodDelimiterBottom"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         AbsoluteThickness[1], 
         GrayLevel[0.85], 
         CapForm["Round"], 
         LineBox[{{-1, 0}, {1, 0}}]}, AspectRatio -> Full, 
        PlotRange -> {{-1, 1}, {-1, 1}}, ImagePadding -> {{0, 0}, {0, 0}}, 
        ImageSize -> {Full, 2}, BaselinePosition -> Scaled[0.1], 
        ImageMargins -> {{0, 0}, {0, 4}}]& )}], 
   Cell[
    StyleData["HintPodFooter"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         GrayLevel[0.97], 
         FilledCurveBox[
          BezierCurve[{{-1, 1}, {-1, 1}, 
            Offset[{0, 3}, {-1, -1}], 
            Offset[{0, 3}, {-1, -1}], 
            Offset[{0, 1.3443}, {-1, -1}], 
            Offset[{1.3443, 0}, {-1, -1}], 
            Offset[{3, 0}, {-1, -1}], 
            Offset[{3, 0}, {-1, -1}], 
            Offset[{-3, 0}, {1, -1}], 
            Offset[{-3, 0}, {1, -1}], 
            Offset[{-1.3443, 0}, {1, -1}], 
            Offset[{0, 1.3443}, {1, -1}], 
            Offset[{0, 3}, {1, -1}], 
            Offset[{0, 3}, {1, -1}], {1, 1}, {1, 1}}]], 
         InsetBox[
          BoxData[
           FormBox[
            TemplateBox[{
              StyleBox[
               TemplateBox[{3}, "Spacer1"], FontColor -> GrayLevel[0.4], 
               FontFamily -> "Source Sans Pro", FontWeight -> Plain, FontSize -> 
               12, StripOnInput -> False], 
              
              StyleBox[#, FontColor -> GrayLevel[0.4], FontFamily -> 
               "Source Sans Pro", FontWeight -> Plain, FontSize -> 12, 
               StripOnInput -> False], 
              StyleBox[
               TemplateBox[{5}, "Spacer1"], FontColor -> GrayLevel[0.4], 
               FontFamily -> "Source Sans Pro", FontWeight -> Plain, FontSize -> 
               12, StripOnInput -> False]}, "RowDefault"], TraditionalForm]], 
          
          Offset[{5, 2.5}, {-1, 0}], {-1, 0}]}, AspectRatio -> Full, 
        ImageSize -> {Full, 21}, PlotRange -> {{-1, 1}, {-1, 1}}, 
        ImageMargins -> {{0, 0}, {0, 3}}, 
        ImagePadding -> {{0, 0}, {0, 0}}]& )}], 
   Cell[
    StyleData["HintPodMenuItems"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (
       TemplateBox[{#, FrameMargins -> 3, Background -> GrayLevel[1], 
         RoundingRadius -> 0, FrameStyle -> Directive[
           AbsoluteThickness[1], 
           RGBColor[0.75686, 0.82745, 0.88235]], ImageMargins -> #2}, 
        "Highlighted"]& )}], 
   Cell[
    StyleData["HintPodActionMenuItem"], 
    TemplateBoxOptions -> {DisplayFunction -> (ButtonBox[
        TemplateBox[{
          TagBox[
           GridBox[{{#, 
              TemplateBox[{7}, "Spacer1"], #2}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], FrameStyle -> 
          None, RoundingRadius -> 0, FrameMargins -> {{5, 2}, {2, 2}}, 
          ImageSize -> Full, ImageMargins -> {{0, 0}, {0, 0}}, Background -> 
          Dynamic[
            If[
             CurrentValue["MouseOver"], 
             GrayLevel[0.96], 
             GrayLevel[1.]]]}, "Highlighted"], ButtonFunction :> 
        ReleaseHold[#3], 
        Appearance -> {
         "Default" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True], "Pressed" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True]}, Method -> 
        "Queued", Evaluator -> Automatic]& )}], 
   Cell[
    StyleData["HintPodDisabledMenuItem"], 
    TemplateBoxOptions -> {DisplayFunction -> (ButtonBox[
        TemplateBox[{
          TagBox[
           GridBox[{{#, 
              TemplateBox[{7}, "Spacer1"], 
              StyleBox[#2, FontOpacity -> 0.4]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], FrameStyle -> 
          None, RoundingRadius -> 0, FrameMargins -> {{5, 2}, {2, 2}}, 
          ImageSize -> Full, ImageMargins -> {{0, 0}, {0, 0}}, Background -> 
          GrayLevel[1.]}, "Highlighted"], ButtonFunction :> Null, 
        Appearance -> {
         "Default" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True], "Pressed" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True]}, Method -> 
        "Queued", Evaluator -> Automatic, Enabled -> False]& )}], 
   Cell[
    StyleData["HintPodActionLabel"], 
    TemplateBoxOptions -> {DisplayFunction -> (PaneBox[
        StyleBox[#, FontColor -> GrayLevel[0.2], FontFamily -> 
         "Source Sans Pro", FontWeight -> Plain, FontSize -> 13, LineIndent -> 
         0, StripOnInput -> False], FrameMargins -> 0, ImageMargins -> 0, 
        BaselinePosition -> Baseline, ImageSize -> Full]& )}], 
   Cell[
    StyleData["HintPodMenuDelimiter"], 
    TemplateBoxOptions -> {DisplayFunction -> (PaneBox[
        StyleBox[
         GraphicsBox[{
           CapForm["Round"], 
           GrayLevel[0.9], 
           AbsoluteThickness[1], 
           LineBox[{{-1, 0}, {1, 0}}]}, AspectRatio -> Full, 
          PlotRange -> {{-1, 1}, {-1, 1}}, ImageMargins -> {{0, 0}, {2, 2}}, 
          ImagePadding -> {{5, 5}, {0, 0}}, ImageSize -> {Full, 2}], 
         LineIndent -> 0, StripOnInput -> False], FrameMargins -> 0, 
        ImageMargins -> 0, BaselinePosition -> Baseline, ImageSize -> 
        Full]& )}], 
   Cell[
    StyleData["HintPodIconChevron"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         GrayLevel[0.2], 
         AbsoluteThickness[1.8], 
         CapForm["Round"], 
         JoinForm["Miter"], 
         LineBox[{{-0.5, 1}, {0.5, 0}, {-0.5, -1}}]}, AspectRatio -> Full, 
        BaselinePosition -> Bottom, ImageMargins -> {{0, 4}, {0, 0}}, 
        ImageSize -> {5.6, 7.7}]& )}], 
   Cell[
    StyleData["HintPodIconPopOut"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
          0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIlIGYC4h1yra8Dd6g4rHN/WCWip+KwRiYqxXq+isNk
CZYwvlwEDROHqYPpKwUrUHFgAIEDKg5nzwDBG2VU/hlluPogMEMCzm9kOdpv
aC6OJi/mINR84NRCVwQfIq8M519wufHhi5Yymn4lNPOVHNLAQBHO/6YR03/o
K5eDB9Ab69wFHJoeHZ+xexqng8r0/xPqfvM5cG9dVnl8JacD0FO6m+byOPxL
/f4kUZHbQZr3ge4EBW6HD2IeAX9m8Dhkzyqfs2gxp8ONxmK3Kd/4HOYsUt75
p50Tbi6YesgF9b8ShJ+oCOfD3Anjw/zx9JP8pXx7hD9h4QfjqxtyAKNCBU0e
EY4wPqr5iHh4/nvlx0tnVRyYObvkk98pOwA9+X75MRUHWWD03udHxCssngGf
XO7X
          "]]}, AspectRatio -> Automatic, ImageSize -> {14., 14.}, 
        PlotRange -> {{0., 13.62}, {0., 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconWrench"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         GrayLevel[0.4], 
         AbsoluteThickness[1], 
         Opacity[1.], 
         JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIGYCYmWv6mZ9n3/2cmJZvp/5BBzci37yv9wu6/Au
ysnuhaQynG8at8uT55AGXJwBDHQdPl3yTRKIUIfzo1Ks7/vzajiosjVOdfbW
ccjaUzJZokUFrv8ySLmlqoPbts9/r1iowsVh6mD6zp4BAh4NnPbA3AHTr+ss
8/rRNoS7YXyYv2D+7H/ySf5SPrdD7D/nX29ff7H/6hXZZnGNGc6HqYPRMPED
b+bZ6FxBqAPpOprL7YAefgCtVISU
          "], CurveClosed -> {1}]}, AspectRatio -> Automatic, 
        BaselinePosition -> Scaled[0.2], ImagePadding -> 0.5, 
        ImageSize -> {16., 16.}, PlotRange -> {{0., 16.}, {0., 16.}}]& )}], 
   Cell[
    StyleData["HintPodIconInfo"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4,
            3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
           3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3,
            3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{6.81, 13.}, {
           3.3914, 13.}, {0.62, 10.229}, {0.62, 6.81}, {0.62, 3.3914}, {
           3.3914, 0.62}, {6.81, 0.62}, {10.229, 0.62}, {13., 3.3914}, {13., 
           6.81}, {13., 10.229}, {10.229, 13.}, {6.81, 13.}}, CompressedData["

1:eJxTTMoPSmViYGCQB2IQbct1fXGBrbRD6+vAHXKtvA7r3B9WiayTdoCI8zgc
/qoR039IHkoLOjCAgYKDB0iZu4CDPFijgsOsmSDAC1UnCzWPE0rLQMXZHV6x
mAia1Ug56E1Y8MMwjdXh685bXX9VJRx4Jq9sCvRkcTh7BgREHfoPgTSwOAQB
db8OFHYAO4eLFeo+IQcRMIMLzoe4h9dBW2LqFc4MYYd4zdMCx38JOviYdzom
pIo4PJgjuHSvo6jDkgKQz0QdCsEelHDQjAHZJAa1VxIqLwH3Jzofok8S4i9W
RQews67LQsJhnoKDMRjIQ9Q3wMJJwQFMJULDSRJmrhzUPKh6Blmof+QcwM6K
kXb4Bgq2rzJQcXFovMhA5UUdciqqluo0SztsKMqY+NZG2OHV1E08hTrSDquA
oTmXQdABPX4BaWq/EA==
           "], {{8.81, 9.79}, {8.8101, 9.5122}, {8.5878, 9.2854}, {8.31, 
           9.28}, {7.51, 9.28}, {7.2283, 9.28}, {7., 9.5083}, {7., 9.79}, {7.,
            10.62}, {7.0054, 10.898}, {7.2322, 11.12}, {7.51, 11.12}, {8.35, 
           11.12}, {8.6239, 11.115}, {8.8447, 10.894}, {8.85, 10.62}}}]}, 
        AspectRatio -> Automatic, ImagePadding -> 0.5, 
        ImageSize -> {14., 14.}, 
        PlotRange -> {{0., 13.62}, {0., 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconNone"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (
       GraphicsBox[{}, AspectRatio -> Automatic, ImageSize -> {16., 16.}, 
        PlotRange -> {{0., 16.}, {0., 16.}}, BaselinePosition -> Scaled[0.2], 
        ImagePadding -> 0.5]& )}], 
   Cell[
    StyleData["HintPodIconIgnoreAlways"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         EdgeForm[None], 
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJTIGYCYpF17g+rROQcbLmuLy6wlXaoBguoOvQf+qoR
w6/i8CZwh1zralWH4oyJb2vsVRx0N819v/yYqoO0/l0VtkYEv/U1UOFRBP/D
8mPe5pyqcP0z8oSaD3ipws2H0famcbs8fVQd2BqnOnevUXUAa+dWdUgSiLDc
ckLVwQPounXHVeB8kK1TmxH8gN7peULOKnD9EP+owM2H+QvmzyUFIBEeuHxC
mb+c2CtuuP75NjpXZj3jgpsP0s11nRPO5+feuqzyOAec73dxYsy/w+xw/WDr
uNjh5n9MPhPr7cEG93+V2Wq78Nus8PCB8WHhB+PDwhemHxb+MPNh8ZMGBhJw
f8Lkv2nEAJXwOGyu/rQh4DWrwwrTs9Z+F7kdvHiYtNunsTrYgrwpy+XQteHh
y6lGbA6HxNWCWRdzOJwKObhiyTk2B3fmCm4VDXaouRwOEaeMjmzUY4OHhybI
eA02eHgt/GH4bJ0qm4PT+bSrz4Hh+Z0tfobPVDZ4eIOVx7DD3QlzNwMYIPx1
smzffCl9FUg4u7M5hPEBU1S+isPs0Pmr195gdTAGgc0qUHewOswDJhfv7yoO
/g7CiYcvszoAU9vrQAtVh6V+QAFnNqg9iHj5dMk3SWAGIt78wBGJiFcYH+ZP
GB/mT5h+WLqBmQ/zJwC4F0s3
          "]]}, AspectRatio -> Automatic, ImageMargins -> {{0, 0}, {0, 2}}, 
        ImageSize -> {14., 14.}, 
        PlotRange -> {{-0.5, 13.62}, {-0.5, 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconIgnoreInCell"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         EdgeForm[None], 
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
           0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
            0}}}, {{{11.69, 13.37}, {7.57, 13.37}, {7.57, 12.37}, {7.76, 
           12.37}, {11.19, 8.93}, {11.19, 1.25}, {7.57, 1.25}, {7.57, 0.25}, {
           12.19, 0.25}, {12.19, 13.37}}, {{9.17, 12.37}, {11.17, 12.37}, {
           11.17, 10.37}}}], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIjIGYCYo+HVSLr3EUdbLmuLy6wlXZYUgBiyTlAxJUc
kt9FOdllyDuU6yrKf1mD4LM879F466sMV28MApuVHX7yv9y+3lkOQj9WdngU
Ib794gFZh/Dojfvf/FN22CHX+jrQAsHvf/JJ/tJ6GTgfbI+ODFz/2TMgIA03
vxroqodVQg5gSkQO6m4mVPubGR1E7I/d2fpE2cHy2tFckwYGB2n9uypsjCoO
YG89/GcP4wd5zm1QO/QHzr9wNeyN/u5f9jD9kHD4aQ8zX+z36XcnD3+3v8fE
2SXfrOygvqBzw8OX3+yDQAxHBB/srr9KcL7mW959BjuV4PrnCi7de7BcCW4+
LLwhND88PmDyEHcLOjg2PTo+Y/d3+/21shbpLYIOTglPLyjd/mZ//wH35JVM
CD4knATgfL0JC34YPuOH688Nq1237REf3HzNmP5DXzX4HLhVNOp6dv6yP3xZ
O1UyiRcePrlH/22q/sQDD79vGiANPA5yy1946NUzOOy61fU39TuPw5GNenmL
GxkdwPal8cLjB2Y+LP7SwEDCgQEMZODyf7+VPpgTKOOw9ldM7tE6XgfmCqCL
9sk43PfvnZ4nxAuJZ2NZB5j9UV933uraK+swf/XaG/HfeCDudZJzuA1yTgov
PH3CzBcAJg/mdHmHVElQyuSH851lXj8ykxKEq4eFNwCKHGBr
          "]]}, AspectRatio -> Automatic, ImageMargins -> {{0, 0}, {0, 2}}, 
        ImageSize -> {14., 14.}, 
        PlotRange -> {{-0.5, 13.62}, {-0.5, 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconIgnoreInNotebook"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJTIGYC4qAdcq2vAwUcbLmuLy6wFXdYUgBiSTp4PKwS
Weeu4GCgtVL4AouUw1zBpXsPlis4vDlgqexlLeWg+ZZ3n8FOBB+s/y+CH6S+
oHODoyJc/z0mzi75ZkW4+cYgsFnRoanYbco3N0kHEftjd7Y+UXRYeM3kvcVR
CYeQx0tnH2FQgroLwb9pWxmxYqs4nP9zQfrmV8bicP0g1VzXxeDmf9OI6T/0
lcsB6Bmgj6QcGMDggz1MvoTnRNz7f2/sf/K/3L7+saLDzmCriP/PX9iHR2/c
/+YfzL1P4Pz+Xoc96+IfwPkrVqZm1068AdcPtAxo4yW4+ccenln/jOGkPcz/
MjWJRqEGh+xh4QPjw8IPxoeFL0w/LPxh5sPiB0KzwuNPHhibO+Su2h8GKTvE
7aAYeYAl7+5Z+/rfVgXnOLgdPu6qO5h345j9voPiasGsXHA+JJw44Hy9CQt+
GD5jh+vPDatdt+0RG9x8TZByDTYH/uky5V7st+21JaZe4cxgdZgp5PnFqOuh
vQY/99ZlP1kcIO54CjWfxeFeX0HUh0Uv7bdEft15i4vVoa2/Q3Oiy1t77Xax
m+fKWeHxAzMfFn9pYCACj1+YfMeX29cbgfF/+LJ2qmQSKzx95B79t6n6Ews8
/cDsB3O5JB1Upv+fUPebxeHIRr28xQeB6e+Cy40PX1gdnjTPO7uKX8qh/8kn
+Uv57A4sYXy6m2KlHDjBCY3DwV9OLMvXGJjeda7MejaXC56eYeENAPSkchE=

          "]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
          0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
          3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJdIGYC4qAdcq2vL6o52HJdX1ywVwtC24rB+YdTViWE
XBKE86tF1rk/rOJxMAaBzxpwPkReDY2vCDVPCMpXhvPB+jerwfnPf6/8eOms
ukPDdoemR+wiUHkNuHtgfJh7YXy2xqnO3W/U0eQ14ObB+DD7YHzNmP5DXzWY
4PzY3KP/NlX/toeZBxYP/GIPsw/GBzuHSxrOX7TF/MchFSkH9g9iHgF/Ptmb
vrdwdTeSdNjZywYU+WQPcb8E1B+f7H8EP146m0XcYeE1E6DKT/Z9IGUXRB02
V3/aEJD92R5s7A4Rh1kzQeCr/YQFPwyfvRN2+Put9MEcwe/2894vP+ZtLuxw
3793ep7QT3uIOiEHkC651t/2YH8a80LtY3NA5TPB+RPrflsVnPtkL/8lJ6xW
T8jhTSDYo1DzxOB8BjBQh/O/aQADzlQTTV4bbh6MD7MPxoeFfwDI2czaDmfP
gAA0nCdqOTglPL2gdFvDweNhlci645oO8iAPzdOEmPNXw+EPMDp9k7Qc4nZ5
8jC9VncAG39KywE9/QIAH6UuJw==
          "]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}}}, {{{
          5.63, 11.05}, {5.63, 10.44}, {6.0569, 10.539}, {6.5048, 10.49}, {
          6.9, 10.3}, {9.53, 10.3}, {9.53, 11.05}}}], 
         FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}}}, {{{7.92, 3.73}, {
          8.0396, 3.4994}, {8.0784, 3.2353}, {8.03, 2.98}, {9.41, 2.98}, {
          9.41, 3.73}}}], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}}}, {{{6.73, 6.21}, {6.2, 5.82}, {6.67, 5.46}, {11.22, 5.46}, {
          11.22, 6.21}, {6.73, 6.21}}}], 
         FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}}}, {{{8., 8.7}, {
          8.0514, 8.4458}, {8.0162, 8.1818}, {7.9, 7.95}, {10.25, 7.95}, {
          10.25, 8.7}}}]}, AspectRatio -> Automatic, ImagePadding -> 0.75, 
        ImageSize -> {15., 15.}, 
        PlotRange -> {{0., 13.62}, {0., 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconHint"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         EdgeForm[None], 
         FaceForm[#], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4,
            3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
           3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
            3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
           3}, {1, 3, 3}}}, {{{9.015, 17.37}, {4.4559, 17.37}, {0.76, 
           13.645}, {0.76, 9.05}, {0.76, 4.455}, {4.4559, 0.73}, {9.015, 
           0.73}, {13.574, 0.73}, {17.27, 4.455}, {17.27, 9.05}, {17.27, 
           13.645}, {13.574, 17.37}, {9.015, 17.37}}, CompressedData["
1:eJxTTMoPSmViYGCQBGIQbcixRiYqRcVh3bak+pu23A5rf8XkHt2n7OC/fkpq
x2MOB8+5DWqHnik5nP8e/HjpbHYHj4dVIuvYlRyAiisjVrA78Bau6b6toegQ
ApQ9soDdQepAtIJjoILDJ8fzaVefczgs6Nzw8GWoPNx84yMb9fIeyzr831T9
acMFXod1N+LL/OVkHV5uX8/8/IyAw7Fck4btDrIOZQ/mCC7dK+TAXMGtomEn
6/DP+dfb1w0iDkIi9sfufJV1ePRy6iYeQzGHac7dOc+t5R3SwEDcwe7FzTW/
bBQc9kybwF+1TcLh7TwbnStSig7Hd+3oZSuQdDjab1iuy6jk0MIL8qGkg8f+
WlmL50oO9uHRG/fnSDr4fu4LLjmi7HDw1ELXbZslHGDhAzO//9BXjRh+VQeG
iXW/rQzEHKzv+/dOz1N1uFfY1fekSMRhzhGFDUUZqhB/LhaCmFOs6sC0h1VI
ZL+Ag8g6d2AIqjqYCJrZ7L3E64Ae/gDrrapT
           "], CompressedData["
1:eJxTTMoPSmViYGBQBGIQ/emSb5KAhJoDAwg0aDhYbjlRtu++isNudX7urWpK
DrX2pnG7Tqo4TFPsKy2sVnRQvv2zLqtGBULfUXAI6J2eJ8Ss4mDSsN2hKUnB
Ia0jOfZOmrKD/l0Vtsar8g5Gz9apPlms5GDgs4zLLVXeweLHoZRVDxQdnNdm
3ivskneQW/7CQ09e0aHEbco3tnh5h+jLex6LxCo4FErzPtC9IO+wVfT36Xed
8nDzH5tJHYheIOeQBxJ4pOCgu2nu++Vscg75Qs0HTjUqOjDkN7IcPS/rcObd
ycNOukoObqqlTLM4ZOD+O7JRL2/xQWkHHibtdrFITYeb8WX+ctOkHQ6eWui6
zVjLQfD4rh29bdIO/Ye+asTwazuAnJswRdohaIdc6+uL2g6qbI1TnbtlHGy5
ri8uqNVxEIgAhtg3WYj5B3QcgKEkzcsAdOfS2UcUDHQdEp5eULotqehw89z3
4Mepug63pGsSjUyVHMr3zZfSj9V1uKKdKvkoQtmhOGPi25p6XQeQ8p91KhB9
lroOIGH7UlWH+qw9JZNn6EDs54bGF4OOA9AVtlzhag6KG4oyJupqO4CCYaGr
mgM4XiO0HK5WvFQz9FBzuAzi7tR0cNv2+e8VCzUHJ5AF0poO6PEPAFdvzZk=

           "]}]}, AspectRatio -> Automatic, BaselinePosition -> Scaled[0.1], 
        ImagePadding -> 0.5, ImageSize -> {14., 14.778}, 
        PlotRange -> {{0.76, 17.27}, {0.73, 17.37}}]& )}], 
   Cell["Documentation", "Section"], 
   Cell["Usage", "Subsection"], 
   Cell[
    StyleData["UsageInputs", StyleDefinitions -> StyleData["Input"]], 
    CellMargins -> {{66, 10}, {0, 8}}, 
    StyleKeyMapping -> {"Tab" -> "UsageDescription"}, Evaluatable -> False, 
    CellEventActions -> {"ReturnKeyDown" :> With[{RSNB`nb$ = Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; NotebookWrite[RSNB`nb$, 
          Cell["", "UsageDescription"], All]; 
        SelectionMove[RSNB`nb$, Before, CellContents]], {"KeyDown", "\t"} :> 
      Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoStyles -> False, ShowCodeAssist -> False, 
    CodeAssistOptions -> {"DynamicHighlighting" -> False}, 
    LineSpacing -> {1, 3}, TabSpacings -> {2.5}, CounterIncrements -> "Text", 
    FontFamily -> "Source Sans Pro", FontSize -> 15, FontWeight -> "Plain"], 
   Cell[
    StyleData["UsageDescription", StyleDefinitions -> StyleData["Text"]], 
    CellMargins -> {{86, 10}, {7, 0}}, 
    StyleKeyMapping -> {"Backspace" -> "UsageInputs"}, CellGroupingRules -> 
    "OutputGrouping", 
    CellEventActions -> {"ReturnKeyDown" :> With[{RSNB`nb$ = Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; NotebookWrite[RSNB`nb$, 
          Cell[
           BoxData[""], "UsageInputs", FontFamily -> "Source Sans Pro"], All]; 
        SelectionMove[RSNB`nb$, Before, CellContents]], {"KeyDown", "\t"} :> 
      Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoSpellCheck -> False], 
   Cell["Details & Options", "Subsection"], 
   Cell[
    StyleData["Notes", StyleDefinitions -> StyleData["Item"]], CellDingbat -> 
    StyleBox["\[FilledVerySmallSquare]", FontColor -> GrayLevel[0.6]], 
    CellMargins -> {{66, 24}, {9, 7}}, ReturnCreatesNewCell -> False, 
    StyleKeyMapping -> {}, DefaultNewCellStyle -> "Notes", ShowAutoSpellCheck -> 
    False, GridBoxOptions -> {BaseStyle -> "TableNotes"}], 
   Cell[
    StyleData["TableNotes", StyleDefinitions -> StyleData["Notes"]], 
    CellDingbat -> None, CellFrameColor -> RGBColor[0.749, 0.694, 0.553], 
    StyleMenuListing -> None, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    GridBoxOptions -> {
     FrameStyle -> GrayLevel[0.906], 
      GridBoxAlignment -> {
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}}, 
      GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{True}}}, 
      GridDefaultElement -> Cell["\[Placeholder]", "TableText"]}], 
   Cell[
    StyleData["TableText"], DefaultInlineFormatType -> 
    "DefaultInputInlineFormatType", AutoQuoteCharacters -> {}, 
    PasteAutoQuoteCharacters -> {}, StyleMenuListing -> None], 
   Cell["Examples", "Subsection"], 
   Cell[
    StyleData["ExampleDelimiter"], Selectable -> False, ShowCellBracket -> 
    Automatic, CellMargins -> {{66, 14}, {5, 10}}, Evaluatable -> True, 
    CellGroupingRules -> {"SectionGrouping", 58}, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False, 
    CellLabelAutoDelete -> True, TabFilling -> 
    "\[LongDash]\[NegativeThickSpace]", TabSpacings -> {100}, 
    StyleMenuListing -> None, FontFamily -> "Verdana", FontWeight -> Bold, 
    FontSlant -> "Plain", FontColor -> GrayLevel[0.906]], 
   Cell[
    StyleData["ExampleText", StyleDefinitions -> StyleData["Text"]]], 
   Cell[
    StyleData["PageBreak", StyleDefinitions -> StyleData["ExampleDelimiter"]],
     Selectable -> False, CellFrame -> {{0, 0}, {1, 0}}, 
    CellMargins -> {{66, 14}, {15, -5}}, 
    CellElementSpacings -> {"CellMinHeight" -> 1}, Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), CellFrameColor -> 
    GrayLevel[
      Rational[77, 85]]], 
   Cell[
    StyleData["Subsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   
   Cell[
    StyleData["Subsubsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   
   Cell[
    StyleData["ExampleImage"], PageWidth :> 650, 
    CellMargins -> {{66, 66}, {16, 5}}, Evaluatable -> False, ShowCellLabel -> 
    False, MenuSortingValue -> 10000, 
    RasterBoxOptions -> {ImageEditMode -> False}], 
   Cell["Links", "Section"], 
   Cell[
    StyleData["Link"], FontFamily -> "Source Sans Pro", FontColor -> Dynamic[
      If[
       CurrentValue["MouseOver"], 
       RGBColor[0.855, 0.396, 0.145], 
       RGBColor[0.02, 0.286, 0.651]]]], 
   Cell[
    StyleData["StringTypeLink", StyleDefinitions -> StyleData["Link"]], 
    FontColor -> Dynamic[
      If[
       CurrentValue["MouseOver"], 
       RGBColor[0.969, 0.467, 0.], 
       GrayLevel[0.467]]]], 
   Cell[
    StyleData["CharactersRefLink"], ShowSpecialCharacters -> False], 
   Cell["Annotation", "Section"], 
   Cell[
    StyleData["Excluded"], 
    CellBracketOptions -> {
     "Color" -> RGBColor[0.9, 0.4, 0.4], "Thickness" -> 2}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Excluded"}, 
      "Message" -> {"Message", "MSG", "Excluded"}, 
      "Output" -> {"Output", "Excluded"}, "Print" -> {"Print", "Excluded"}, 
      "PrintTemporary" -> {"PrintTemporary", "Excluded"}}, CellFrameMargins -> 
    4, CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         TemplateBox[{
           StyleBox[
           "\"excluded\"", "ExcludedCellLabel", StripOnInput -> False], 
           "\"Excluded cells will not appear anywhere in the published \
resource except for the definition notebook\""}, "PrettyTooltipTemplate"]], 
        "ExcludedCellLabel"]}, {None, None}}, StyleMenuListing -> None, 
    Background -> RGBColor[1, 0.95, 0.95]], 
   Cell[
    StyleData["ExcludedCellLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontFamily -> "Source Sans Pro", FontSize -> 
    9, FontWeight -> Plain, FontSlant -> Italic, FontColor -> 
    RGBColor[0.9, 0.4, 0.4, 0.5], Background -> None], 
   Cell[
    StyleData["HiddenMaterial"], 
    CellBracketOptions -> {
     "Color" -> RGBColor[0.3, 0.7, 0.6], "Thickness" -> 2}, CellFrameMargins -> 
    4, CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         TemplateBox[{
           StyleBox[
           "\"hidden\"", "HiddenMaterialCellLabel", StripOnInput -> False], 
           "\"Hidden input cells will be closed on the published web page but \
will remain open in the downloadable example notebook\""}, 
          "PrettyTooltipTemplate"]], "HiddenMaterialCellLabel"]}, {
      None, None}}, StyleMenuListing -> None, Background -> 
    RGBColor[0.8, 1., 0.9]], 
   Cell[
    StyleData[
    "HiddenMaterialCellLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontFamily -> "Source Sans Pro", FontSize -> 
    9, FontWeight -> Plain, FontSlant -> Italic, FontColor -> 
    RGBColor[0.3, 0.7, 0.6, 0.5], Background -> None], 
   Cell[
    StyleData["Comment", StyleDefinitions -> StyleData["Text"]], 
    CellFrame -> {{3, 0}, {0, 0}}, CellMargins -> {{66, 0}, {1, 0}}, 
    CellElementSpacings -> {"ClosedCellHeight" -> 0}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Comment"}, 
      "Message" -> {"Message", "MSG", "Comment"}, 
      "Output" -> {"Output", "Comment"}, "Print" -> {"Print", "Comment"}, 
      "PrintTemporary" -> {"PrintTemporary", "Comment"}}, CellFrameColor -> 
    RGBColor[0.88072, 0.61104, 0.14205], 
    CellFrameLabelMargins -> {{0, 10}, {0, 0}}, FontColor -> GrayLevel[0.25], 
    Background -> RGBColor[0.982, 0.942, 0.871]], 
   Cell[
    StyleData["AuthorComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "AuthorComment"}, 
      "Message" -> {"Message", "MSG", "AuthorComment"}, 
      "Output" -> {"Output", "AuthorComment"}, 
      "Print" -> {"Print", "AuthorComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "AuthorComment"}}, 
    CellFrameColor -> RGBColor[0.36842, 0.50678, 0.7098], Background -> 
    RGBColor[0.905, 0.926, 0.956]], 
   Cell[
    StyleData["ReviewerComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "ReviewerComment"}, 
      "Message" -> {"Message", "MSG", "ReviewerComment"}, 
      "Output" -> {"Output", "ReviewerComment"}, 
      "Print" -> {"Print", "ReviewerComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "ReviewerComment"}}, 
    CellFrameColor -> RGBColor[0.56018, 0.69157, 0.19488], Background -> 
    RGBColor[0.934, 0.954, 0.879]], 
   Cell[
    StyleData["CommentLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontSlant -> "Italic", 
    PrivateFontOptions -> {"OperatorSubstitution" -> False}, FontColor -> 
    GrayLevel[0.5]], 
   Cell["Special Input", "Section"], 
   Cell[
    StyleData["FormObjectCell"], CellMargins -> {{66, 66}, {16, 5}}], 
   Cell[
    StyleData["LocalFileInput", StyleDefinitions -> StyleData["Input"]], 
    CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         ButtonBox[
         "\"Choose\"", FrameMargins -> {{5, 5}, {0, 0}}, 
          BaseStyle -> {"Panel", FontSize -> 12}, Evaluator -> Automatic, 
          Method -> "Queued", ButtonFunction :> 
          With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
            Quiet[
             
             Block[{$ContextPath = RSNB`$cp$, 
               ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
               False, DefinitionNotebookClient`$ButtonCodeID = None}, 
              Internal`WithLocalSettings[
               DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                  ReleaseHold[
                   CurrentValue[
                   RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                  "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                Annotation[
                DefinitionNotebookClient`$ButtonCodeID = 8263526385974082686; 
                 DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                   ReleaseHold[DefinitionNotebookClient`$ButtonCode = HoldForm[
                    If[$VersionNumber >= 13., 
                    DefinitionNotebookClient`LocalFileInputDialog[
                    "Demonstration", 
                    ParentCell[
                    EvaluationCell[]], "Type" -> "FileOpen"], 
                    MessageDialog[
                    "This feature requires Wolfram Language version 13 or \
later."]]]]], 
                 DefinitionNotebookClient`ButtonCodeID[8263526385974082686]], 
                DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
              Null]]], Appearance :> 
          FEPrivate`FrontEndResource[
           "FEExpressions", "GrayButtonNinePatchAppearance"]]]]}, {
      None, None}}], 
   Cell[
    StyleData["LocalDirectoryInput", StyleDefinitions -> StyleData["Input"]], 
    CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         ButtonBox[
         "\"Choose\"", FrameMargins -> {{5, 5}, {0, 0}}, 
          BaseStyle -> {"Panel", FontSize -> 12}, Evaluator -> Automatic, 
          Method -> "Queued", ButtonFunction :> 
          With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
            Quiet[
             
             Block[{$ContextPath = RSNB`$cp$, 
               ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
               False, DefinitionNotebookClient`$ButtonCodeID = None}, 
              Internal`WithLocalSettings[
               DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                  ReleaseHold[
                   CurrentValue[
                   RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                  "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                Annotation[
                DefinitionNotebookClient`$ButtonCodeID = 5263076252613204070; 
                 DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                   ReleaseHold[DefinitionNotebookClient`$ButtonCode = HoldForm[
                    If[$VersionNumber >= 13., 
                    DefinitionNotebookClient`LocalFileInputDialog[
                    "Demonstration", 
                    ParentCell[
                    EvaluationCell[]], "Type" -> "Directory"], 
                    MessageDialog[
                    "This feature requires Wolfram Language version 13 or \
later."]]]]], 
                 DefinitionNotebookClient`ButtonCodeID[5263076252613204070]], 
                DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
              Null]]], Appearance :> 
          FEPrivate`FrontEndResource[
           "FEExpressions", "GrayButtonNinePatchAppearance"]]]]}, {
      None, None}}], 
   Cell["Misc", "Section"], 
   Cell[
    StyleData["Item"], DefaultNewCellStyle -> "Item"], 
   Cell[
    StyleData["RelatedSymbol", StyleDefinitions -> StyleData["Item"]], 
    DefaultNewCellStyle -> {"RelatedSymbol", FontFamily -> "Source Sans Pro"},
     DefaultFormatType -> DefaultInputFormatType, FormatType -> InputForm], 
   Cell[
    StyleData["ButtonText"], FontFamily -> "Sans Serif", FontSize -> 11, 
    FontWeight -> Bold, FontColor -> RGBColor[0.459, 0.459, 0.459]], 
   Cell[
    StyleData["InlineFormula"], 
    HyphenationOptions -> {"HyphenationCharacter" -> "\[Continuation]"}, 
    LanguageCategory -> "Formula", AutoSpacing -> True, ScriptLevel -> 1, 
    SingleLetterItalics -> False, SpanMaxSize -> 1, StyleMenuListing -> None, 
    FontFamily -> "Source Sans Pro", FontSize -> 1. Inherited, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    FractionBoxOptions -> {BaseStyle -> {SpanMaxSize -> Automatic}}, 
    GridBoxOptions -> {
     GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}}], 
   Cell[
    StyleData["DockedCell"], CellFrameColor -> GrayLevel[0.75], Background -> 
    GrayLevel[0.9]]}, Visible -> False, FrontEndVersion -> 
  "14.1 for Mac OS X x86 (64-bit) (May 28, 2024)", StyleDefinitions -> 
  "PrivateStylesheetFormatting.nb"],
ExpressionUUID->"89167af5-bca4-4cea-90ce-c5db3abc6c52"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Name"->{
  Cell[580, 22, 269, 5, 70, "Title",ExpressionUUID->"8a4bb6cf-f8d7-4cd4-93e1-4a26585040ab",
   CellTags->{"Name", "Title"},
   CellID->501575800]},
 "Title"->{
  Cell[580, 22, 269, 5, 70, "Title",ExpressionUUID->"8a4bb6cf-f8d7-4cd4-93e1-4a26585040ab",
   CellTags->{"Name", "Title"},
   CellID->501575800]},
 "Caption"->{
  Cell[874, 31, 1495, 33, 70, "Section",ExpressionUUID->"e2720a40-7b9e-4f8d-bbe2-ca3ca60ea70a",
   CellTags->{"Caption", "CaptionCells", "TemplateCellGroup"},
   CellID->138150581]},
 "CaptionCells"->{
  Cell[874, 31, 1495, 33, 70, "Section",ExpressionUUID->"e2720a40-7b9e-4f8d-bbe2-ca3ca60ea70a",
   CellTags->{"Caption", "CaptionCells", "TemplateCellGroup"},
   CellID->138150581]},
 "TemplateCellGroup"->{
  Cell[874, 31, 1495, 33, 70, "Section",ExpressionUUID->"e2720a40-7b9e-4f8d-bbe2-ca3ca60ea70a",
   CellTags->{"Caption", "CaptionCells", "TemplateCellGroup"},
   CellID->138150581],
  Cell[3321, 88, 2246, 48, 70, "Section",ExpressionUUID->"e2c77f25-88a9-41c7-a20c-cfe17c8cd157",
   CellTags->{"Initialization Code", "InitializationCode", "TemplateCellGroup"},
   CellID->447669593],
  Cell[11339, 287, 1944, 40, 70, "Section",ExpressionUUID->"42bd5c21-704f-4e5d-b440-74a512685475",
   CellTags->{"Manipulate", "ManipulateGroup", "TemplateCellGroup"},
   CellID->791025314],
  Cell[42752, 941, 1302, 31, 70, "Section",ExpressionUUID->"12a07f3f-e377-4c22-b5b6-45fda6f8b02a",
   CellTags->{"SnapshotGroup", "Snapshots", "TemplateCellGroup"},
   CellID->98938448],
  Cell[320560, 5543, 1221, 29, 70, "Subsection",ExpressionUUID->"23c49b67-d802-4be5-aed0-6bc3c6066e72",
   CellTags->{"AuthorNames", "Contributed By", "TemplateCellGroup"},
   CellID->255368948],
  Cell[321944, 5581, 2197, 46, 70, "Subsection",ExpressionUUID->"a1cb5610-fcc6-4828-ac24-3c636db28c7f",
   CellTags->{"AuthorNotes", "DetailCells", "Details & Citations", "TemplateCellGroup"},
   CellID->441931514],
  Cell[324773, 5643, 2173, 45, 70, "Subsection",ExpressionUUID->"491297dc-888b-444c-9224-4c2a6c8bfb2f",
   CellTags->{"ReferenceCells", "References", "TemplateCellGroup"},
   CellID->592881655],
  Cell[327564, 5704, 1242, 30, 70, "Subsection",ExpressionUUID->"bfe26209-7226-4b2c-b9e3-0d13389f839c",
   CellTags->{"Submission Notes", "SubmissionNotes", "TemplateCellGroup"},
   CellID->797097429],
  Cell[329435, 5750, 1106, 27, 70, "Subsection",ExpressionUUID->"876e9fae-914a-45d0-b446-77538eac7ea6",
   CellTags->{"Keywords", "TemplateCellGroup"},
   CellID->938146184],
  Cell[330957, 5794, 1128, 27, 70, "Subsection",ExpressionUUID->"78d6e1cc-debb-4db8-b279-eb8ec360b82d",
   CellTags->{"Categories", "DemoCategories", "TemplateCellGroup"},
   CellID->845692503],
  Cell[517758, 9257, 1216, 30, 70, "Subsection",ExpressionUUID->"56fc461d-af89-42d0-ad8f-fe57c0319ca9",
   CellTags->{"Related Demonstrations", "RelatedDemonstrations", "TemplateCellGroup"},
   CellID->1132753],
  Cell[519594, 9303, 1558, 37, 70, "Subsection",ExpressionUUID->"3f14a5bc-45a6-4fd4-a3ee-974cbc711780",
   CellTags->{"External Links", "ExternalLinks", "TemplateCellGroup"},
   CellID->843468725],
  Cell[521768, 9356, 1191, 29, 70, "Subsection",ExpressionUUID->"ade08b8f-3c84-4712-840b-805c21a959c3",
   CellTags->{"Related Symbols", "RelatedSymbols", "TemplateCellGroup"},
   CellID->899564547],
  Cell[523595, 9401, 1070, 26, 70, "Subsection",ExpressionUUID->"1e86cdf8-38f6-4e0f-906f-409254360c6f",
   CellTags->{"Published Date", "PublishedDate", "TemplateCellGroup"},
   CellID->364555554],
  Cell[524825, 9436, 1073, 26, 70, "Subsection",ExpressionUUID->"217d591c-9a2c-481a-b82b-8727a4905f4b",
   CellTags->{"Compatibility", "TemplateCellGroup"},
   CellID->618273920]},
 "Initialization Code"->{
  Cell[3321, 88, 2246, 48, 70, "Section",ExpressionUUID->"e2c77f25-88a9-41c7-a20c-cfe17c8cd157",
   CellTags->{"Initialization Code", "InitializationCode", "TemplateCellGroup"},
   CellID->447669593]},
 "InitializationCode"->{
  Cell[3321, 88, 2246, 48, 70, "Section",ExpressionUUID->"e2c77f25-88a9-41c7-a20c-cfe17c8cd157",
   CellTags->{"Initialization Code", "InitializationCode", "TemplateCellGroup"},
   CellID->447669593]},
 "Manipulate"->{
  Cell[11339, 287, 1944, 40, 70, "Section",ExpressionUUID->"42bd5c21-704f-4e5d-b440-74a512685475",
   CellTags->{"Manipulate", "ManipulateGroup", "TemplateCellGroup"},
   CellID->791025314]},
 "ManipulateGroup"->{
  Cell[11339, 287, 1944, 40, 70, "Section",ExpressionUUID->"42bd5c21-704f-4e5d-b440-74a512685475",
   CellTags->{"Manipulate", "ManipulateGroup", "TemplateCellGroup"},
   CellID->791025314]},
 "SnapshotGroup"->{
  Cell[42752, 941, 1302, 31, 70, "Section",ExpressionUUID->"12a07f3f-e377-4c22-b5b6-45fda6f8b02a",
   CellTags->{"SnapshotGroup", "Snapshots", "TemplateCellGroup"},
   CellID->98938448]},
 "Snapshots"->{
  Cell[42752, 941, 1302, 31, 70, "Section",ExpressionUUID->"12a07f3f-e377-4c22-b5b6-45fda6f8b02a",
   CellTags->{"SnapshotGroup", "Snapshots", "TemplateCellGroup"},
   CellID->98938448]},
 "Snapshot"->{
  Cell[106902, 2011, 67179, 1107, 70, "Output",ExpressionUUID->"035394c1-58b8-4799-b270-0b3573117be6",
   CellTags->"Snapshot",
   CellID->579798803],
  Cell[174084, 3120, 70074, 1155, 70, "Output",ExpressionUUID->"d7dd2488-d7cc-47fc-b245-fbf302b9dcaa",
   CellTags->"Snapshot",
   CellID->1545175582],
  Cell[244161, 4277, 76064, 1252, 70, "Output",ExpressionUUID->"b14ff660-defe-4697-a15d-c0e475ed98aa",
   CellTags->"Snapshot",
   CellID->246263503]},
 "SourceInformationGroup"->{
  Cell[320262, 5534, 273, 5, 70, "Section",ExpressionUUID->"f56ffbe8-f4bb-434c-8362-eee556d8264d",
   CellTags->"SourceInformationGroup",
   CellID->62407265]},
 "AuthorNames"->{
  Cell[320560, 5543, 1221, 29, 70, "Subsection",ExpressionUUID->"23c49b67-d802-4be5-aed0-6bc3c6066e72",
   CellTags->{"AuthorNames", "Contributed By", "TemplateCellGroup"},
   CellID->255368948]},
 "Contributed By"->{
  Cell[320560, 5543, 1221, 29, 70, "Subsection",ExpressionUUID->"23c49b67-d802-4be5-aed0-6bc3c6066e72",
   CellTags->{"AuthorNames", "Contributed By", "TemplateCellGroup"},
   CellID->255368948]},
 "AuthorNotes"->{
  Cell[321944, 5581, 2197, 46, 70, "Subsection",ExpressionUUID->"a1cb5610-fcc6-4828-ac24-3c636db28c7f",
   CellTags->{"AuthorNotes", "DetailCells", "Details & Citations", "TemplateCellGroup"},
   CellID->441931514]},
 "DetailCells"->{
  Cell[321944, 5581, 2197, 46, 70, "Subsection",ExpressionUUID->"a1cb5610-fcc6-4828-ac24-3c636db28c7f",
   CellTags->{"AuthorNotes", "DetailCells", "Details & Citations", "TemplateCellGroup"},
   CellID->441931514]},
 "Details & Citations"->{
  Cell[321944, 5581, 2197, 46, 70, "Subsection",ExpressionUUID->"a1cb5610-fcc6-4828-ac24-3c636db28c7f",
   CellTags->{"AuthorNotes", "DetailCells", "Details & Citations", "TemplateCellGroup"},
   CellID->441931514]},
 "DefaultContent"->{
  Cell[324144, 5629, 592, 9, 70, "Text",ExpressionUUID->"d467a24f-541f-4029-800d-1cc131109903",
   CellTags->{"DefaultContent", "TabNext"},
   CellID->111711384],
  Cell[326949, 5690, 578, 9, 70, "Text",ExpressionUUID->"80a3996a-c4ca-47cc-b075-b35b051a719f",
   CellTags->{"DefaultContent", "TabNext"},
   CellID->423796343],
  Cell[328809, 5736, 589, 9, 70, "Text",ExpressionUUID->"89a32167-0ebd-49f9-bcdb-a6212bd55da7",
   CellTags->{"DefaultContent", "TabNext"},
   CellID->820829112],
  Cell[518977, 9289, 580, 9, 70, "Item",ExpressionUUID->"58a64f65-43db-4a43-9ca9-9035b1cfe149",
   CellTags->{"DefaultContent", "TabNext"},
   CellID->450624928],
  Cell[521155, 9342, 576, 9, 70, "Item",ExpressionUUID->"6138c95b-1b75-43a7-b8da-a8cd98051218",
   CellTags->{"DefaultContent", "TabNext"},
   CellID->21681708],
  Cell[522962, 9387, 596, 9, 70, "Item",ExpressionUUID->"6e2d7da2-8a3b-47d2-8015-248153bebe2f",
   CellTags->{"DefaultContent", "TabNext"},
   CellID->232771109]},
 "TabNext"->{
  Cell[324144, 5629, 592, 9, 70, "Text",ExpressionUUID->"d467a24f-541f-4029-800d-1cc131109903",
   CellTags->{"DefaultContent", "TabNext"},
   CellID->111711384],
  Cell[326949, 5690, 578, 9, 70, "Text",ExpressionUUID->"80a3996a-c4ca-47cc-b075-b35b051a719f",
   CellTags->{"DefaultContent", "TabNext"},
   CellID->423796343],
  Cell[328809, 5736, 589, 9, 70, "Text",ExpressionUUID->"89a32167-0ebd-49f9-bcdb-a6212bd55da7",
   CellTags->{"DefaultContent", "TabNext"},
   CellID->820829112],
  Cell[518977, 9289, 580, 9, 70, "Item",ExpressionUUID->"58a64f65-43db-4a43-9ca9-9035b1cfe149",
   CellTags->{"DefaultContent", "TabNext"},
   CellID->450624928],
  Cell[521155, 9342, 576, 9, 70, "Item",ExpressionUUID->"6138c95b-1b75-43a7-b8da-a8cd98051218",
   CellTags->{"DefaultContent", "TabNext"},
   CellID->21681708],
  Cell[522962, 9387, 596, 9, 70, "Item",ExpressionUUID->"6e2d7da2-8a3b-47d2-8015-248153bebe2f",
   CellTags->{"DefaultContent", "TabNext"},
   CellID->232771109]},
 "ReferenceCells"->{
  Cell[324773, 5643, 2173, 45, 70, "Subsection",ExpressionUUID->"491297dc-888b-444c-9224-4c2a6c8bfb2f",
   CellTags->{"ReferenceCells", "References", "TemplateCellGroup"},
   CellID->592881655]},
 "References"->{
  Cell[324773, 5643, 2173, 45, 70, "Subsection",ExpressionUUID->"491297dc-888b-444c-9224-4c2a6c8bfb2f",
   CellTags->{"ReferenceCells", "References", "TemplateCellGroup"},
   CellID->592881655]},
 "Submission Notes"->{
  Cell[327564, 5704, 1242, 30, 70, "Subsection",ExpressionUUID->"bfe26209-7226-4b2c-b9e3-0d13389f839c",
   CellTags->{"Submission Notes", "SubmissionNotes", "TemplateCellGroup"},
   CellID->797097429]},
 "SubmissionNotes"->{
  Cell[327564, 5704, 1242, 30, 70, "Subsection",ExpressionUUID->"bfe26209-7226-4b2c-b9e3-0d13389f839c",
   CellTags->{"Submission Notes", "SubmissionNotes", "TemplateCellGroup"},
   CellID->797097429]},
 "Keywords"->{
  Cell[329435, 5750, 1106, 27, 70, "Subsection",ExpressionUUID->"876e9fae-914a-45d0-b446-77538eac7ea6",
   CellTags->{"Keywords", "TemplateCellGroup"},
   CellID->938146184]},
 "Categories"->{
  Cell[330957, 5794, 1128, 27, 70, "Subsection",ExpressionUUID->"78d6e1cc-debb-4db8-b279-eb8ec360b82d",
   CellTags->{"Categories", "DemoCategories", "TemplateCellGroup"},
   CellID->845692503]},
 "DemoCategories"->{
  Cell[330957, 5794, 1128, 27, 70, "Subsection",ExpressionUUID->"78d6e1cc-debb-4db8-b279-eb8ec360b82d",
   CellTags->{"Categories", "DemoCategories", "TemplateCellGroup"},
   CellID->845692503]},
 "CheckboxCell"->{
  Cell[332088, 5823, 185633, 3429, 70, "Output",ExpressionUUID->"a24757e7-0fa7-4579-adb4-731b27420112",
   CellTags->{"CheckboxCell", "Topics", "Topics-Checkboxes"},
   CellID->87639950],
  Cell[527051, 9496, 1370, 35, 70, "Output",ExpressionUUID->"cbf54979-de6f-4ec4-93e9-bb56899db3c0",
   CellTags->{"CheckboxCell", "CompatibilityARSupport", "CompatibilityARSupport-Checkboxes"},
   CellID->203048737],
  Cell[530920, 9604, 1327, 34, 70, "Output",ExpressionUUID->"ac66556f-0951-469a-8794-656bdd1fc466",
   CellTags->{"CheckboxCell", "CompatibilityCloudSupport", "CompatibilityCloudSupport-Checkboxes"},
   CellID->19443273]},
 "Topics"->{
  Cell[332088, 5823, 185633, 3429, 70, "Output",ExpressionUUID->"a24757e7-0fa7-4579-adb4-731b27420112",
   CellTags->{"CheckboxCell", "Topics", "Topics-Checkboxes"},
   CellID->87639950]},
 "Topics-Checkboxes"->{
  Cell[332088, 5823, 185633, 3429, 70, "Output",ExpressionUUID->"a24757e7-0fa7-4579-adb4-731b27420112",
   CellTags->{"CheckboxCell", "Topics", "Topics-Checkboxes"},
   CellID->87639950]},
 "Related Demonstrations"->{
  Cell[517758, 9257, 1216, 30, 70, "Subsection",ExpressionUUID->"56fc461d-af89-42d0-ad8f-fe57c0319ca9",
   CellTags->{"Related Demonstrations", "RelatedDemonstrations", "TemplateCellGroup"},
   CellID->1132753]},
 "RelatedDemonstrations"->{
  Cell[517758, 9257, 1216, 30, 70, "Subsection",ExpressionUUID->"56fc461d-af89-42d0-ad8f-fe57c0319ca9",
   CellTags->{"Related Demonstrations", "RelatedDemonstrations", "TemplateCellGroup"},
   CellID->1132753]},
 "External Links"->{
  Cell[519594, 9303, 1558, 37, 70, "Subsection",ExpressionUUID->"3f14a5bc-45a6-4fd4-a3ee-974cbc711780",
   CellTags->{"External Links", "ExternalLinks", "TemplateCellGroup"},
   CellID->843468725]},
 "ExternalLinks"->{
  Cell[519594, 9303, 1558, 37, 70, "Subsection",ExpressionUUID->"3f14a5bc-45a6-4fd4-a3ee-974cbc711780",
   CellTags->{"External Links", "ExternalLinks", "TemplateCellGroup"},
   CellID->843468725]},
 "Related Symbols"->{
  Cell[521768, 9356, 1191, 29, 70, "Subsection",ExpressionUUID->"ade08b8f-3c84-4712-840b-805c21a959c3",
   CellTags->{"Related Symbols", "RelatedSymbols", "TemplateCellGroup"},
   CellID->899564547]},
 "RelatedSymbols"->{
  Cell[521768, 9356, 1191, 29, 70, "Subsection",ExpressionUUID->"ade08b8f-3c84-4712-840b-805c21a959c3",
   CellTags->{"Related Symbols", "RelatedSymbols", "TemplateCellGroup"},
   CellID->899564547]},
 "Published Date"->{
  Cell[523595, 9401, 1070, 26, 70, "Subsection",ExpressionUUID->"1e86cdf8-38f6-4e0f-906f-409254360c6f",
   CellTags->{"Published Date", "PublishedDate", "TemplateCellGroup"},
   CellID->364555554]},
 "PublishedDate"->{
  Cell[523595, 9401, 1070, 26, 70, "Subsection",ExpressionUUID->"1e86cdf8-38f6-4e0f-906f-409254360c6f",
   CellTags->{"Published Date", "PublishedDate", "TemplateCellGroup"},
   CellID->364555554]},
 "Compatibility"->{
  Cell[524825, 9436, 1073, 26, 70, "Subsection",ExpressionUUID->"217d591c-9a2c-481a-b82b-8727a4905f4b",
   CellTags->{"Compatibility", "TemplateCellGroup"},
   CellID->618273920]},
 "CompatibilityARSupport"->{
  Cell[527051, 9496, 1370, 35, 70, "Output",ExpressionUUID->"cbf54979-de6f-4ec4-93e9-bb56899db3c0",
   CellTags->{"CheckboxCell", "CompatibilityARSupport", "CompatibilityARSupport-Checkboxes"},
   CellID->203048737]},
 "CompatibilityARSupport-Checkboxes"->{
  Cell[527051, 9496, 1370, 35, 70, "Output",ExpressionUUID->"cbf54979-de6f-4ec4-93e9-bb56899db3c0",
   CellTags->{"CheckboxCell", "CompatibilityARSupport", "CompatibilityARSupport-Checkboxes"},
   CellID->203048737]},
 "ScrapeDefault"->{
  Cell[529632, 9567, 139, 3, 70, "Text",ExpressionUUID->"b799f96f-ef70-4f98-a74e-1c2a3716dff6",
   CellTags->"ScrapeDefault",
   CellID->639559915]},
 "CompatibilityCloudSupport"->{
  Cell[530920, 9604, 1327, 34, 70, "Output",ExpressionUUID->"ac66556f-0951-469a-8794-656bdd1fc466",
   CellTags->{"CheckboxCell", "CompatibilityCloudSupport", "CompatibilityCloudSupport-Checkboxes"},
   CellID->19443273]},
 "CompatibilityCloudSupport-Checkboxes"->{
  Cell[530920, 9604, 1327, 34, 70, "Output",ExpressionUUID->"ac66556f-0951-469a-8794-656bdd1fc466",
   CellTags->{"CheckboxCell", "CompatibilityCloudSupport", "CompatibilityCloudSupport-Checkboxes"},
   CellID->19443273]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Name", 673245, 12308},
 {"Title", 673405, 12312},
 {"Caption", 673567, 12316},
 {"CaptionCells", 673769, 12320},
 {"TemplateCellGroup", 673976, 12324},
 {"Initialization Code", 676931, 12370},
 {"InitializationCode", 677158, 12374},
 {"Manipulate", 677377, 12378},
 {"ManipulateGroup", 677591, 12382},
 {"SnapshotGroup", 677803, 12386},
 {"Snapshots", 678007, 12390},
 {"Snapshot", 678210, 12394},
 {"SourceInformationGroup", 678694, 12404},
 {"AuthorNames", 678873, 12408},
 {"Contributed By", 679091, 12412},
 {"AuthorNotes", 679306, 12416},
 {"DetailCells", 679541, 12420},
 {"Details & Citations", 679784, 12424},
 {"DefaultContent", 680022, 12428},
 {"TabNext", 681014, 12447},
 {"ReferenceCells", 682013, 12466},
 {"References", 682226, 12470},
 {"Submission Notes", 682445, 12474},
 {"SubmissionNotes", 682670, 12478},
 {"Keywords", 682888, 12482},
 {"Categories", 683081, 12486},
 {"DemoCategories", 683298, 12490},
 {"CheckboxCell", 683513, 12494},
 {"Topics", 684154, 12504},
 {"Topics-Checkboxes", 684367, 12508},
 {"Related Demonstrations", 684585, 12512},
 {"RelatedDemonstrations", 684826, 12516},
 {"External Links", 685060, 12520},
 {"ExternalLinks", 685279, 12524},
 {"Related Symbols", 685500, 12528},
 {"RelatedSymbols", 685722, 12532},
 {"Published Date", 685944, 12536},
 {"PublishedDate", 686163, 12540},
 {"Compatibility", 686382, 12544},
 {"CompatibilityARSupport", 686592, 12548},
 {"CompatibilityARSupport-Checkboxes", 686850, 12552},
 {"ScrapeDefault", 687088, 12556},
 {"CompatibilityCloudSupport", 687270, 12560},
 {"CompatibilityCloudSupport-Checkboxes", 687536, 12564}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 269, 5, 70, "Title",ExpressionUUID->"8a4bb6cf-f8d7-4cd4-93e1-4a26585040ab",
 CellTags->{"Name", "Title"},
 CellID->501575800],
Cell[CellGroupData[{
Cell[874, 31, 1495, 33, 70, "Section",ExpressionUUID->"e2720a40-7b9e-4f8d-bbe2-ca3ca60ea70a",
 CellTags->{"Caption", "CaptionCells", "TemplateCellGroup"},
 CellID->138150581],
Cell[2372, 66, 912, 17, 70, "Text",ExpressionUUID->"855c7807-14be-4b54-9ec1-feede751b7da",
 CellID->190671489]
}, Closed]],
Cell[CellGroupData[{
Cell[3321, 88, 2246, 48, 70, "Section",ExpressionUUID->"e2c77f25-88a9-41c7-a20c-cfe17c8cd157",
 CellTags->{"Initialization Code", "InitializationCode", "TemplateCellGroup"},
 CellID->447669593],
Cell[5570, 138, 5732, 144, 70, "Input",ExpressionUUID->"efe37013-a7c4-4ca3-916c-719dd5f48a37",
 InitializationCell->True,
 CellID->175598913]
}, Closed]],
Cell[CellGroupData[{
Cell[11339, 287, 1944, 40, 70, "Section",ExpressionUUID->"42bd5c21-704f-4e5d-b440-74a512685475",
 CellTags->{"Manipulate", "ManipulateGroup", "TemplateCellGroup"},
 CellID->791025314],
Cell[CellGroupData[{
Cell[13308, 331, 16255, 356, 70, "Input",ExpressionUUID->"9498f9be-8b0a-436d-85c8-fec56c95c13f",
 CellID->788408435],
Cell[29566, 689, 13137, 246, 70, "Output",ExpressionUUID->"8507885a-43c5-41a5-8ccc-7614bf5518ca",
 CellID->76495603]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[42752, 941, 1302, 31, 70, "Section",ExpressionUUID->"12a07f3f-e377-4c22-b5b6-45fda6f8b02a",
 CellTags->{"SnapshotGroup", "Snapshots", "TemplateCellGroup"},
 CellID->98938448],
Cell[44057, 974, 62842, 1035, 70, "Output",ExpressionUUID->"e0c48a05-cb8a-4a5c-b330-8f3903ed892b",
 CellID->604095604],
Cell[106902, 2011, 67179, 1107, 70, "Output",ExpressionUUID->"035394c1-58b8-4799-b270-0b3573117be6",
 CellTags->"Snapshot",
 CellID->579798803],
Cell[174084, 3120, 70074, 1155, 70, "Output",ExpressionUUID->"d7dd2488-d7cc-47fc-b245-fbf302b9dcaa",
 CellTags->"Snapshot",
 CellID->1545175582],
Cell[244161, 4277, 76064, 1252, 70, "Output",ExpressionUUID->"b14ff660-defe-4697-a15d-c0e475ed98aa",
 CellTags->"Snapshot",
 CellID->246263503]
}, Closed]],
Cell[CellGroupData[{
Cell[320262, 5534, 273, 5, 70, "Section",ExpressionUUID->"f56ffbe8-f4bb-434c-8362-eee556d8264d",
 CellTags->"SourceInformationGroup",
 CellID->62407265],
Cell[CellGroupData[{
Cell[320560, 5543, 1221, 29, 70, "Subsection",ExpressionUUID->"23c49b67-d802-4be5-aed0-6bc3c6066e72",
 CellTags->{"AuthorNames", "Contributed By", "TemplateCellGroup"},
 CellID->255368948],
Cell[321784, 5574, 123, 2, 70, "Text",ExpressionUUID->"6aefe4d7-90a7-4db4-a274-c5021475d2f0",
 CellID->943678134]
}, Open  ]],
Cell[CellGroupData[{
Cell[321944, 5581, 2197, 46, 70, "Subsection",ExpressionUUID->"a1cb5610-fcc6-4828-ac24-3c636db28c7f",
 CellTags->{"AuthorNotes", "DetailCells", "Details & Citations", "TemplateCellGroup"},
 CellID->441931514],
Cell[324144, 5629, 592, 9, 70, "Text",ExpressionUUID->"d467a24f-541f-4029-800d-1cc131109903",
 CellTags->{"DefaultContent", "TabNext"},
 CellID->111711384]
}, Open  ]],
Cell[CellGroupData[{
Cell[324773, 5643, 2173, 45, 70, "Subsection",ExpressionUUID->"491297dc-888b-444c-9224-4c2a6c8bfb2f",
 CellTags->{"ReferenceCells", "References", "TemplateCellGroup"},
 CellID->592881655],
Cell[326949, 5690, 578, 9, 70, "Text",ExpressionUUID->"80a3996a-c4ca-47cc-b075-b35b051a719f",
 CellTags->{"DefaultContent", "TabNext"},
 CellID->423796343]
}, Open  ]],
Cell[CellGroupData[{
Cell[327564, 5704, 1242, 30, 70, "Subsection",ExpressionUUID->"bfe26209-7226-4b2c-b9e3-0d13389f839c",
 CellTags->{"Submission Notes", "SubmissionNotes", "TemplateCellGroup"},
 CellID->797097429],
Cell[328809, 5736, 589, 9, 70, "Text",ExpressionUUID->"89a32167-0ebd-49f9-bcdb-a6212bd55da7",
 CellTags->{"DefaultContent", "TabNext"},
 CellID->820829112]
}, Open  ]],
Cell[CellGroupData[{
Cell[329435, 5750, 1106, 27, 70, "Subsection",ExpressionUUID->"876e9fae-914a-45d0-b446-77538eac7ea6",
 CellTags->{"Keywords", "TemplateCellGroup"},
 CellID->938146184],
Cell[330544, 5779, 117, 2, 70, "Item",ExpressionUUID->"ebe304c7-4bce-4370-9a4e-774ac69ea56d",
 CellID->435020502],
Cell[330664, 5783, 126, 2, 70, "Item",ExpressionUUID->"9ce147d9-f005-40ff-af20-78888f211055",
 CellID->622029586],
Cell[330793, 5787, 127, 2, 70, "Item",ExpressionUUID->"30513fef-85c1-498a-aeb2-f5d6eecfc78d",
 CellID->20386726]
}, Open  ]],
Cell[CellGroupData[{
Cell[330957, 5794, 1128, 27, 70, "Subsection",ExpressionUUID->"78d6e1cc-debb-4db8-b279-eb8ec360b82d",
 CellTags->{"Categories", "DemoCategories", "TemplateCellGroup"},
 CellID->845692503],
Cell[332088, 5823, 185633, 3429, 70, "Output",ExpressionUUID->"a24757e7-0fa7-4579-adb4-731b27420112",
 CellTags->{"CheckboxCell", "Topics", "Topics-Checkboxes"},
 CellID->87639950]
}, Open  ]],
Cell[CellGroupData[{
Cell[517758, 9257, 1216, 30, 70, "Subsection",ExpressionUUID->"56fc461d-af89-42d0-ad8f-fe57c0319ca9",
 CellTags->{"Related Demonstrations", "RelatedDemonstrations", "TemplateCellGroup"},
 CellID->1132753],
Cell[518977, 9289, 580, 9, 70, "Item",ExpressionUUID->"58a64f65-43db-4a43-9ca9-9035b1cfe149",
 CellTags->{"DefaultContent", "TabNext"},
 CellID->450624928]
}, Open  ]],
Cell[CellGroupData[{
Cell[519594, 9303, 1558, 37, 70, "Subsection",ExpressionUUID->"3f14a5bc-45a6-4fd4-a3ee-974cbc711780",
 CellTags->{"External Links", "ExternalLinks", "TemplateCellGroup"},
 CellID->843468725],
Cell[521155, 9342, 576, 9, 70, "Item",ExpressionUUID->"6138c95b-1b75-43a7-b8da-a8cd98051218",
 CellTags->{"DefaultContent", "TabNext"},
 CellID->21681708]
}, Open  ]],
Cell[CellGroupData[{
Cell[521768, 9356, 1191, 29, 70, "Subsection",ExpressionUUID->"ade08b8f-3c84-4712-840b-805c21a959c3",
 CellTags->{"Related Symbols", "RelatedSymbols", "TemplateCellGroup"},
 CellID->899564547],
Cell[522962, 9387, 596, 9, 70, "Item",ExpressionUUID->"6e2d7da2-8a3b-47d2-8015-248153bebe2f",
 CellTags->{"DefaultContent", "TabNext"},
 CellID->232771109]
}, Open  ]],
Cell[CellGroupData[{
Cell[523595, 9401, 1070, 26, 70, "Subsection",ExpressionUUID->"1e86cdf8-38f6-4e0f-906f-409254360c6f",
 CellTags->{"Published Date", "PublishedDate", "TemplateCellGroup"},
 CellID->364555554],
Cell[524668, 9429, 120, 2, 70, "Text",ExpressionUUID->"7f90ab6d-8168-43ce-bbfe-0050c44718a2",
 CellID->612364796]
}, Open  ]],
Cell[CellGroupData[{
Cell[524825, 9436, 1073, 26, 70, "Subsection",ExpressionUUID->"217d591c-9a2c-481a-b82b-8727a4905f4b",
 CellTags->{"Compatibility", "TemplateCellGroup"},
 CellID->618273920],
Cell[CellGroupData[{
Cell[525923, 9466, 1125, 28, 70, "Subsubsection",ExpressionUUID->"8368e5da-33bb-4d3f-a313-6ada7d6f9ed7",
 CellID->375137771],
Cell[527051, 9496, 1370, 35, 70, "Output",ExpressionUUID->"cbf54979-de6f-4ec4-93e9-bb56899db3c0",
 CellTags->{"CheckboxCell", "CompatibilityARSupport", "CompatibilityARSupport-Checkboxes"},
 CellID->203048737]
}, Closed]],
Cell[CellGroupData[{
Cell[528458, 9536, 1171, 29, 70, "Subsubsection",ExpressionUUID->"cb793d50-510d-4050-b7e3-9c8b2e7dc7f0",
 CellID->904163252],
Cell[529632, 9567, 139, 3, 70, "Text",ExpressionUUID->"b799f96f-ef70-4f98-a74e-1c2a3716dff6",
 CellTags->"ScrapeDefault",
 CellID->639559915]
}, Open  ]],
Cell[CellGroupData[{
Cell[529808, 9575, 1109, 27, 70, "Subsubsection",ExpressionUUID->"6d153275-abeb-41d5-b00c-dd6e668dca64",
 CellID->180966586],
Cell[530920, 9604, 1327, 34, 70, "Output",ExpressionUUID->"ac66556f-0951-469a-8794-656bdd1fc466",
 CellTags->{"CheckboxCell", "CompatibilityCloudSupport", "CompatibilityCloudSupport-Checkboxes"},
 CellID->19443273]
}, Closed]]
}, Open  ]]
}, Closed]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
